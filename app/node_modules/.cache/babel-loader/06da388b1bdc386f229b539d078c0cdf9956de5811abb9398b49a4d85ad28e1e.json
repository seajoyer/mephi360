{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { hasReactNode } from \"../../../helpers/react/node\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { Touch } from \"../../Service/Touch/Touch\";\nimport { SliderSteps } from \"./components/SliderSteps/SliderSteps\";\nimport { SliderThumb } from \"./components/SliderThumb/SliderThumb\";\nimport { useSlider } from \"./hooks/useSlider\";\n/**\n * Renders a slider input for selecting a value or range from a predefined interval. Supports single or multiple thumbs for range selection.\n * It leverages custom hooks for logic and state management and provides customization options for appearance and functionality.\n */\nexport const Slider = _param => {\n  var {\n      className,\n      disabled,\n      before,\n      after\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"disabled\", \"before\", \"after\"]);\n  const platform = usePlatform();\n  const {\n    steps,\n    multiple,\n    containerProps,\n    startValueInPercent,\n    endReversedValueInPercent,\n    thumbsContainerRef,\n    thumbStartInputRef,\n    thumbEndInputRef,\n    handlePointerStart,\n    handlePointerMove,\n    handlePointerEnd,\n    getInputProps\n  } = useSlider(restProps);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classNames(\"tgui-717c3649db8d5af2\", platform === 'ios' && \"tgui-d2e2a2e28ef0f746\", disabled && \"tgui-c591a831de13ba23\", className),\n    children: [hasReactNode(before) && /*#__PURE__*/_jsx(\"div\", {\n      className: \"tgui-6598607160233201\",\n      children: before\n    }), /*#__PURE__*/_jsxs(Touch, _object_spread_props(_object_spread({}, containerProps), {\n      className: \"tgui-35faba867393ce37\",\n      onStart: disabled ? undefined : handlePointerStart,\n      onMove: disabled ? undefined : handlePointerMove,\n      onEnd: disabled ? undefined : handlePointerEnd,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"tgui-e11a455378c63b15\",\n        children: steps !== undefined && /*#__PURE__*/_jsx(SliderSteps, {\n          steps: steps\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"tgui-4de4feff2dcc975c\",\n        style: multiple ? {\n          left: `${startValueInPercent}%`,\n          right: `${100 - endReversedValueInPercent}%`\n        } : {\n          width: `${startValueInPercent}%`\n        }\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        ref: thumbsContainerRef,\n        className: \"tgui-7fe9f0fbc9771947\",\n        children: [/*#__PURE__*/_jsx(SliderThumb, {\n          \"data-type\": \"start\",\n          ref: thumbStartInputRef,\n          style: {\n            left: `${startValueInPercent}%`,\n            zIndex: multiple && startValueInPercent >= 50 ? 3 : undefined\n          },\n          inputProps: getInputProps(false)\n        }), multiple && /*#__PURE__*/_jsx(SliderThumb, {\n          \"data-type\": \"end\",\n          ref: thumbEndInputRef,\n          style: {\n            left: `${endReversedValueInPercent}%`\n          },\n          inputProps: getInputProps(true)\n        })]\n      })]\n    })), hasReactNode(after) && /*#__PURE__*/_jsx(\"div\", {\n      className: \"tgui-a56564bcfd4b56e5\",\n      children: after\n    })]\n  });\n};","map":{"version":3,"names":["classNames","hasReactNode","usePlatform","Touch","SliderSteps","SliderThumb","useSlider","Slider","_param","className","disabled","before","after","restProps","_object_without_properties","platform","steps","multiple","containerProps","startValueInPercent","endReversedValueInPercent","thumbsContainerRef","thumbStartInputRef","thumbEndInputRef","handlePointerStart","handlePointerMove","handlePointerEnd","getInputProps","_jsxs","_jsx","_object_spread_props","_object_spread","onStart","undefined","onMove","onEnd","style","left","right","width","ref","zIndex","inputProps"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Form/Slider/Slider.tsx"],"sourcesContent":["'use client';\n\nimport { ChangeEvent, HTMLAttributes, ReactNode } from 'react';\nimport styles from './Slider.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Touch, type TouchEvent } from 'components/Service/Touch/Touch';\nimport { SliderSteps } from './components/SliderSteps/SliderSteps';\nimport { SliderThumb } from './components/SliderThumb/SliderThumb';\nimport { useSlider } from './hooks/useSlider';\n\nexport interface SliderBaseProps extends Omit<HTMLAttributes<HTMLDivElement>, 'value' | 'defaultValue' | 'onChange'> {\n  /** Minimum allowed value. Defaults to 0. */\n  min?: number;\n  /** Maximum allowed value. Defaults to 100. */\n  max?: number;\n  /** Step value for each movement. Defaults to 1. */\n  step?: number;\n  /** Indicates whether the slider is disabled. */\n  disabled?: boolean;\n  /** Content to be rendered before the slider. */\n  before?: ReactNode;\n  /** Content to be rendered after the slider. */\n  after?: ReactNode;\n  /** Provides a way to generate dynamic aria-label based on the slider's thumb index. */\n  getAriaLabel?: (index: number) => string;\n  /** Provides a way to customize the aria-valuetext for more flexible text representation based on the slider's value. */\n  getAriaValueText?: (value: number, index: number) => string;\n}\n\nexport interface SliderNoMultipleProps extends SliderBaseProps {\n  /** Enables single-thumb mode. */\n  multiple?: false;\n  /** The current value of the slider. */\n  value?: number;\n  /** Default value of the slider. */\n  defaultValue?: number;\n  /** Callback for when the slider value changes. */\n  onChange?: (value: number, event: TouchEvent | ChangeEvent) => void;\n}\n\nexport interface SliderMultipleProps extends SliderBaseProps {\n  /** Enables multiple-thumb mode for range selection. */\n  multiple: true;\n  /** The current value of the slider, expecting a tuple for start and end values. */\n  value?: [number, number];\n  /** Default value of the slider, expecting a tuple for start and end values. */\n  defaultValue?: [number, number];\n  /** Callback for when the slider value changes. */\n  onChange?: (value: [number, number], event: TouchEvent | ChangeEvent) => void;\n}\n\nexport type SliderProps = SliderNoMultipleProps | SliderMultipleProps;\n\n/**\n * Renders a slider input for selecting a value or range from a predefined interval. Supports single or multiple thumbs for range selection.\n * It leverages custom hooks for logic and state management and provides customization options for appearance and functionality.\n */\nexport const Slider = ({ className, disabled, before, after, ...restProps }: SliderProps) => {\n  const platform = usePlatform();\n\n  const {\n    steps,\n    multiple,\n    containerProps,\n    startValueInPercent,\n    endReversedValueInPercent,\n    thumbsContainerRef,\n    thumbStartInputRef,\n    thumbEndInputRef,\n    handlePointerStart,\n    handlePointerMove,\n    handlePointerEnd,\n    getInputProps,\n  } = useSlider(restProps);\n\n  return (\n    <div className={classNames(\n      styles.wrapper,\n      platform === 'ios' && styles['wrapper--ios'],\n      disabled && styles['wrapper--disabled'],\n      className,\n    )}>\n      {hasReactNode(before) && (\n        <div className={styles.before}>\n          {before}\n        </div>\n      )}\n      <Touch\n        {...containerProps}\n        className={styles.slider}\n        onStart={disabled ? undefined : handlePointerStart}\n        onMove={disabled ? undefined : handlePointerMove}\n        onEnd={disabled ? undefined : handlePointerEnd}\n      >\n        <div className={styles.track}>\n          {steps !== undefined && <SliderSteps steps={steps} />}\n        </div>\n        <div\n          className={styles.trackFilled}\n          style={multiple\n            ? { left: `${startValueInPercent}%`, right: `${100 - endReversedValueInPercent}%` }\n            : { width: `${startValueInPercent}%` }\n          }\n        />\n        <div ref={thumbsContainerRef} className={styles.thumbs}>\n          <SliderThumb\n            data-type=\"start\"\n            ref={thumbStartInputRef}\n            style={{\n              left: `${startValueInPercent}%`,\n              zIndex: multiple && startValueInPercent >= 50 ? 3 : undefined,\n            }}\n            inputProps={getInputProps(false)}\n          />\n          {multiple && (\n            <SliderThumb\n              data-type=\"end\"\n              ref={thumbEndInputRef}\n              style={{ left: `${endReversedValueInPercent}%` }}\n              inputProps={getInputProps(true)}\n            />\n          )}\n        </div>\n      </Touch>\n      {hasReactNode(after) && (\n        <div className={styles.after}>\n          {after}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,YAAY,QAAQ;AAC7B,SAASC,WAAW,QAAQ;AAE5B,SAASC,KAAK,QAAyB;AACvC,SAASC,WAAW,QAAQ;AAC5B,SAASC,WAAW,QAAQ;AAC5B,SAASC,SAAS,QAAQ;AA6C1B;;;;AAIA,OAAO,MAAMC,MAAA,GAASC,MAAA;MAAC;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAK,CAA6B,GAAAJ,MAAA;IAAxBK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAAvC,aAAW,YAAU,UAAQ,Q;EACpD,MAAMO,QAAA,GAAWb,WAAA;EAEjB,MAAM;IACJc,KAAK;IACLC,QAAQ;IACRC,cAAc;IACdC,mBAAmB;IACnBC,yBAAyB;IACzBC,kBAAkB;IAClBC,kBAAkB;IAClBC,gBAAgB;IAChBC,kBAAkB;IAClBC,iBAAiB;IACjBC,gBAAgB;IAChBC;EAAa,CACd,GAAGrB,SAAA,CAAUO,SAAA;EAEd,oBACEe,KAAA,CAAC;IAAInB,SAAA,EAAWT,UAAA,0BAEde,QAAA,KAAa,kCACbL,QAAA,6BACAD,SAAA;eAECR,YAAA,CAAaU,MAAA,kBACZkB,IAAA,CAAC;MAAIpB,SAAS;gBACXE;qBAGLiB,KAAA,CAACzB,KAAA,EAAA2B,oBAAA,CAAAC,cAAA,KACKb,cAAA;MACJT,SAAS;MACTuB,OAAA,EAAStB,QAAA,GAAWuB,SAAA,GAAYT,kBAAA;MAChCU,MAAA,EAAQxB,QAAA,GAAWuB,SAAA,GAAYR,iBAAA;MAC/BU,KAAA,EAAOzB,QAAA,GAAWuB,SAAA,GAAYP,gBAAA;8BAE9BG,IAAA,CAAC;QAAIpB,SAAS;kBACXO,KAAA,KAAUiB,SAAA,iBAAaJ,IAAA,CAACzB,WAAA;UAAYY,KAAA,EAAOA;;uBAE9Ca,IAAA,CAAC;QACCpB,SAAS;QACT2B,KAAA,EAAOnB,QAAA,GACH;UAAEoB,IAAA,EAAM,GAAGlB,mBAAA,GAAsB;UAAEmB,KAAA,EAAO,GAAG,MAAMlB,yBAAA;QAA6B,IAChF;UAAEmB,KAAA,EAAO,GAAGpB,mBAAA;QAAuB;uBAGzCS,KAAA,CAAC;QAAIY,GAAA,EAAKnB,kBAAA;QAAoBZ,SAAS;gCACrCoB,IAAA,CAACxB,WAAA;UACC,aAAU;UACVmC,GAAA,EAAKlB,kBAAA;UACLc,KAAA,EAAO;YACLC,IAAA,EAAM,GAAGlB,mBAAA,GAAsB;YAC/BsB,MAAA,EAAQxB,QAAA,IAAYE,mBAAA,IAAuB,KAAK,IAAIc;UACtD;UACAS,UAAA,EAAYf,aAAA,CAAc;YAE3BV,QAAA,iBACCY,IAAA,CAACxB,WAAA;UACC,aAAU;UACVmC,GAAA,EAAKjB,gBAAA;UACLa,KAAA,EAAO;YAAEC,IAAA,EAAM,GAAGjB,yBAAA;UAA6B;UAC/CsB,UAAA,EAAYf,aAAA,CAAc;;;SAKjC1B,YAAA,CAAaW,KAAA,kBACZiB,IAAA,CAAC;MAAIpB,SAAS;gBACXG;;;AAKX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}