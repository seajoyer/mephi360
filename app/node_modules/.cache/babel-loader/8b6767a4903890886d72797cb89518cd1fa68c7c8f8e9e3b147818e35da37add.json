{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { callMultiple } from \"../../../helpers/function\";\n/**\n * Provides a way to hide or show content, such as details or spoilers, with a simple click.\n * The visibility state can be controlled externally via props or toggled by user interaction.\n */\nexport const Spoiler = _param => {\n  var {\n      visible = false,\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"visible\", \"className\", \"children\"]);\n  const [isVisible, setIsVisible] = useState(visible);\n  useEffect(() => {\n    setIsVisible(visible);\n  }, [visible]);\n  const toggle = () => setIsVisible(!isVisible);\n  return (\n    // It's a spoiler component, content inside is available for screen readers\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    /*#__PURE__*/\n    _jsx(\"div\", _object_spread_props(_object_spread({}, restProps), {\n      className: classNames(\"tgui-86f452d8e92a2075\", isVisible && \"tgui-aff2a6268e887037\", className),\n      onClick: callMultiple(toggle, restProps.onClick),\n      onKeyDown: callMultiple(toggle, restProps.onKeyDown),\n      children: children\n    }))\n  );\n};","map":{"version":3,"names":["useEffect","useState","classNames","callMultiple","Spoiler","_param","visible","className","children","restProps","_object_without_properties","isVisible","setIsVisible","toggle","_jsx","_object_spread_props","_object_spread","onClick","onKeyDown"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Feedback/Spoiler/Spoiler.tsx"],"sourcesContent":["'use client';\n\nimport { HTMLAttributes, useEffect, useState } from 'react';\nimport styles from './Spoiler.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { callMultiple } from 'helpers/function';\n\nexport interface SpoilerProps extends HTMLAttributes<HTMLDivElement> {\n  /** Controls the visibility of the content inside the spoiler. */\n  visible?: boolean;\n}\n\n/**\n * Provides a way to hide or show content, such as details or spoilers, with a simple click.\n * The visibility state can be controlled externally via props or toggled by user interaction.\n */\nexport const Spoiler = ({\n  visible = false,\n  className,\n  children,\n  ...restProps\n}: SpoilerProps) => {\n  const [isVisible, setIsVisible] = useState(visible);\n\n  useEffect(() => {\n    setIsVisible(visible);\n  }, [visible]);\n\n  const toggle = () => setIsVisible(!isVisible);\n  return (\n    // It's a spoiler component, content inside is available for screen readers\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    <div\n      {...restProps}\n      className={classNames(\n        styles.wrapper,\n        isVisible && styles['wrapper--visible'],\n        className,\n      )}\n      onClick={callMultiple(toggle, restProps.onClick)}\n      onKeyDown={callMultiple(toggle, restProps.onKeyDown)}\n    >\n      {children}\n    </div>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,SAAyBA,SAAS,EAAEC,QAAQ,QAAQ;AAGpD,SAASC,UAAU,QAAQ;AAC3B,SAASC,YAAY,QAAQ;AAO7B;;;;AAIA,OAAO,MAAMC,OAAA,GAAUC,MAAA;MAAC;MACtBC,OAAA,GAAU,KAAK;MACfC,SAAS;MACTC;IAAQ,CAEK,GAAAH,MAAA;IADVI,SAAA,GAAAC,0BAAA,CAAAL,MAAA,GAHH,WACA,aACA,W;EAGA,MAAM,CAACM,SAAA,EAAWC,YAAA,CAAa,GAAGX,QAAA,CAASK,OAAA;EAE3CN,SAAA,CAAU;IACRY,YAAA,CAAaN,OAAA;EACf,GAAG,CAACA,OAAA,CAAQ;EAEZ,MAAMO,MAAA,GAASA,CAAA,KAAMD,YAAA,CAAa,CAACD,SAAA;EACnC;IACE;IACA;;IACAG,IAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA,KACKP,SAAA;MACJF,SAAA,EAAWL,UAAA,0BAETS,SAAA,6BACAJ,SAAA;MAEFU,OAAA,EAASd,YAAA,CAAaU,MAAA,EAAQJ,SAAA,CAAUQ,OAAO;MAC/CC,SAAA,EAAWf,YAAA,CAAaU,MAAA,EAAQJ,SAAA,CAAUS,SAAS;gBAElDV;;;AAGP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}