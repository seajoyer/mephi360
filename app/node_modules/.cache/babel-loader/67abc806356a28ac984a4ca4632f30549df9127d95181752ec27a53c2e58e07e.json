{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { hasReactNode } from \"../../../helpers/react/node\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { useTimeout } from \"../../../hooks/useTimeout\";\nimport { RootRenderer } from \"../../Service/RootRenderer/RootRenderer\";\nimport { Caption } from \"../../Typography/Caption/Caption\";\nimport { SnackbarButton } from \"./components/SnackbarButton/SnackbarButton\";\nconst TRANSITION_FINISH_DURATION = 320;\n/**\n * Displays a brief message at the bottom of the screen, which can contain actions and other content.\n * It automatically dismisses after a set duration, providing feedback or interaction prompts to users.\n */\nexport const Snackbar = _param => {\n  var {\n      before,\n      after,\n      description,\n      link,\n      children,\n      className,\n      duration = 4000,\n      onClose\n    } = _param,\n    restProps = _object_without_properties(_param, [\"before\", \"after\", \"description\", \"link\", \"children\", \"className\", \"duration\", \"onClose\"]);\n  const platform = usePlatform();\n  const [closing, setClosing] = useState(false);\n  const close = () => {\n    setClosing(true);\n    setTimeout(onClose, TRANSITION_FINISH_DURATION);\n  };\n  const closeTimeout = useTimeout(close, duration);\n  useEffect(() => closeTimeout.set(), [closeTimeout]);\n  return /*#__PURE__*/_jsx(RootRenderer, {\n    children: /*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread({\n      className: classNames(\"tgui-bed09b0692380ce7\", platform === 'ios' && \"tgui-c2ca59c94a46245e\", closing && \"tgui-a1e25a2488982fc5\", className)\n    }, restProps), {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"tgui-a869502f11f22b6c\",\n        children: [hasReactNode(before) && /*#__PURE__*/_jsx(\"div\", {\n          className: \"tgui-229bfa1a0a8ac43f\",\n          children: before\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"tgui-7d8f183ba67229e9\",\n          children: [hasReactNode(children) && /*#__PURE__*/_jsx(Caption, {\n            weight: \"2\",\n            children: children\n          }), hasReactNode(description) && /*#__PURE__*/_jsx(Caption, {\n            children: description\n          }), hasReactNode(link) && /*#__PURE__*/_jsx(Caption, {\n            children: link\n          })]\n        }), hasReactNode(after) && /*#__PURE__*/_jsx(\"div\", {\n          className: \"tgui-093aea87229643ac\",\n          children: after\n        })]\n      })\n    }))\n  });\n};\nSnackbar.Button = SnackbarButton;","map":{"version":3,"names":["useEffect","useState","classNames","hasReactNode","usePlatform","useTimeout","RootRenderer","Caption","SnackbarButton","TRANSITION_FINISH_DURATION","Snackbar","_param","before","after","description","link","children","className","duration","onClose","restProps","_object_without_properties","platform","closing","setClosing","close","setTimeout","closeTimeout","set","_jsx","_object_spread_props","_object_spread","_jsxs","weight","Button"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Feedback/Snackbar/Snackbar.tsx"],"sourcesContent":["'use client';\n\nimport { HTMLAttributes, ReactElement, ReactNode, useEffect, useState } from 'react';\nimport styles from './Snackbar.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\nimport { useTimeout } from 'hooks/useTimeout';\n\nimport { LinkProps } from 'components/Navigation/Link/Link';\nimport { RootRenderer } from 'components/Service/RootRenderer/RootRenderer';\nimport { Caption } from 'components/Typography/Caption/Caption';\nimport { SnackbarButton } from './components/SnackbarButton/SnackbarButton';\n\nexport interface SnackbarProps extends HTMLAttributes<HTMLDivElement> {\n  /** Element or component to be displayed on the left side of the snackbar. */\n  before?: ReactNode;\n  /** Element or component to be displayed on the right side of the snackbar. */\n  after?: ReactNode;\n  /** The main content of the snackbar, typically text or a message. */\n  children?: ReactNode;\n  /** Additional content displayed below the main message. */\n  description?: ReactNode;\n  /** A link component to be included in the snackbar for user interaction. */\n  link?: ReactElement<LinkProps>;\n  /** The duration in milliseconds after which the snackbar will automatically close. */\n  duration?: number;\n  /** Callback function invoked when the snackbar is closed. */\n  onClose: () => void;\n}\n\nconst TRANSITION_FINISH_DURATION = 320;\n\n/**\n * Displays a brief message at the bottom of the screen, which can contain actions and other content.\n * It automatically dismisses after a set duration, providing feedback or interaction prompts to users.\n */\nexport const Snackbar = ({\n  before,\n  after,\n  description,\n  link,\n  children,\n  className,\n  duration = 4000,\n  onClose,\n  ...restProps\n}: SnackbarProps) => {\n  const platform = usePlatform();\n  const [closing, setClosing] = useState(false);\n\n  const close = () => {\n    setClosing(true);\n    setTimeout(onClose, TRANSITION_FINISH_DURATION);\n  };\n\n  const closeTimeout = useTimeout(close, duration);\n  useEffect(() => closeTimeout.set(), [closeTimeout]);\n\n  return (\n    <RootRenderer>\n      <div\n        className={classNames(\n          styles.wrapper,\n          platform === 'ios' && styles['wrapper--ios'],\n          closing && styles['wrapper--closing'],\n          className,\n        )}\n        {...restProps}\n      >\n        <div className={styles.body}>\n          {hasReactNode(before) && (\n            <div className={styles.before}>\n              {before}\n            </div>\n          )}\n          <div className={styles.middle}>\n            {hasReactNode(children) && <Caption weight=\"2\">{children}</Caption>}\n            {hasReactNode(description) && <Caption>{description}</Caption>}\n            {hasReactNode(link) && <Caption>{link}</Caption>}\n          </div>\n          {hasReactNode(after) && (\n            <div className={styles.after}>\n              {after}\n            </div>\n          )}\n        </div>\n      </div>\n    </RootRenderer>\n  );\n};\n\nSnackbar.Button = SnackbarButton;\n"],"mappings":"AAAA;;;;;;AAEA,SAAkDA,SAAS,EAAEC,QAAQ,QAAQ;AAG7E,SAASC,UAAU,QAAQ;AAC3B,SAASC,YAAY,QAAQ;AAC7B,SAASC,WAAW,QAAQ;AAC5B,SAASC,UAAU,QAAQ;AAG3B,SAASC,YAAY,QAAQ;AAC7B,SAASC,OAAO,QAAQ;AACxB,SAASC,cAAc,QAAQ;AAmB/B,MAAMC,0BAAA,GAA6B;AAEnC;;;;AAIA,OAAO,MAAMC,QAAA,GAAWC,MAAA;MAAC;MACvBC,MAAM;MACNC,KAAK;MACLC,WAAW;MACXC,IAAI;MACJC,QAAQ;MACRC,SAAS;MACTC,QAAA,GAAW,IAAI;MACfC;IAAO,CAEO,GAAAR,MAAA;IADXS,SAAA,GAAAC,0BAAA,CAAAV,MAAA,GARH,UACA,SACA,eACA,QACA,YACA,aACA,YACA,U;EAGA,MAAMW,QAAA,GAAWlB,WAAA;EACjB,MAAM,CAACmB,OAAA,EAASC,UAAA,CAAW,GAAGvB,QAAA,CAAS;EAEvC,MAAMwB,KAAA,GAAQA,CAAA;IACZD,UAAA,CAAW;IACXE,UAAA,CAAWP,OAAA,EAASV,0BAAA;EACtB;EAEA,MAAMkB,YAAA,GAAetB,UAAA,CAAWoB,KAAA,EAAOP,QAAA;EACvClB,SAAA,CAAU,MAAM2B,YAAA,CAAaC,GAAG,IAAI,CAACD,YAAA,CAAa;EAElD,oBACEE,IAAA,CAACvB,YAAA;cACC,aAAAuB,IAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA;MACCd,SAAA,EAAWf,UAAA,0BAEToB,QAAA,KAAa,kCACbC,OAAA,6BACAN,SAAA;OAEEG,SAAA;gBAEJ,aAAAY,KAAA,CAAC;QAAIf,SAAS;mBACXd,YAAA,CAAaS,MAAA,kBACZiB,IAAA,CAAC;UAAIZ,SAAS;oBACXL;yBAGLoB,KAAA,CAAC;UAAIf,SAAS;qBACXd,YAAA,CAAaa,QAAA,kBAAaa,IAAA,CAACtB,OAAA;YAAQ0B,MAAA,EAAO;sBAAKjB;cAC/Cb,YAAA,CAAaW,WAAA,kBAAgBe,IAAA,CAACtB,OAAA;sBAASO;cACvCX,YAAA,CAAaY,IAAA,kBAASc,IAAA,CAACtB,OAAA;sBAASQ;;YAElCZ,YAAA,CAAaU,KAAA,kBACZgB,IAAA,CAAC;UAAIZ,SAAS;oBACXJ;;;;;AAOf;AAEAH,QAAA,CAASwB,MAAM,GAAG1B,cAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}