{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { HorizontalScroll } from \"../../Service/HorizontalScroll/HorizontalScroll\";\nimport { TimelineItem } from \"./components/TimelineItem/TimelineItem\";\n/**\n * Renders a sequence of events or steps in either a vertical or horizontal layout. It is flexible,\n * supporting an active state to visually distinguish past, present, and future steps.\n */\nexport const Timeline = _param => {\n  var {\n      active,\n      horizontal,\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"active\", \"horizontal\", \"className\", \"children\"]);\n  const getChildMode = childNumber => {\n    if (!active) {\n      return undefined;\n    }\n    if (childNumber <= active) {\n      return 'active';\n    }\n    if (childNumber === active + 1) {\n      return 'pre-active';\n    }\n    return undefined;\n  };\n  const Component = horizontal ? HorizontalScroll : 'ul';\n  return /*#__PURE__*/_jsx(Component, _object_spread_props(_object_spread({\n    className: classNames(\"tgui-b53f1370d519b689\", horizontal && \"tgui-732e8859c58ffb77\", className)\n  }, restProps), {\n    children: Children.map(children, (child, index) => {\n      if (/*#__PURE__*/isValidElement(child)) {\n        return /*#__PURE__*/cloneElement(child, _object_spread({\n          mode: getChildMode(index + 1),\n          horizontal\n        }, child.props));\n      }\n      return child;\n    })\n  }));\n};\nTimeline.Item = TimelineItem;","map":{"version":3,"names":["Children","cloneElement","isValidElement","classNames","HorizontalScroll","TimelineItem","Timeline","_param","active","horizontal","className","children","restProps","_object_without_properties","getChildMode","childNumber","undefined","Component","_jsx","_object_spread_props","_object_spread","map","child","index","mode","props","Item"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Timeline/Timeline.tsx"],"sourcesContent":["import { Children, cloneElement, HTMLAttributes, isValidElement, ReactElement } from 'react';\nimport styles from './Timeline.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { HorizontalScroll } from 'components/Service/HorizontalScroll/HorizontalScroll';\nimport { TimelineItem, TimelineItemProps } from './components/TimelineItem/TimelineItem';\n\nexport interface TimelineProps extends HTMLAttributes<HTMLUListElement> {\n  /** Determines the orientation of the timeline. If true, the timeline is displayed horizontally. */\n  horizontal?: boolean;\n  /** The index of the active item in the timeline, which affects styling to indicate progress. */\n  active?: number;\n  /** The children of the Timeline, expected to be a collection of `Timeline.Item` components. */\n  children: ReactElement<TimelineItemProps>[];\n}\n\n/**\n * Renders a sequence of events or steps in either a vertical or horizontal layout. It is flexible,\n * supporting an active state to visually distinguish past, present, and future steps.\n */\nexport const Timeline = ({\n  active,\n  horizontal,\n  className,\n  children,\n  ...restProps\n}: TimelineProps) => {\n  const getChildMode = (childNumber: number): TimelineItemProps['mode'] => {\n    if (!active) {\n      return undefined;\n    }\n\n    if (childNumber <= active) {\n      return 'active';\n    }\n\n    if (childNumber === active + 1) {\n      return 'pre-active';\n    }\n\n    return undefined;\n  };\n\n  const Component = horizontal ? HorizontalScroll : 'ul';\n  return (\n    <Component\n      className={classNames(\n        styles.wrapper,\n        horizontal && styles['wrapper--horizontal'],\n        className,\n      )}\n      {...restProps}\n    >\n      {Children.map(children, (child, index) => {\n        if (isValidElement(child)) {\n          return cloneElement(child, {\n            mode: getChildMode(index + 1),\n            horizontal,\n            ...child.props,\n          });\n        }\n\n        return child;\n      })}\n    </Component>\n  );\n};\n\nTimeline.Item = TimelineItem;\n"],"mappings":";;;;AAAA,SAASA,QAAQ,EAAEC,YAAY,EAAkBC,cAAc,QAAsB;AAGrF,SAASC,UAAU,QAAQ;AAE3B,SAASC,gBAAgB,QAAQ;AACjC,SAASC,YAAY,QAA2B;AAWhD;;;;AAIA,OAAO,MAAMC,QAAA,GAAWC,MAAA;MAAC;MACvBC,MAAM;MACNC,UAAU;MACVC,SAAS;MACTC;IAAQ,CAEM,GAAAJ,MAAA;IADXK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,UACA,cACA,aACA,W;EAGA,MAAMO,YAAA,GAAgBC,WAAA;IACpB,IAAI,CAACP,MAAA,EAAQ;MACX,OAAOQ,SAAA;IACT;IAEA,IAAID,WAAA,IAAeP,MAAA,EAAQ;MACzB,OAAO;IACT;IAEA,IAAIO,WAAA,KAAgBP,MAAA,GAAS,GAAG;MAC9B,OAAO;IACT;IAEA,OAAOQ,SAAA;EACT;EAEA,MAAMC,SAAA,GAAYR,UAAA,GAAaL,gBAAA,GAAmB;EAClD,oBACEc,IAAA,CAACD,SAAA,EAAAE,oBAAA,CAAAC,cAAA;IACCV,SAAA,EAAWP,UAAA,0BAETM,UAAA,6BACAC,SAAA;KAEEE,SAAA;cAEHZ,QAAA,CAASqB,GAAG,CAACV,QAAA,EAAU,CAACW,KAAA,EAAOC,KAAA;MAC9B,iBAAIrB,cAAA,CAAeoB,KAAA,GAAQ;QACzB,oBAAOrB,YAAA,CAAaqB,KAAA,EAAOF,cAAA;UACzBI,IAAA,EAAMV,YAAA,CAAaS,KAAA,GAAQ;UAC3Bd;WACGa,KAAA,CAAMG,KAAK;MAElB;MAEA,OAAOH,KAAA;IACT;;AAGN;AAEAhB,QAAA,CAASoB,IAAI,GAAGrB,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}