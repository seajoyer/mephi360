{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../../../helpers/classNames\";\nimport { Badge } from \"../../../Badge/Badge\";\nexport const AvatarBadge = _param => {\n  var {\n      type,\n      className\n    } = _param,\n    restProps = _object_without_properties(_param, [\"type\", \"className\"]);\n  if (type !== 'number') {\n    throw new Error('[ImageBadge]: Component supports only type=\"number\"');\n  }\n  return /*#__PURE__*/_jsx(Badge, _object_spread({\n    type: \"number\",\n    className: classNames(\"tgui-54214e0db34f53c3\", className)\n  }, restProps));\n};","map":{"version":3,"names":["classNames","Badge","AvatarBadge","_param","type","className","restProps","_object_without_properties","Error","_jsx","_object_spread"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Avatar/components/AvatarBadge/AvatarBadge.tsx"],"sourcesContent":["import styles from './AvatarBadge.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { Badge, BadgeProps } from 'components/Blocks/Badge/Badge';\n\nexport interface AvatarBadgeProps extends BadgeProps {}\n\nexport const AvatarBadge = ({ type, className, ...restProps }: AvatarBadgeProps) => {\n  if (type !== 'number') {\n    throw new Error('[ImageBadge]: Component supports only type=\"number\"');\n  }\n\n  return (\n    <Badge\n      type=\"number\"\n      className={classNames(styles.wrapper, className)}\n      {...restProps}\n    />\n  );\n};\n"],"mappings":";;;AAEA,SAASA,UAAU,QAAQ;AAE3B,SAASC,KAAK,QAAoB;AAIlC,OAAO,MAAMC,WAAA,GAAcC,MAAA;MAAC;MAAEC,IAAI;MAAEC;IAAS,CAAkC,GAAAF,MAAA;IAA7BG,SAAA,GAAAC,0BAAA,CAAAJ,MAAA,GAApB,QAAM,Y;EAClC,IAAIC,IAAA,KAAS,UAAU;IACrB,MAAM,IAAII,KAAA,CAAM;EAClB;EAEA,oBACEC,IAAA,CAACR,KAAA,EAAAS,cAAA;IACCN,IAAA,EAAK;IACLC,SAAA,EAAWL,UAAA,0BAA2BK,SAAA;KAClCC,SAAA;AAGV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}