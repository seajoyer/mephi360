{"ast":null,"code":"import { useMemo } from \"react\";\nimport { arrow, autoPlacement, flip, offset, shift, size } from \"@floating-ui/react-dom\";\nimport { getAutoPlacementAlignment, isNotAutoPlacement } from \"./helpers/alignment\";\nexport const useFloatingMiddlewares = ({\n  placement = 'bottom-start',\n  arrowRef = null,\n  withArrow,\n  arrowHeight,\n  arrowPadding,\n  sameWidth,\n  offsetByMainAxis = 0,\n  offsetByCrossAxis = 0,\n  customMiddlewares\n}) => {\n  return useMemo(() => {\n    const isNotAutoPlaced = isNotAutoPlacement(placement);\n    const middlewares = [offset({\n      crossAxis: offsetByCrossAxis,\n      mainAxis: withArrow && arrowHeight ? offsetByMainAxis + arrowHeight : offsetByMainAxis\n    })];\n    if (isNotAutoPlaced) {\n      middlewares.push(flip({\n        fallbackAxisSideDirection: 'start'\n      }));\n    } else {\n      middlewares.push(autoPlacement({\n        alignment: getAutoPlacementAlignment(placement)\n      }));\n    }\n    middlewares.push(shift());\n    if (sameWidth) {\n      middlewares.push(size({\n        apply({\n          rects,\n          elements\n        }) {\n          Object.assign(elements.floating.style, {\n            width: `${rects.reference.width}px`\n          });\n        }\n      }));\n    }\n    if (customMiddlewares) {\n      middlewares.push(...customMiddlewares);\n    }\n    if (withArrow) {\n      middlewares.push(arrow({\n        element: arrowRef,\n        padding: arrowPadding\n      }));\n    }\n    return {\n      middlewares,\n      strictPlacement: isNotAutoPlaced ? placement : undefined\n    };\n  }, [offsetByCrossAxis, arrowRef, withArrow, arrowHeight, arrowPadding, offsetByMainAxis, sameWidth, customMiddlewares, placement]);\n};","map":{"version":3,"names":["useMemo","arrow","autoPlacement","flip","offset","shift","size","getAutoPlacementAlignment","isNotAutoPlacement","useFloatingMiddlewares","placement","arrowRef","withArrow","arrowHeight","arrowPadding","sameWidth","offsetByMainAxis","offsetByCrossAxis","customMiddlewares","isNotAutoPlaced","middlewares","crossAxis","mainAxis","push","fallbackAxisSideDirection","alignment","apply","rects","elements","Object","assign","floating","style","width","reference","element","padding","strictPlacement","undefined"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Overlays/Popper/hooks/useFloatingMiddlewares.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport {\n  arrow,\n  ArrowOptions,\n  autoPlacement,\n  flip,\n  Middleware,\n  offset,\n  shift,\n  size,\n} from '@floating-ui/react-dom';\n\nimport { getAutoPlacementAlignment, isNotAutoPlacement } from './helpers/alignment';\nimport { PlacementWithAuto } from './types';\n\nexport interface UseFloatingMiddlewaresOptions {\n  /** By default, the component will automatically choose the best placement */\n  placement?: PlacementWithAuto;\n  /** Offset along the main axis. */\n  offsetByMainAxis?: number;\n  /** Offset along the cross axis. */\n  offsetByCrossAxis?: number;\n  /** Ref for arrow element */\n  arrowRef?: ArrowOptions['element'];\n  /** Whether to display an arrow pointing to the anchor element. */\n  withArrow?: boolean;\n  /** The height of the arrow. This is added to `mainAxis` to prevent the arrow from overlapping the anchor element. */\n  arrowHeight?: number;\n  /** A safe zone around the arrow to prevent it from exceeding the content bounds. */\n  arrowPadding?: number;\n  /** Sets the width to match the target element. */\n  sameWidth?: boolean;\n  /** An array of custom modifiers for Popper (should be memoized). */\n  customMiddlewares?: Middleware[];\n}\n\nexport const useFloatingMiddlewares = ({\n  placement = 'bottom-start',\n  arrowRef = null,\n  withArrow,\n  arrowHeight,\n  arrowPadding,\n  sameWidth,\n  offsetByMainAxis = 0,\n  offsetByCrossAxis = 0,\n  customMiddlewares,\n}: UseFloatingMiddlewaresOptions) => {\n  return useMemo(() => {\n    const isNotAutoPlaced = isNotAutoPlacement(placement);\n    const middlewares: Middleware[] = [\n      offset({\n        crossAxis: offsetByCrossAxis,\n        mainAxis: withArrow && arrowHeight ? offsetByMainAxis + arrowHeight : offsetByMainAxis,\n      }),\n    ];\n\n    if (isNotAutoPlaced) {\n      middlewares.push(\n        flip({\n          fallbackAxisSideDirection: 'start',\n        }),\n      );\n    } else {\n      middlewares.push(autoPlacement({\n        alignment: getAutoPlacementAlignment(placement),\n      }));\n    }\n\n    middlewares.push(shift());\n\n    if (sameWidth) {\n      middlewares.push(\n        size({\n          apply({ rects, elements }) {\n            Object.assign(elements.floating.style, {\n              width: `${rects.reference.width}px`,\n            });\n          },\n        }),\n      );\n    }\n\n    if (customMiddlewares) {\n      middlewares.push(...customMiddlewares);\n    }\n\n    if (withArrow) {\n      middlewares.push(\n        arrow({\n          element: arrowRef,\n          padding: arrowPadding,\n        }),\n      );\n    }\n\n    return {\n      middlewares,\n      strictPlacement: isNotAutoPlaced ? placement : undefined,\n    };\n  }, [\n    offsetByCrossAxis,\n    arrowRef,\n    withArrow,\n    arrowHeight,\n    arrowPadding,\n    offsetByMainAxis,\n    sameWidth,\n    customMiddlewares,\n    placement,\n  ]);\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ;AAExB,SACEC,KAAK,EAELC,aAAa,EACbC,IAAI,EAEJC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC;AAEP,SAASC,yBAAyB,EAAEC,kBAAkB,QAAQ;AAwB9D,OAAO,MAAMC,sBAAA,GAAyBA,CAAC;EACrCC,SAAA,GAAY,cAAc;EAC1BC,QAAA,GAAW,IAAI;EACfC,SAAS;EACTC,WAAW;EACXC,YAAY;EACZC,SAAS;EACTC,gBAAA,GAAmB,CAAC;EACpBC,iBAAA,GAAoB,CAAC;EACrBC;AAAiB,CACa;EAC9B,OAAOlB,OAAA,CAAQ;IACb,MAAMmB,eAAA,GAAkBX,kBAAA,CAAmBE,SAAA;IAC3C,MAAMU,WAAA,GAA4B,CAChChB,MAAA,CAAO;MACLiB,SAAA,EAAWJ,iBAAA;MACXK,QAAA,EAAUV,SAAA,IAAaC,WAAA,GAAcG,gBAAA,GAAmBH,WAAA,GAAcG;IACxE,GACD;IAED,IAAIG,eAAA,EAAiB;MACnBC,WAAA,CAAYG,IAAI,CACdpB,IAAA,CAAK;QACHqB,yBAAA,EAA2B;MAC7B;IAEJ,OAAO;MACLJ,WAAA,CAAYG,IAAI,CAACrB,aAAA,CAAc;QAC7BuB,SAAA,EAAWlB,yBAAA,CAA0BG,SAAA;MACvC;IACF;IAEAU,WAAA,CAAYG,IAAI,CAAClB,KAAA;IAEjB,IAAIU,SAAA,EAAW;MACbK,WAAA,CAAYG,IAAI,CACdjB,IAAA,CAAK;QACHoB,MAAM;UAAEC,KAAK;UAAEC;QAAQ,CAAE;UACvBC,MAAA,CAAOC,MAAM,CAACF,QAAA,CAASG,QAAQ,CAACC,KAAK,EAAE;YACrCC,KAAA,EAAO,GAAGN,KAAA,CAAMO,SAAS,CAACD,KAAK;UACjC;QACF;MACF;IAEJ;IAEA,IAAIf,iBAAA,EAAmB;MACrBE,WAAA,CAAYG,IAAI,IAAIL,iBAAA;IACtB;IAEA,IAAIN,SAAA,EAAW;MACbQ,WAAA,CAAYG,IAAI,CACdtB,KAAA,CAAM;QACJkC,OAAA,EAASxB,QAAA;QACTyB,OAAA,EAAStB;MACX;IAEJ;IAEA,OAAO;MACLM,WAAA;MACAiB,eAAA,EAAiBlB,eAAA,GAAkBT,SAAA,GAAY4B;IACjD;EACF,GAAG,CACDrB,iBAAA,EACAN,QAAA,EACAC,SAAA,EACAC,WAAA,EACAC,YAAA,EACAE,gBAAA,EACAD,SAAA,EACAG,iBAAA,EACAR,SAAA,CACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}