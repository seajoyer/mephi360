{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { Typography } from \"../Typography\";\nconst captionLevelStyles = {\n  '1': \"tgui-2916d621b0ea5857\",\n  '2': \"tgui-937d123c23df98b3\"\n};\n/**\n * The Caption component is a text wrapper that applies specific typographic styles,\n * based on the provided `level` prop. It's built on top of the Typography component,\n * ensuring consistent text styling across the application. It primarily serves for text\n * that acts as a small, descriptive label or annotation.\n */\nexport const Caption = _param => {\n  var {\n      level = '1',\n      className,\n      Component\n    } = _param,\n    restProps = _object_without_properties(_param, [\"level\", \"className\", \"Component\"]);\n  return /*#__PURE__*/_jsx(Typography, _object_spread_props(_object_spread({}, restProps), {\n    className: classNames(\"tgui-f37a43dcc29ade55\", captionLevelStyles[level], className),\n    Component: Component || 'span'\n  }));\n};","map":{"version":3,"names":["classNames","Typography","captionLevelStyles","Caption","_param","level","className","Component","restProps","_object_without_properties","_jsx","_object_spread_props","_object_spread"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Typography/Caption/Caption.tsx"],"sourcesContent":["import styles from './Caption.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { Typography, TypographyProps } from '../Typography';\n\ntype CaptionLevel = '1' | '2';\n\nexport interface CaptionProps extends Omit<TypographyProps, 'plain'> {\n  /** The size level of the caption, influencing its styling and typography size. */\n  level?: CaptionLevel;\n}\n\nconst captionLevelStyles: Record<CaptionLevel, string> = {\n  '1': styles['wrapper--1'],\n  '2': styles['wrapper--2'],\n};\n\n/**\n * The Caption component is a text wrapper that applies specific typographic styles,\n * based on the provided `level` prop. It's built on top of the Typography component,\n * ensuring consistent text styling across the application. It primarily serves for text\n * that acts as a small, descriptive label or annotation.\n */\nexport const Caption = ({\n  level = '1',\n  className,\n  Component,\n  ...restProps\n}: CaptionProps) => (\n  <Typography\n    {...restProps}\n    className={classNames(styles.wrapper, captionLevelStyles[level], className)}\n    Component={Component || 'span'}\n  />\n);\n\n"],"mappings":";;;;AAEA,SAASA,UAAU,QAAQ;AAE3B,SAASC,UAAU,QAAyB;AAS5C,MAAMC,kBAAA,GAAmD;EACvD,GAAG;EACH,GAAG;AACL;AAEA;;;;;;AAMA,OAAO,MAAMC,OAAA,GAAUC,MAAA;MAAC;MACtBC,KAAA,GAAQ,GAAG;MACXC,SAAS;MACTC;IAAS,CAEI,GAAAH,MAAA;IADVI,SAAA,GAAAC,0BAAA,CAAAL,MAAA,GAHH,SACA,aACA,Y;sBAGAM,IAAA,CAACT,UAAA,EAAAU,oBAAA,CAAAC,cAAA,KACKJ,SAAA;IACJF,SAAA,EAAWN,UAAA,0BAA2BE,kBAAkB,CAACG,KAAA,CAAM,EAAEC,SAAA;IACjEC,SAAA,EAAWA,SAAA,IAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}