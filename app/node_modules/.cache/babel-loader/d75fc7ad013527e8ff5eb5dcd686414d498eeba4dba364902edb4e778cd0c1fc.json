{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { FormInput } from \"../FormInput/FormInput\";\nimport { Subheadline } from \"../../Typography/Subheadline/Subheadline\";\nimport { Text } from \"../../Typography/Text/Text\";\n/**\n * Renders a text input field with enhanced styling and integration into a form structure. Supports customization through `FormPublicProps` and standard input attributes.\n * It automatically adapts typography and layout based on the platform, ensuring a consistent user experience across devices.\n */\nexport const Input = _param => {\n  var {\n      type = 'text',\n      header,\n      before,\n      after,\n      status,\n      className,\n      disabled\n    } = _param,\n    restProps = _object_without_properties(_param, [\"type\", \"header\", \"before\", \"after\", \"status\", \"className\", \"disabled\"]);\n  const platform = usePlatform();\n  const TypographyComponent = platform === 'ios' ? Text : Subheadline;\n  return /*#__PURE__*/_jsx(FormInput, {\n    header: header,\n    before: before,\n    after: after,\n    status: status,\n    disabled: disabled,\n    className: classNames(\"tgui-d9de1f32aee12a15\", platform === 'ios' && \"tgui-9b2ad13855aef059\", className),\n    children: /*#__PURE__*/_jsx(TypographyComponent, _object_spread({\n      Component: \"input\",\n      className: \"tgui-c4863cd4c893a047\",\n      type: type,\n      disabled: disabled\n    }, restProps))\n  });\n};","map":{"version":3,"names":["classNames","usePlatform","FormInput","Subheadline","Text","Input","_param","type","header","before","after","status","className","disabled","restProps","_object_without_properties","platform","TypographyComponent","_jsx","_object_spread","Component"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Form/Input/Input.tsx"],"sourcesContent":["'use client';\n\nimport { InputHTMLAttributes } from 'react';\nimport styles from './Input.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { FormInput, FormPublicProps } from 'components/Form/FormInput/FormInput';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\nimport { Text } from 'components/Typography/Text/Text';\n\nexport interface InputProps extends FormPublicProps, InputHTMLAttributes<HTMLInputElement> {}\n\n/**\n * Renders a text input field with enhanced styling and integration into a form structure. Supports customization through `FormPublicProps` and standard input attributes.\n * It automatically adapts typography and layout based on the platform, ensuring a consistent user experience across devices.\n */\nexport const Input = ({\n  type = 'text',\n  header,\n  before,\n  after,\n  status,\n  className,\n  disabled,\n  ...restProps\n}: InputProps) => {\n  const platform = usePlatform();\n\n  const TypographyComponent = platform === 'ios' ? Text : Subheadline;\n  return (\n    <FormInput\n      header={header}\n      before={before}\n      after={after}\n      status={status}\n      disabled={disabled}\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        className,\n      )}\n    >\n      <TypographyComponent\n        Component=\"input\"\n        className={styles.input}\n        type={type}\n        disabled={disabled}\n        {...restProps}\n      />\n    </FormInput>\n  );\n};\n"],"mappings":"AAAA;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,SAAS,QAAyB;AAC3C,SAASC,WAAW,QAAQ;AAC5B,SAASC,IAAI,QAAQ;AAIrB;;;;AAIA,OAAO,MAAMC,KAAA,GAAQC,MAAA;MAAC;MACpBC,IAAA,GAAO,MAAM;MACbC,MAAM;MACNC,MAAM;MACNC,KAAK;MACLC,MAAM;MACNC,SAAS;MACTC;IAAQ,CAEG,GAAAP,MAAA;IADRQ,SAAA,GAAAC,0BAAA,CAAAT,MAAA,GAPH,QACA,UACA,UACA,SACA,UACA,aACA,W;EAGA,MAAMU,QAAA,GAAWf,WAAA;EAEjB,MAAMgB,mBAAA,GAAsBD,QAAA,KAAa,QAAQZ,IAAA,GAAOD,WAAA;EACxD,oBACEe,IAAA,CAAChB,SAAA;IACCM,MAAA,EAAQA,MAAA;IACRC,MAAA,EAAQA,MAAA;IACRC,KAAA,EAAOA,KAAA;IACPC,MAAA,EAAQA,MAAA;IACRE,QAAA,EAAUA,QAAA;IACVD,SAAA,EAAWZ,UAAA,0BAETgB,QAAA,KAAa,kCACbJ,SAAA;cAGF,aAAAM,IAAA,CAACD,mBAAA,EAAAE,cAAA;MACCC,SAAA,EAAU;MACVR,SAAS;MACTL,IAAA,EAAMA,IAAA;MACNM,QAAA,EAAUA;OACNC,SAAA;;AAIZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}