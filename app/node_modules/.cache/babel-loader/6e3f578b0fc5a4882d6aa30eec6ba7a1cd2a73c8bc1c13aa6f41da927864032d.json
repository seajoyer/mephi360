{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef, useState } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { callMultiple } from \"../../../helpers/function\";\nimport { hasReactNode } from \"../../../helpers/react/node\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { FormInputTitle } from \"./components/FormInputTitle\";\nconst platformStyles = {\n  base: \"tgui-8ca550c2fc85eff5\",\n  ios: \"tgui-7707c5d942b7b9af\"\n};\nconst formStatusStyles = {\n  default: \"tgui-7584398855f80ae6\",\n  error: \"tgui-41b168516bddcf4b\",\n  focused: \"tgui-89277928456f0e30\"\n};\n/**\n * Wraps an input element with additional layout for headers, icons, or actions, providing a consistent look and feel across the form.\n * It supports conditional rendering based on the platform and the state of the form element.\n */\nexport const FormInput = /*#__PURE__*/forwardRef((_param, ref) => {\n  var {\n      status,\n      header,\n      before,\n      after,\n      disabled,\n      children,\n      className,\n      onFocus: onFocusProp,\n      onBlur: onBlurProp\n    } = _param,\n    restProps = _object_without_properties(_param, [\"status\", \"header\", \"before\", \"after\", \"disabled\", \"children\", \"className\", \"onFocus\", \"onBlur\"]);\n  const platform = usePlatform();\n  const [isFocused, setIsFocused] = useState(false);\n  const formStatus = status || (isFocused ? 'focused' : 'default');\n  const onFocus = callMultiple(onFocusProp, () => {\n    if (disabled) {\n      return;\n    }\n    setIsFocused(true);\n  });\n  const onBlur = callMultiple(onBlurProp, () => setIsFocused(false));\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    className: classNames(\"tgui-92da7016c7125c02\", platformStyles[platform], formStatusStyles[formStatus], disabled && \"tgui-4a83fef1f04acb0e\"),\n    \"aria-disabled\": disabled,\n    children: [/*#__PURE__*/_jsxs(\"label\", _object_spread_props(_object_spread({\n      \"aria-disabled\": disabled,\n      className: classNames(\"tgui-0f5050defacbf813\", className),\n      onFocus: onFocus,\n      onBlur: onBlur\n    }, restProps), {\n      children: [hasReactNode(before) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"tgui-8f04eff653cfa5e5\",\n        children: before\n      }), children, hasReactNode(after) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"tgui-16b3783d394bc7db\",\n        children: after\n      })]\n    })), hasReactNode(header) && platform === 'base' && /*#__PURE__*/_jsx(FormInputTitle, {\n      className: \"tgui-9f9a52f695b85cc9\",\n      children: header\n    })]\n  });\n});","map":{"version":3,"names":["forwardRef","useState","classNames","callMultiple","hasReactNode","usePlatform","FormInputTitle","platformStyles","base","ios","formStatusStyles","default","error","focused","FormInput","_param","ref","status","header","before","after","disabled","children","className","onFocus","onFocusProp","onBlur","onBlurProp","restProps","_object_without_properties","platform","isFocused","setIsFocused","formStatus","_jsxs","_object_spread_props","_object_spread","_jsx"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Form/FormInput/FormInput.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, HTMLAttributes, ReactNode, useState } from 'react';\nimport styles from './FormInput.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { callMultiple } from 'helpers/function';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { FormInputTitle } from './components/FormInputTitle';\n\nexport interface FormPublicProps {\n  /** Defines the visual state of the form input (e.g., error, focused). */\n  status?: 'default' | 'error' | 'focused';\n  /** Optional header content, displayed above the form input on `base` platform. */\n  header?: ReactNode;\n  /** Content to be displayed before the form input, such as icons or labels. */\n  before?: ReactNode;\n  /** Content to be displayed after the form input, often used for action icons or additional information. */\n  after?: ReactNode;\n  /** Indicates if the form input is disabled. */\n  disabled?: boolean;\n}\n\nexport interface FormInputProps extends FormPublicProps, HTMLAttributes<HTMLLabelElement> {}\n\nconst platformStyles = {\n  base: styles['wrapper--base'],\n  ios: styles['wrapper--ios'],\n};\n\nconst formStatusStyles = {\n  default: styles['wrapper--default'],\n  error: styles['wrapper--error'],\n  focused: styles['wrapper--focused'],\n};\n\n/**\n * Wraps an input element with additional layout for headers, icons, or actions, providing a consistent look and feel across the form.\n * It supports conditional rendering based on the platform and the state of the form element.\n */\nexport const FormInput = forwardRef<HTMLDivElement, FormInputProps>(({\n  status,\n  header,\n  before,\n  after,\n  disabled,\n  children,\n  className,\n  onFocus: onFocusProp,\n  onBlur: onBlurProp,\n  ...restProps\n}, ref) => {\n  const platform = usePlatform();\n  const [isFocused, setIsFocused] = useState(false);\n\n  const formStatus = status || (isFocused ? 'focused' : 'default');\n\n  const onFocus = callMultiple(onFocusProp, () => {\n    if (disabled) {\n      return;\n    }\n\n    setIsFocused(true);\n  });\n  const onBlur = callMultiple(onBlurProp, () => setIsFocused(false));\n\n  return (\n    <div\n      ref={ref}\n      className={classNames(\n        styles.wrapper,\n        platformStyles[platform],\n        formStatusStyles[formStatus],\n        disabled && styles['wrapper--disabled'],\n      )}\n      aria-disabled={disabled}\n    >\n      <label\n        aria-disabled={disabled}\n        className={classNames(styles.body, className)}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        {...restProps}\n      >\n        {hasReactNode(before) && (\n          <div className={styles.before}>\n            {before}\n          </div>\n        )}\n        {children}\n        {hasReactNode(after) && (\n          <div className={styles.after}>\n            {after}\n          </div>\n        )}\n      </label>\n      {hasReactNode(header) && platform === 'base' && (\n        <FormInputTitle className={styles.title}>{header}</FormInputTitle>\n      )}\n    </div>\n  );\n});\n"],"mappings":"AAAA;;;;;;AAEA,SAASA,UAAU,EAA6BC,QAAQ,QAAQ;AAGhE,SAASC,UAAU,QAAQ;AAC3B,SAASC,YAAY,QAAQ;AAC7B,SAASC,YAAY,QAAQ;AAC7B,SAASC,WAAW,QAAQ;AAE5B,SAASC,cAAc,QAAQ;AAiB/B,MAAMC,cAAA,GAAiB;EACrBC,IAAI;EACJC,GAAG;AACL;AAEA,MAAMC,gBAAA,GAAmB;EACvBC,OAAO;EACPC,KAAK;EACLC,OAAO;AACT;AAEA;;;;AAIA,OAAO,MAAMC,SAAA,gBAAYd,UAAA,CAA2C,CAAAe,MAAA,EAWjEC,GAAA;MAXkE;MACnEC,MAAM;MACNC,MAAM;MACNC,MAAM;MACNC,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRC,SAAS;MACTC,OAAA,EAASC,WAAW;MACpBC,MAAA,EAAQC;IAAU,CAEnB,GAAAZ,MAAA;IADIa,SAAA,GAAAC,0BAAA,CAAAd,MAAA,GATH,UACA,UACA,UACA,SACA,YACA,YACA,aACA,WACA,S;EAGA,MAAMe,QAAA,GAAWzB,WAAA;EACjB,MAAM,CAAC0B,SAAA,EAAWC,YAAA,CAAa,GAAG/B,QAAA,CAAS;EAE3C,MAAMgC,UAAA,GAAahB,MAAA,KAAWc,SAAA,GAAY,YAAY,SAAQ;EAE9D,MAAMP,OAAA,GAAUrB,YAAA,CAAasB,WAAA,EAAa;IACxC,IAAIJ,QAAA,EAAU;MACZ;IACF;IAEAW,YAAA,CAAa;EACf;EACA,MAAMN,MAAA,GAASvB,YAAA,CAAawB,UAAA,EAAY,MAAMK,YAAA,CAAa;EAE3D,oBACEE,KAAA,CAAC;IACClB,GAAA,EAAKA,GAAA;IACLO,SAAA,EAAWrB,UAAA,0BAETK,cAAc,CAACuB,QAAA,CAAS,EACxBpB,gBAAgB,CAACuB,UAAA,CAAW,EAC5BZ,QAAA;IAEF,iBAAeA,QAAA;4BAEfa,KAAA,CAAC,SAAAC,oBAAA,CAAAC,cAAA;MACC,iBAAef,QAAA;MACfE,SAAA,EAAWrB,UAAA,0BAAwBqB,SAAA;MACnCC,OAAA,EAASA,OAAA;MACTE,MAAA,EAAQA;OACJE,SAAA;iBAEHxB,YAAA,CAAae,MAAA,kBACZkB,IAAA,CAAC;QAAId,SAAS;kBACXJ;UAGJG,QAAA,EACAlB,YAAA,CAAagB,KAAA,kBACZiB,IAAA,CAAC;QAAId,SAAS;kBACXH;;SAINhB,YAAA,CAAac,MAAA,KAAWY,QAAA,KAAa,uBACpCO,IAAA,CAAC/B,cAAA;MAAeiB,SAAS;gBAAiBL;;;AAIlD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}