{"ast":null,"code":"import { canUseDOM } from \"../../../../helpers/dom\";\nexport const initGesture = (startX, startY) => ({\n  startX,\n  startY,\n  startT: new Date(),\n  duration: 0,\n  isPressed: true,\n  isY: false,\n  isX: false,\n  isSlideX: false,\n  isSlideY: false,\n  isSlide: false,\n  clientX: 0,\n  clientY: 0,\n  shiftX: 0,\n  shiftY: 0,\n  shiftXAbs: 0,\n  shiftYAbs: 0\n});\n/* Gets the X-axis coordinate from a touch or mouse event */\nexport const coordX = e => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n/* Gets the Y-axis coordinate from a touch or mouse event */\nexport const coordY = e => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\nexport const touchEnabled = () => canUseDOM && 'ontouchstart' in window;\n/*\n * Returns an array of supported events\n * If the browser supports pointer events or handjs is included, it returns pointer events.\n * Otherwise, it uses mouse events\n */\nexport const getSupportedEvents = () => {\n  if (touchEnabled()) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n};","map":{"version":3,"names":["canUseDOM","initGesture","startX","startY","startT","Date","duration","isPressed","isY","isX","isSlideX","isSlideY","isSlide","clientX","clientY","shiftX","shiftY","shiftXAbs","shiftYAbs","coordX","e","changedTouches","coordY","touchEnabled","window","getSupportedEvents"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Service/Touch/helpers/touch.ts"],"sourcesContent":["import { canUseDOM } from 'helpers/dom';\n\nimport { CustomTouchEvent, Gesture } from './types';\n\nexport const initGesture = (startX: number, startY: number): Gesture => ({\n  startX,\n  startY,\n  startT: new Date(),\n  duration: 0,\n  isPressed: true,\n  isY: false,\n  isX: false,\n  isSlideX: false,\n  isSlideY: false,\n  isSlide: false,\n  clientX: 0,\n  clientY: 0,\n  shiftX: 0,\n  shiftY: 0,\n  shiftXAbs: 0,\n  shiftYAbs: 0,\n});\n\n/* Gets the X-axis coordinate from a touch or mouse event */\nexport const coordX = (e: CustomTouchEvent): number => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n\n/* Gets the Y-axis coordinate from a touch or mouse event */\nexport const coordY = (e: CustomTouchEvent): number => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\nexport const touchEnabled = () => canUseDOM && 'ontouchstart' in window;\n\n/*\n * Returns an array of supported events\n * If the browser supports pointer events or handjs is included, it returns pointer events.\n * Otherwise, it uses mouse events\n */\nexport const getSupportedEvents = (): string[] => {\n  if (touchEnabled()) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ;AAI1B,OAAO,MAAMC,WAAA,GAAcA,CAACC,MAAA,EAAgBC,MAAA,MAA6B;EACvED,MAAA;EACAC,MAAA;EACAC,MAAA,EAAQ,IAAIC,IAAA;EACZC,QAAA,EAAU;EACVC,SAAA,EAAW;EACXC,GAAA,EAAK;EACLC,GAAA,EAAK;EACLC,QAAA,EAAU;EACVC,QAAA,EAAU;EACVC,OAAA,EAAS;EACTC,OAAA,EAAS;EACTC,OAAA,EAAS;EACTC,MAAA,EAAQ;EACRC,MAAA,EAAQ;EACRC,SAAA,EAAW;EACXC,SAAA,EAAW;AACb;AAEA;AACA,OAAO,MAAMC,MAAA,GAAUC,CAAA;EACrB,IAAIA,CAAA,CAAEP,OAAO,IAAI,MAAM;IACrB,OAAOO,CAAA,CAAEP,OAAO;EAClB;EAEA,OAAOO,CAAA,CAAEC,cAAc,IAAID,CAAA,CAAEC,cAAc,CAAC,EAAE,CAACR,OAAO;AACxD;AAEA;AACA,OAAO,MAAMS,MAAA,GAAUF,CAAA;EACrB,IAAIA,CAAA,CAAEN,OAAO,IAAI,MAAM;IACrB,OAAOM,CAAA,CAAEN,OAAO;EAClB;EAEA,OAAOM,CAAA,CAAEC,cAAc,IAAID,CAAA,CAAEC,cAAc,CAAC,EAAE,CAACP,OAAO;AACxD;AAEA,OAAO,MAAMS,YAAA,GAAeA,CAAA,KAAMvB,SAAA,IAAa,kBAAkBwB,MAAA;AAEjE;;;;;AAKA,OAAO,MAAMC,kBAAA,GAAqBA,CAAA;EAChC,IAAIF,YAAA,IAAgB;IAClB,OAAO,CAAC,cAAc,aAAa,YAAY,cAAc;EAC/D;EAEA,OAAO,CAAC,aAAa,aAAa,WAAW,aAAa;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}