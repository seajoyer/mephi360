{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { Image } from \"../Image/Image\";\nimport { AvatarAcronym } from \"./components/AvatarAcronym/AvatarAcronym\";\nimport { AvatarBadge } from \"./components/AvatarBadge/AvatarBadge\";\n/**\n * Renders an image with specific styles for an avatar presentation, including optional acronym display and badge support.\n * Utilizes the `Image` component for core functionality, enhancing it with avatar-specific features like acronyms and badges.\n */\nexport const Avatar = _param => {\n  var {\n      className,\n      style,\n      acronym,\n      fallbackIcon,\n      size\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"style\", \"acronym\", \"fallbackIcon\", \"size\"]);\n  return /*#__PURE__*/_jsx(Image, _object_spread({\n    style: _object_spread({\n      borderRadius: '50%'\n    }, style),\n    className: classNames(\"tgui-91c5537b51b490a7\", acronym && \"tgui-305551eb3f5abb68\", className),\n    fallbackIcon: acronym ? /*#__PURE__*/_jsx(AvatarAcronym, {\n      size: size,\n      children: acronym\n    }) : fallbackIcon,\n    size: size\n  }, restProps));\n};\nAvatar.Badge = AvatarBadge;","map":{"version":3,"names":["classNames","Image","AvatarAcronym","AvatarBadge","Avatar","_param","className","style","acronym","fallbackIcon","size","restProps","_object_without_properties","_jsx","_object_spread","borderRadius","Badge"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Avatar/Avatar.tsx"],"sourcesContent":["import styles from './Avatar.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { Image, ImageProps } from 'components/Blocks/Image/Image';\nimport { AvatarAcronym } from './components/AvatarAcronym/AvatarAcronym';\nimport { AvatarBadge } from './components/AvatarBadge/AvatarBadge';\n\nexport interface AvatarProps extends ImageProps {\n  /** One or two letters to be shown as a placeholder. `fallbackIcon` will not be used if `acronym` is provided. */\n  acronym?: string;\n}\n\n/**\n * Renders an image with specific styles for an avatar presentation, including optional acronym display and badge support.\n * Utilizes the `Image` component for core functionality, enhancing it with avatar-specific features like acronyms and badges.\n */\nexport const Avatar = ({\n  className,\n  style,\n  acronym,\n  fallbackIcon,\n  size,\n  ...restProps\n}: AvatarProps) => (\n  <Image\n    style={{ borderRadius: '50%', ...style }}\n    className={classNames(\n      styles.wrapper,\n      acronym && styles['wrapper--withAcronym'],\n      className,\n    )}\n    fallbackIcon={acronym ? <AvatarAcronym size={size}>{acronym}</AvatarAcronym> : fallbackIcon}\n    size={size}\n    {...restProps}\n  />\n);\n\nAvatar.Badge = AvatarBadge;\n"],"mappings":";;;AAEA,SAASA,UAAU,QAAQ;AAE3B,SAASC,KAAK,QAAoB;AAClC,SAASC,aAAa,QAAQ;AAC9B,SAASC,WAAW,QAAQ;AAO5B;;;;AAIA,OAAO,MAAMC,MAAA,GAASC,MAAA;MAAC;MACrBC,SAAS;MACTC,KAAK;MACLC,OAAO;MACPC,YAAY;MACZC;IAAI,CAEQ,GAAAL,MAAA;IADTM,SAAA,GAAAC,0BAAA,CAAAP,MAAA,GALH,aACA,SACA,WACA,gBACA,O;sBAGAQ,IAAA,CAACZ,KAAA,EAAAa,cAAA;IACCP,KAAA,EAAOO,cAAA;MAAEC,YAAA,EAAc;OAAUR,KAAA;IACjCD,SAAA,EAAWN,UAAA,0BAETQ,OAAA,6BACAF,SAAA;IAEFG,YAAA,EAAcD,OAAA,gBAAUK,IAAA,CAACX,aAAA;MAAcQ,IAAA,EAAMA,IAAA;gBAAOF;SAA2BC,YAAA;IAC/EC,IAAA,EAAMA;KACFC,SAAA;;AAIRP,MAAA,CAAOY,KAAK,GAAGb,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}