{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../../../helpers/classNames\";\nimport { usePlatform } from \"../../../../../hooks/usePlatform\";\nimport { Tappable } from \"../../../../Service/Tappable/Tappable\";\nimport { Caption } from \"../../../../Typography/Caption/Caption\";\n/**\n * A component representing an individual item within a SegmentedControl.\n * It leverages the Tappable component for handling interactions and supports platform-specific styles.\n */\nexport const SegmentedControlItem = _param => {\n  var {\n      selected,\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"selected\", \"className\", \"children\"]);\n  const platform = usePlatform();\n  return /*#__PURE__*/_jsx(Tappable, _object_spread_props(_object_spread({\n    role: \"tab\",\n    Component: \"button\",\n    className: classNames(\"tgui-bbfb272d22eb23e8\", platform === 'ios' && \"tgui-513fce1023cbbd63\", className)\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(Caption, {\n      weight: selected ? '2' : '3',\n      children: children\n    })\n  }));\n};","map":{"version":3,"names":["classNames","usePlatform","Tappable","Caption","SegmentedControlItem","_param","selected","className","children","restProps","_object_without_properties","platform","_jsx","_object_spread_props","_object_spread","role","Component","weight"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Navigation/SegmentedControl/components/SegmentedControlItem/SegmentedControlItem.tsx"],"sourcesContent":["'use client';\n\nimport { ButtonHTMLAttributes } from 'react';\nimport styles from './SegmentedControlItem.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Caption } from 'components/Typography/Caption/Caption';\n\nexport interface SegmentedControlItemProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Whether the item is selected. Used by the parent SegmentedControl to style accordingly. */\n  selected?: boolean;\n}\n\n/**\n * A component representing an individual item within a SegmentedControl.\n * It leverages the Tappable component for handling interactions and supports platform-specific styles.\n */\nexport const SegmentedControlItem = ({\n  selected,\n  className,\n  children,\n  ...restProps\n}: SegmentedControlItemProps) => {\n  const platform = usePlatform();\n  return (\n    <Tappable\n      role=\"tab\"\n      Component=\"button\"\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        className,\n      )}\n      {...restProps}\n    >\n      <Caption weight={selected ? '2' : '3'}>{children}</Caption>\n    </Tappable>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,QAAQ,QAAQ;AACzB,SAASC,OAAO,QAAQ;AAOxB;;;;AAIA,OAAO,MAAMC,oBAAA,GAAuBC,MAAA;MAAC;MACnCC,QAAQ;MACRC,SAAS;MACTC;IAAQ,CAEkB,GAAAH,MAAA;IADvBI,SAAA,GAAAC,0BAAA,CAAAL,MAAA,GAHH,YACA,aACA,W;EAGA,MAAMM,QAAA,GAAWV,WAAA;EACjB,oBACEW,IAAA,CAACV,QAAA,EAAAW,oBAAA,CAAAC,cAAA;IACCC,IAAA,EAAK;IACLC,SAAA,EAAU;IACVT,SAAA,EAAWP,UAAA,0BAETW,QAAA,KAAa,kCACbJ,SAAA;KAEEE,SAAA;cAEJ,aAAAG,IAAA,CAACT,OAAA;MAAQc,MAAA,EAAQX,QAAA,GAAW,MAAM;gBAAME;;;AAG9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}