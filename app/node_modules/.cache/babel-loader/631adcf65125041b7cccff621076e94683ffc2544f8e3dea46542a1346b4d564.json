{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { clamp } from \"../../../helpers/math\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nconst PROGRESS_MIN_VALUE = 0;\nconst PROGRESS_MAX_VALUE = 100;\n/**\n * Renders a linear progress bar that visually represents completion percentage towards a goal.\n * The component respects accessibility standards by including appropriate ARIA attributes.\n */\nexport const Progress = _param => {\n  var {\n      value = 0,\n      className\n    } = _param,\n    restProps = _object_without_properties(_param, [\"value\", \"className\"]);\n  const platform = usePlatform();\n  const progress = clamp(value, PROGRESS_MIN_VALUE, PROGRESS_MAX_VALUE);\n  const title = `${progress} / ${PROGRESS_MAX_VALUE}`;\n  return /*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread({\n    title: title,\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": PROGRESS_MIN_VALUE,\n    \"aria-valuemax\": PROGRESS_MAX_VALUE,\n    className: classNames(\"tgui-ced47fd163a53511\", platform === 'base' && \"tgui-44060f289fdbdb84\", className)\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      \"aria-hidden\": true,\n      className: \"tgui-027278a6d6708965\",\n      style: {\n        width: `${progress}%`\n      }\n    })\n  }));\n};","map":{"version":3,"names":["classNames","clamp","usePlatform","PROGRESS_MIN_VALUE","PROGRESS_MAX_VALUE","Progress","_param","value","className","restProps","_object_without_properties","platform","progress","title","_jsx","_object_spread_props","_object_spread","role","style","width"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Feedback/Progress/Progress.tsx"],"sourcesContent":["'use client';\n\nimport { HTMLAttributes } from 'react';\nimport styles from './Progress.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { clamp } from 'helpers/math';\nimport { usePlatform } from 'hooks/usePlatform';\n\nexport interface ProgressProps extends HTMLAttributes<HTMLDivElement> {\n  /** The current value of the progress bar, expressed as a percentage. The value should be between 0 and 100. */\n  value?: number;\n}\n\nconst PROGRESS_MIN_VALUE = 0;\nconst PROGRESS_MAX_VALUE = 100;\n\n/**\n * Renders a linear progress bar that visually represents completion percentage towards a goal.\n * The component respects accessibility standards by including appropriate ARIA attributes.\n */\nexport const Progress = ({ value = 0, className, ...restProps }: ProgressProps) => {\n  const platform = usePlatform();\n\n  const progress = clamp(value, PROGRESS_MIN_VALUE, PROGRESS_MAX_VALUE);\n  const title = `${progress} / ${PROGRESS_MAX_VALUE}`;\n\n  return (\n    <div\n      title={title}\n      role=\"progressbar\"\n      aria-valuenow={value}\n      aria-valuemin={PROGRESS_MIN_VALUE}\n      aria-valuemax={PROGRESS_MAX_VALUE}\n      className={classNames(\n        styles.wrapper,\n        platform === 'base' && styles['wrapper--base'],\n        className,\n      )}\n      {...restProps}\n    >\n      <div aria-hidden className={styles.progress} style={{ width: `${progress}%` }} />\n    </div>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,KAAK,QAAQ;AACtB,SAASC,WAAW,QAAQ;AAO5B,MAAMC,kBAAA,GAAqB;AAC3B,MAAMC,kBAAA,GAAqB;AAE3B;;;;AAIA,OAAO,MAAMC,QAAA,GAAWC,MAAA;MAAC;MAAEC,KAAA,GAAQ,CAAC;MAAEC;IAAS,CAA+B,GAAAF,MAAA;IAA1BG,SAAA,GAAAC,0BAAA,CAAAJ,MAAA,GAAzB,SAAW,Y;EACpC,MAAMK,QAAA,GAAWT,WAAA;EAEjB,MAAMU,QAAA,GAAWX,KAAA,CAAMM,KAAA,EAAOJ,kBAAA,EAAoBC,kBAAA;EAClD,MAAMS,KAAA,GAAQ,GAAGD,QAAA,MAAcR,kBAAA,EAAoB;EAEnD,oBACEU,IAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA;IACCH,KAAA,EAAOA,KAAA;IACPI,IAAA,EAAK;IACL,iBAAeV,KAAA;IACf,iBAAeJ,kBAAA;IACf,iBAAeC,kBAAA;IACfI,SAAA,EAAWR,UAAA,0BAETW,QAAA,KAAa,mCACbH,SAAA;KAEEC,SAAA;cAEJ,aAAAK,IAAA,CAAC;MAAI,aAAW;MAACN,SAAS;MAAmBU,KAAA,EAAO;QAAEC,KAAA,EAAO,GAAGP,QAAA;MAAY;;;AAGlF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}