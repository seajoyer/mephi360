{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { VisuallyHidden } from \"../../Service/VisuallyHidden/VisuallyHidden\";\nconst platformStyles = {\n  base: \"tgui-2776944549f431fc\",\n  ios: \"tgui-b70ccb0e7742541a\"\n};\n/**\n * A custom switch component that mimics the behavior of a checkbox input but with enhanced styling.\n * It supports all the standard attributes of an HTML input element of type \"checkbox\".\n * The appearance of the switch can be customized to match either a base or iOS platform style using CSS modules.\n */\nexport const Switch = _param => {\n  var {\n      style,\n      className,\n      disabled,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"style\", \"className\", \"disabled\", \"children\"]);\n  const platform = usePlatform();\n  return /*#__PURE__*/_jsxs(\"label\", {\n    className: classNames(\"tgui-a1dc55b304d32032\", platformStyles[platform], disabled && \"tgui-57a00e000de7483d\", className),\n    children: [/*#__PURE__*/_jsx(VisuallyHidden, _object_spread_props(_object_spread({}, restProps), {\n      Component: \"input\",\n      type: \"checkbox\",\n      className: \"tgui-edfaab8ff474b0de\",\n      disabled: disabled\n    })), /*#__PURE__*/_jsx(\"div\", {\n      \"aria-hidden\": true,\n      className: \"tgui-3acc6d0262399734\"\n    }), children]\n  });\n};","map":{"version":3,"names":["classNames","usePlatform","VisuallyHidden","platformStyles","base","ios","Switch","_param","style","className","disabled","children","restProps","_object_without_properties","platform","_jsxs","_jsx","_object_spread_props","_object_spread","Component","type"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Form/Switch/Switch.tsx"],"sourcesContent":["'use client';\n\nimport { InputHTMLAttributes } from 'react';\nimport styles from './Switch.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { VisuallyHidden } from 'components/Service/VisuallyHidden/VisuallyHidden';\n\nexport interface SwitchProps\n  extends InputHTMLAttributes<HTMLInputElement> {}\n\nconst platformStyles = {\n  base: styles['wrapper--base'],\n  ios: styles['wrapper--ios'],\n};\n\n/**\n * A custom switch component that mimics the behavior of a checkbox input but with enhanced styling.\n * It supports all the standard attributes of an HTML input element of type \"checkbox\".\n * The appearance of the switch can be customized to match either a base or iOS platform style using CSS modules.\n */\nexport const Switch = ({\n  style,\n  className,\n  disabled,\n  children,\n  ...restProps\n}: SwitchProps) => {\n  const platform = usePlatform();\n\n  return (\n    <label\n      className={classNames(\n        styles.wrapper,\n        platformStyles[platform],\n        disabled && styles['wrapper--disabled'],\n        className,\n      )}\n    >\n      <VisuallyHidden\n        {...restProps}\n        Component=\"input\"\n        type=\"checkbox\"\n        className={styles.input}\n        disabled={disabled}\n      />\n      <div aria-hidden className={styles.control} />\n      {children}\n    </label>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,cAAc,QAAQ;AAK/B,MAAMC,cAAA,GAAiB;EACrBC,IAAI;EACJC,GAAG;AACL;AAEA;;;;;AAKA,OAAO,MAAMC,MAAA,GAASC,MAAA;MAAC;MACrBC,KAAK;MACLC,SAAS;MACTC,QAAQ;MACRC;IAAQ,CAEI,GAAAJ,MAAA;IADTK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,SACA,aACA,YACA,W;EAGA,MAAMO,QAAA,GAAWb,WAAA;EAEjB,oBACEc,KAAA,CAAC;IACCN,SAAA,EAAWT,UAAA,0BAETG,cAAc,CAACW,QAAA,CAAS,EACxBJ,QAAA,6BACAD,SAAA;4BAGFO,IAAA,CAACd,cAAA,EAAAe,oBAAA,CAAAC,cAAA,KACKN,SAAA;MACJO,SAAA,EAAU;MACVC,IAAA,EAAK;MACLX,SAAS;MACTC,QAAA,EAAUA;sBAEZM,IAAA,CAAC;MAAI,aAAW;MAACP,SAAS;QACzBE,QAAA;;AAGP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}