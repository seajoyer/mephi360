{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { Tappable } from \"../../Service/Tappable/Tappable\";\nconst modeStyles = {\n  bezeled: \"tgui-93cba8aff2e72079\",\n  plain: \"tgui-08ef1486bc111162\",\n  gray: \"tgui-2250ff52f0b5cf71\",\n  outline: \"tgui-53781f3cf83e8be1\"\n};\nconst sizeStyles = {\n  s: \"tgui-b92d762e02762017\",\n  m: \"tgui-024dfe77a8f2cfb0\",\n  l: \"tgui-8ca1879e1128c105\"\n};\n/**\n * Renders an icon button with customizable size and mode. It utilizes the `Tappable` component for enhanced\n * touch interaction, allowing it to serve various UI actions efficiently.\n */\nexport const IconButton = _param => {\n  var {\n      size = 'm',\n      mode = 'bezeled',\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"size\", \"mode\", \"className\", \"children\"]);\n  return /*#__PURE__*/_jsx(Tappable, _object_spread_props(_object_spread({\n    Component: \"button\",\n    className: classNames(\"tgui-dda0e80fdf796ba5\", modeStyles[mode], sizeStyles[size], className)\n  }, restProps), {\n    children: children\n  }));\n};","map":{"version":3,"names":["classNames","Tappable","modeStyles","bezeled","plain","gray","outline","sizeStyles","s","m","l","IconButton","_param","size","mode","className","children","restProps","_object_without_properties","_jsx","_object_spread_props","_object_spread","Component"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/IconButton/IconButton.tsx"],"sourcesContent":["import { ButtonHTMLAttributes } from 'react';\nimport styles from './IconButton.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\n\nexport interface IconButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Specifies the button size, affecting icon scaling. Recommended icon sizes are 20px for 's', 24px for 'm', and 28px for 'l'. */\n  size?: 's' | 'm' | 'l';\n  /** Defines the button's visual style, affecting its color and background. */\n  mode?: 'bezeled' | 'plain' | 'gray' | 'outline';\n}\n\nconst modeStyles = {\n  bezeled: styles['wrapper--bezeled'],\n  plain: styles['wrapper--plain'],\n  gray: styles['wrapper--gray'],\n  outline: styles['wrapper--outline'],\n};\n\nconst sizeStyles = {\n  s: styles['wrapper--s'],\n  m: styles['wrapper--m'],\n  l: styles['wrapper--l'],\n};\n\n/**\n * Renders an icon button with customizable size and mode. It utilizes the `Tappable` component for enhanced\n * touch interaction, allowing it to serve various UI actions efficiently.\n */\nexport const IconButton = ({\n  size = 'm',\n  mode = 'bezeled',\n  className,\n  children,\n  ...restProps\n}: IconButtonProps) => (\n  <Tappable\n    Component=\"button\"\n    className={classNames(\n      styles.wrapper,\n      modeStyles[mode],\n      sizeStyles[size],\n      className,\n    )}\n    {...restProps}\n  >\n    {children}\n  </Tappable>\n);\n"],"mappings":";;;;AAGA,SAASA,UAAU,QAAQ;AAE3B,SAASC,QAAQ,QAAQ;AASzB,MAAMC,UAAA,GAAa;EACjBC,OAAO;EACPC,KAAK;EACLC,IAAI;EACJC,OAAO;AACT;AAEA,MAAMC,UAAA,GAAa;EACjBC,CAAC;EACDC,CAAC;EACDC,CAAC;AACH;AAEA;;;;AAIA,OAAO,MAAMC,UAAA,GAAaC,MAAA;MAAC;MACzBC,IAAA,GAAO,GAAG;MACVC,IAAA,GAAO,SAAS;MAChBC,SAAS;MACTC;IAAQ,CAEQ,GAAAJ,MAAA;IADbK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,QACA,QACA,aACA,W;sBAGAO,IAAA,CAAClB,QAAA,EAAAmB,oBAAA,CAAAC,cAAA;IACCC,SAAA,EAAU;IACVP,SAAA,EAAWf,UAAA,0BAETE,UAAU,CAACY,IAAA,CAAK,EAChBP,UAAU,CAACM,IAAA,CAAK,EAChBE,SAAA;KAEEE,SAAA;cAEHD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}