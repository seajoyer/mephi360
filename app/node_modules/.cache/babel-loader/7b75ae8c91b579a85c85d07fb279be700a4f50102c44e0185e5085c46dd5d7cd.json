{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { Icon12Quote } from \"../../../icons/12/quote\";\nimport { IconContainer } from \"../IconContainer/IconContainer\";\nimport { Subheadline } from \"../../Typography/Subheadline/Subheadline\";\n/**\n * Renders a stylized blockquote element, typically used for quotations or special text. The component can include an\n * icon in the top right corner and supports different content types for flexible use within UI designs.\n */\nexport const Blockquote = _param => {\n  var {\n      type = 'text',\n      topRightIcon = /*#__PURE__*/_jsx(Icon12Quote, {}),\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"type\", \"topRightIcon\", \"className\", \"children\"]);\n  return /*#__PURE__*/_jsxs(\"div\", _object_spread_props(_object_spread({\n    className: classNames(\"tgui-79024fcb6d81ad79\", className)\n  }, restProps), {\n    children: [type === 'text' ? /*#__PURE__*/_jsx(Subheadline, {\n      className: \"tgui-16ed20e7a6e2daa0\",\n      children: children\n    }) : children, /*#__PURE__*/_jsx(IconContainer, {\n      className: \"tgui-bd5b6cd161834705\",\n      children: topRightIcon\n    })]\n  }));\n};","map":{"version":3,"names":["classNames","Icon12Quote","IconContainer","Subheadline","Blockquote","_param","type","topRightIcon","_jsx","className","children","restProps","_object_without_properties","_jsxs","_object_spread_props","_object_spread"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Blockquote/Blockquote.tsx"],"sourcesContent":["import { HTMLAttributes, ReactNode } from 'react';\nimport styles from './Blockquote.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { Icon12Quote } from 'icons/12/quote';\n\nimport { IconContainer } from 'components/Blocks/IconContainer/IconContainer';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\n\nexport interface BlockquoteProps extends HTMLAttributes<HTMLDivElement> {\n  /** Determines the content type within the blockquote, influencing its presentation. */\n  type?: 'text' | 'other';\n  /** An optional icon displayed in the top right corner of the blockquote. Defaults to a quote icon. */\n  topRightIcon?: ReactNode;\n  /** The main content of the blockquote. When `type` is 'text', this content is wrapped in a typography component. */\n  children?: ReactNode;\n}\n\n/**\n * Renders a stylized blockquote element, typically used for quotations or special text. The component can include an\n * icon in the top right corner and supports different content types for flexible use within UI designs.\n */\nexport const Blockquote = ({\n  type = 'text',\n  topRightIcon = <Icon12Quote />,\n  className,\n  children,\n  ...restProps\n}: BlockquoteProps) => (\n  <div\n    className={classNames(\n      styles.wrapper,\n      className,\n    )}\n    {...restProps}\n  >\n    {type === 'text' ? <Subheadline className={styles.text}>{children}</Subheadline> : children}\n    <IconContainer className={styles.topRightIcon}>\n      {topRightIcon}\n    </IconContainer>\n  </div>\n);\n"],"mappings":";;;;AAGA,SAASA,UAAU,QAAQ;AAE3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,aAAa,QAAQ;AAC9B,SAASC,WAAW,QAAQ;AAW5B;;;;AAIA,OAAO,MAAMC,UAAA,GAAaC,MAAA;MAAC;MACzBC,IAAA,GAAO,MAAM;MACbC,YAAA,gBAAeC,IAAA,CAACP,WAAA,KAAc;MAC9BQ,SAAS;MACTC;IAAQ,CAEQ,GAAAL,MAAA;IADbM,SAAA,GAAAC,0BAAA,CAAAP,MAAA,GAJH,QACA,gBACA,aACA,W;sBAGAQ,KAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA;IACCN,SAAA,EAAWT,UAAA,0BAETS,SAAA;KAEEE,SAAA;eAEHL,IAAA,KAAS,sBAASE,IAAA,CAACL,WAAA;MAAYM,SAAS;gBAAgBC;SAA0BA,QAAA,E,aACnFF,IAAA,CAACN,aAAA;MAAcO,SAAS;gBACrBF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}