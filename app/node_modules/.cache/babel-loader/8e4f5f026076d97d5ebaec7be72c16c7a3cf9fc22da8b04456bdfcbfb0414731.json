{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../../../helpers/classNames\";\nimport { usePlatform } from \"../../../../../hooks/usePlatform\";\nimport { Tappable } from \"../../../../Service/Tappable/Tappable\";\nimport { Text } from \"../../../../Typography/Text/Text\";\n/**\n * Tabs.Item component represents an individual tab within a TabsList.\n * It can be interactively selected to display associated content.\n */\nexport const TabsItem = _param => {\n  var {\n      selected,\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"selected\", \"className\", \"children\"]);\n  const platform = usePlatform();\n  const iosWeight = selected ? '1' : '2';\n  return /*#__PURE__*/_jsx(Tappable, _object_spread_props(_object_spread({\n    role: \"tab\",\n    Component: \"button\",\n    className: classNames(\"tgui-96892ceed80c1bf3\", selected && \"tgui-44ea091aea23df33\", className)\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(Text, {\n      weight: platform === 'ios' ? iosWeight : '2',\n      children: children\n    })\n  }));\n};","map":{"version":3,"names":["classNames","usePlatform","Tappable","Text","TabsItem","_param","selected","className","children","restProps","_object_without_properties","platform","iosWeight","_jsx","_object_spread_props","_object_spread","role","Component","weight"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Navigation/TabsList/components/TabsItem/TabsItem.tsx"],"sourcesContent":["'use client';\n\nimport { ButtonHTMLAttributes } from 'react';\nimport styles from './TabsItem.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Text } from 'components/Typography/Text/Text';\n\nexport interface TabsItemProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Indicates if the tab item is currently selected. */\n  selected?: boolean;\n}\n\n/**\n * Tabs.Item component represents an individual tab within a TabsList.\n * It can be interactively selected to display associated content.\n */\nexport const TabsItem = ({\n  selected,\n  className,\n  children,\n  ...restProps\n}: TabsItemProps) => {\n  const platform = usePlatform();\n  const iosWeight = selected ? '1' : '2';\n\n  return (\n    <Tappable\n      role=\"tab\"\n      Component=\"button\"\n      className={classNames(\n        styles.wrapper,\n        selected && styles['wrapper--selected'],\n        className,\n      )}\n      {...restProps}\n    >\n      <Text\n        weight={platform === 'ios' ? iosWeight : '2'}\n      >\n        {children}\n      </Text>\n    </Tappable>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,QAAQ,QAAQ;AACzB,SAASC,IAAI,QAAQ;AAOrB;;;;AAIA,OAAO,MAAMC,QAAA,GAAWC,MAAA;MAAC;MACvBC,QAAQ;MACRC,SAAS;MACTC;IAAQ,CAEM,GAAAH,MAAA;IADXI,SAAA,GAAAC,0BAAA,CAAAL,MAAA,GAHH,YACA,aACA,W;EAGA,MAAMM,QAAA,GAAWV,WAAA;EACjB,MAAMW,SAAA,GAAYN,QAAA,GAAW,MAAM;EAEnC,oBACEO,IAAA,CAACX,QAAA,EAAAY,oBAAA,CAAAC,cAAA;IACCC,IAAA,EAAK;IACLC,SAAA,EAAU;IACVV,SAAA,EAAWP,UAAA,0BAETM,QAAA,6BACAC,SAAA;KAEEE,SAAA;cAEJ,aAAAI,IAAA,CAACV,IAAA;MACCe,MAAA,EAAQP,QAAA,KAAa,QAAQC,SAAA,GAAY;gBAExCJ;;;AAIT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}