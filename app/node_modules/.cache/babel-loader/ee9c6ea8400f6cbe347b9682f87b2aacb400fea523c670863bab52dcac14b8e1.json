{"ast":null,"code":"import { useEnhancedEffect } from \"./useEnhancedEffect\";\nimport { isElement } from \"@floating-ui/utils/dom\";\n/**\n * Function helps to handle global clicks outside the given refs\n * If the click is outside the given refs, the callback will be called\n */\nexport const useGlobalClicks = (callback, ...refs) => {\n  useEnhancedEffect(() => {\n    const hasNotNullRefs = refs.some(ref => ref && ref.current !== null);\n    if (!document || !hasNotNullRefs) {\n      return () => {};\n    }\n    const handleClick = event => {\n      const targetEl = event.target;\n      const isClickInsideGivenRefs = isElement(targetEl) && refs.some(ref => ref && ref.current && ref.current.contains(targetEl));\n      !isClickInsideGivenRefs && callback(event);\n    };\n    document.addEventListener('click', handleClick, {\n      passive: true,\n      capture: true\n    });\n    return () => document.removeEventListener('click', handleClick, true);\n  }, [document, callback, ...refs]);\n};","map":{"version":3,"names":["useEnhancedEffect","isElement","useGlobalClicks","callback","refs","hasNotNullRefs","some","ref","current","document","handleClick","event","targetEl","target","isClickInsideGivenRefs","contains","addEventListener","passive","capture","removeEventListener"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/hooks/useGlobalClicks.ts"],"sourcesContent":["import { RefObject } from 'react';\n\nimport { useEnhancedEffect } from 'hooks/useEnhancedEffect';\n\nimport { isElement } from '@floating-ui/utils/dom';\n\n/**\n * Function helps to handle global clicks outside the given refs\n * If the click is outside the given refs, the callback will be called\n */\nexport const useGlobalClicks = <\n  T extends RefObject<ElementType> | undefined | null,\n  ElementType extends Element = Element,\n>(\n  callback: (event: MouseEvent) => void,\n  ...refs: T[]\n) => {\n  useEnhancedEffect(() => {\n    const hasNotNullRefs = refs.some((ref) => ref && ref.current !== null);\n    if (!document || !hasNotNullRefs) {\n      return () => {};\n    }\n\n    const handleClick = (event: MouseEvent) => {\n      const targetEl = event.target;\n      const isClickInsideGivenRefs =\n        isElement(targetEl) &&\n        refs.some((ref) => ref && ref.current && ref.current.contains(targetEl));\n\n      !isClickInsideGivenRefs && callback(event);\n    };\n\n    document.addEventListener('click', handleClick, {\n      passive: true,\n      capture: true,\n    });\n\n    return () => document.removeEventListener('click', handleClick, true);\n  }, [document, callback, ...refs]);\n};\n"],"mappings":"AAEA,SAASA,iBAAiB,QAAQ;AAElC,SAASC,SAAS,QAAQ;AAE1B;;;;AAIA,OAAO,MAAMC,eAAA,GAAkBA,CAI7BC,QAAA,EACA,GAAGC,IAAA;EAEHJ,iBAAA,CAAkB;IAChB,MAAMK,cAAA,GAAiBD,IAAA,CAAKE,IAAI,CAAEC,GAAA,IAAQA,GAAA,IAAOA,GAAA,CAAIC,OAAO,KAAK;IACjE,IAAI,CAACC,QAAA,IAAY,CAACJ,cAAA,EAAgB;MAChC,OAAO,OAAO;IAChB;IAEA,MAAMK,WAAA,GAAeC,KAAA;MACnB,MAAMC,QAAA,GAAWD,KAAA,CAAME,MAAM;MAC7B,MAAMC,sBAAA,GACJb,SAAA,CAAUW,QAAA,KACVR,IAAA,CAAKE,IAAI,CAAEC,GAAA,IAAQA,GAAA,IAAOA,GAAA,CAAIC,OAAO,IAAID,GAAA,CAAIC,OAAO,CAACO,QAAQ,CAACH,QAAA;MAEhE,CAACE,sBAAA,IAA0BX,QAAA,CAASQ,KAAA;IACtC;IAEAF,QAAA,CAASO,gBAAgB,CAAC,SAASN,WAAA,EAAa;MAC9CO,OAAA,EAAS;MACTC,OAAA,EAAS;IACX;IAEA,OAAO,MAAMT,QAAA,CAASU,mBAAmB,CAAC,SAAST,WAAA,EAAa;EAClE,GAAG,CAACD,QAAA,EAAUN,QAAA,E,GAAaC,IAAA,CAAK;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}