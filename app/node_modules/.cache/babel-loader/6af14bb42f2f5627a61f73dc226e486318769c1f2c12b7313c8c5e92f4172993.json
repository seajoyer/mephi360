{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { BaseSpinner } from \"./components/BaseSpinner/BaseSpinner\";\nimport { IOSSpinner } from \"./components/IOSSpinner/IOSSpinner\";\nconst sizeStyles = {\n  s: \"tgui-421d6dab8d2c78c1\",\n  m: \"tgui-a636342f03bb5c08\",\n  l: \"tgui-a53583a4b6d8fde0\"\n};\n/**\n * Provides a visual indicator for loading states across different platforms. It automatically selects\n * an appropriate spinner style based on the current platform, allowing for a consistent user experience.\n */\nexport const Spinner = ({\n  size = 'm',\n  className\n}) => {\n  const platform = usePlatform();\n  const Component = platform === 'ios' ? IOSSpinner : BaseSpinner;\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"status\",\n    className: classNames(\"tgui-0ac8c3540e603b63\", platform === 'ios' && \"tgui-562a3eae646b486d\", sizeStyles[size], className),\n    children: /*#__PURE__*/_jsx(Component, {\n      size: size\n    })\n  });\n};","map":{"version":3,"names":["classNames","usePlatform","BaseSpinner","IOSSpinner","sizeStyles","s","m","l","Spinner","size","className","platform","Component","_jsx","role"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Feedback/Spinner/Spinner.tsx"],"sourcesContent":["'use client';\n\nimport { HTMLAttributes } from 'react';\nimport styles from './Spinner.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { BaseSpinner } from './components/BaseSpinner/BaseSpinner';\nimport { IOSSpinner } from './components/IOSSpinner/IOSSpinner';\n\nexport interface SpinnerProps extends HTMLAttributes<HTMLDivElement> {\n  /** Determines the size of the spinner. Can be 'small' (s), 'medium' (m), or 'large' (l), with 'medium' being the default size. */\n  size: 's' | 'm' | 'l';\n}\n\nconst sizeStyles = {\n  s: styles['wrapper--s'],\n  m: styles['wrapper--m'],\n  l: styles['wrapper--l'],\n};\n\n/**\n * Provides a visual indicator for loading states across different platforms. It automatically selects\n * an appropriate spinner style based on the current platform, allowing for a consistent user experience.\n */\nexport const Spinner = ({\n  size = 'm',\n  className,\n}: SpinnerProps) => {\n  const platform = usePlatform();\n\n  const Component = platform === 'ios' ? IOSSpinner : BaseSpinner;\n  return (\n    <div\n      role=\"status\"\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        sizeStyles[size],\n        className,\n      )}\n    >\n      <Component size={size} />\n    </div>\n  );\n};\n"],"mappings":"AAAA;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,WAAW,QAAQ;AAC5B,SAASC,UAAU,QAAQ;AAO3B,MAAMC,UAAA,GAAa;EACjBC,CAAC;EACDC,CAAC;EACDC,CAAC;AACH;AAEA;;;;AAIA,OAAO,MAAMC,OAAA,GAAUA,CAAC;EACtBC,IAAA,GAAO,GAAG;EACVC;AAAS,CACI;EACb,MAAMC,QAAA,GAAWV,WAAA;EAEjB,MAAMW,SAAA,GAAYD,QAAA,KAAa,QAAQR,UAAA,GAAaD,WAAA;EACpD,oBACEW,IAAA,CAAC;IACCC,IAAA,EAAK;IACLJ,SAAA,EAAWV,UAAA,0BAETW,QAAA,KAAa,kCACbP,UAAU,CAACK,IAAA,CAAK,EAChBC,SAAA;cAGF,aAAAG,IAAA,CAACD,SAAA;MAAUH,IAAA,EAAMA;;;AAGvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}