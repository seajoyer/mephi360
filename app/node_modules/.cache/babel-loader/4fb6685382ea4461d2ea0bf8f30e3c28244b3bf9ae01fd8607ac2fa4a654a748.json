{"ast":null,"code":"'use client';\n\nimport { range } from \"../../../../helpers/array\";\nimport { useCustomEnsuredControl } from \"../../../../hooks/useEnsureControl\";\nimport { PaginationType } from \"./enum\";\n/**\n * A bit changed hook from @mui\n * Source: https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js\n * */\nexport const usePagination = ({\n  boundaryCount = 1,\n  count = 1,\n  defaultPage = 1,\n  hideNextButton = false,\n  hidePrevButton = false,\n  onChange,\n  page: pageProp,\n  siblingCount = 1\n}) => {\n  const [page, setPageState] = useCustomEnsuredControl({\n    value: pageProp,\n    defaultValue: defaultPage\n  });\n  const handleClick = (event, value) => {\n    if (!pageProp) {\n      setPageState(value);\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  const startPages = range(1, Math.min(boundaryCount, count));\n  const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);\n  const siblingsStart = Math.max(Math.min(\n  // Natural start\n  page - siblingCount,\n  // Lower boundary when page is high\n  count - boundaryCount - siblingCount * 2 - 1),\n  // Greater than startPages\n  boundaryCount + 2);\n  const siblingsEnd = Math.min(Math.max(\n  // Natural end\n  page + siblingCount,\n  // Upper boundary when page is low\n  boundaryCount + siblingCount * 2 + 2),\n  // Less than endPages\n  endPages.length > 0 ? endPages[0] - 2 : count - 1);\n  // Basic list of items to render\n  // e.g. itemList = ['first', 'previous', 1, 'ellipsis', 4, 5, 6, 'ellipsis', 10, 'next', 'last']\n  const itemList = [...(hidePrevButton ? [] : [PaginationType.Previous]), ...startPages,\n  // Start ellipsis\n  // eslint-disable-next-line no-nested-ternary\n  ...(siblingsStart > boundaryCount + 2 ? [PaginationType.StartEllipsis] : boundaryCount + 1 < count - boundaryCount ? [boundaryCount + 1] : []),\n  // Sibling pages\n  ...range(siblingsStart, siblingsEnd),\n  // End ellipsis\n  // eslint-disable-next-line no-nested-ternary\n  ...(siblingsEnd < count - boundaryCount - 1 ? [PaginationType.EndEllipsis] : count - boundaryCount > boundaryCount ? [count - boundaryCount] : []), ...endPages, ...(hideNextButton ? [] : [PaginationType.Next])];\n  // Map the button type to its page number\n  const buttonPage = type => {\n    switch (type) {\n      case 'previous':\n        return page - 1;\n      case 'next':\n        return page + 1;\n      default:\n        return null;\n    }\n  };\n  return itemList.map(typeOrPageNumber => {\n    if (typeof typeOrPageNumber === 'number') {\n      return {\n        onClick: event => handleClick(event, typeOrPageNumber),\n        type: PaginationType.Page,\n        page: typeOrPageNumber,\n        selected: typeOrPageNumber === page,\n        disabled: false,\n        'aria-current': typeOrPageNumber === page ? 'true' : undefined\n      };\n    }\n    return {\n      onClick: event => handleClick(event, buttonPage(typeOrPageNumber) || 0),\n      type: typeOrPageNumber,\n      page: buttonPage(typeOrPageNumber),\n      selected: false,\n      disabled: ![PaginationType.StartEllipsis, PaginationType.EndEllipsis].includes(typeOrPageNumber) && (typeOrPageNumber === PaginationType.Next ? page >= count : page <= 1)\n    };\n  });\n};","map":{"version":3,"names":["range","useCustomEnsuredControl","PaginationType","usePagination","boundaryCount","count","defaultPage","hideNextButton","hidePrevButton","onChange","page","pageProp","siblingCount","setPageState","value","defaultValue","handleClick","event","startPages","Math","min","endPages","max","siblingsStart","siblingsEnd","length","itemList","Previous","StartEllipsis","EndEllipsis","Next","buttonPage","type","map","typeOrPageNumber","onClick","Page","selected","disabled","undefined","includes"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Navigation/Pagination/hooks/usePagination.ts"],"sourcesContent":["'use client';\n\nimport { range } from 'helpers/array';\nimport { useCustomEnsuredControl } from 'hooks/useEnsureControl';\n\nimport { PaginationType } from './enum';\nimport { UsePaginationItem, UsePaginationProps } from './types';\n\n/**\n * A bit changed hook from @mui\n * Source: https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js\n * */\nexport const usePagination = ({\n  boundaryCount = 1,\n  count = 1,\n  defaultPage = 1,\n  hideNextButton = false,\n  hidePrevButton = false,\n  onChange,\n  page: pageProp,\n  siblingCount = 1,\n}: UsePaginationProps): UsePaginationItem[] => {\n  const [page, setPageState] = useCustomEnsuredControl({\n    value: pageProp,\n    defaultValue: defaultPage,\n  });\n\n  const handleClick: UsePaginationProps['onChange'] = (event, value) => {\n    if (!pageProp) {\n      setPageState(value);\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  const startPages = range(1, Math.min(boundaryCount, count));\n  const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);\n\n  const siblingsStart = Math.max(\n    Math.min(\n      // Natural start\n      page - siblingCount,\n      // Lower boundary when page is high\n      count - boundaryCount - siblingCount * 2 - 1,\n    ),\n    // Greater than startPages\n    boundaryCount + 2,\n  );\n\n  const siblingsEnd = Math.min(\n    Math.max(\n      // Natural end\n      page + siblingCount,\n      // Upper boundary when page is low\n      boundaryCount + siblingCount * 2 + 2,\n    ),\n    // Less than endPages\n    endPages.length > 0 ? endPages[0] - 2 : count - 1,\n  );\n\n  // Basic list of items to render\n  // e.g. itemList = ['first', 'previous', 1, 'ellipsis', 4, 5, 6, 'ellipsis', 10, 'next', 'last']\n  const itemList: Array<PaginationType | number> = [\n    ...(hidePrevButton ? [] : [PaginationType.Previous]),\n    ...startPages,\n\n    // Start ellipsis\n    // eslint-disable-next-line no-nested-ternary\n    ...(siblingsStart > boundaryCount + 2\n      ? [PaginationType.StartEllipsis]\n      : boundaryCount + 1 < count - boundaryCount\n        ? [boundaryCount + 1]\n        : []),\n\n    // Sibling pages\n    ...range(siblingsStart, siblingsEnd),\n\n    // End ellipsis\n    // eslint-disable-next-line no-nested-ternary\n    ...(siblingsEnd < count - boundaryCount - 1\n      ? [PaginationType.EndEllipsis]\n      : count - boundaryCount > boundaryCount\n        ? [count - boundaryCount]\n        : []),\n\n    ...endPages,\n    ...(hideNextButton ? [] : [PaginationType.Next]),\n  ];\n\n  // Map the button type to its page number\n  const buttonPage = (type: UsePaginationItem['type']) => {\n    switch (type) {\n      case 'previous':\n        return page - 1;\n      case 'next':\n        return page + 1;\n      default:\n        return null;\n    }\n  };\n\n  return itemList.map<UsePaginationItem>((typeOrPageNumber) => {\n    if (typeof typeOrPageNumber === 'number') {\n      return {\n        onClick: (event) => handleClick(event, typeOrPageNumber),\n        type: PaginationType.Page,\n        page: typeOrPageNumber,\n        selected: typeOrPageNumber === page,\n        disabled: false,\n        'aria-current': typeOrPageNumber === page ? 'true' : undefined,\n      };\n    }\n\n    return {\n      onClick: (event) => handleClick(event, buttonPage(typeOrPageNumber) || 0),\n      type: typeOrPageNumber,\n      page: buttonPage(typeOrPageNumber),\n      selected: false,\n      disabled:\n        (![PaginationType.StartEllipsis, PaginationType.EndEllipsis].includes(typeOrPageNumber) &&\n          (typeOrPageNumber === PaginationType.Next ? page >= count : page <= 1)),\n    };\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}