{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { multipleRef } from \"../../../helpers/react/refs\";\nimport { useObjectMemo } from \"../../../hooks/useObjectMemo\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport { useAppearance } from \"./hooks/useAppearance\";\nimport { usePlatform } from \"./hooks/usePlatform\";\nimport { usePortalContainer } from \"./hooks/usePortalContainer\";\nexport const AppRoot = /*#__PURE__*/forwardRef((_param, ref) => {\n  var {\n      platform: platformProp,\n      appearance: appearanceProp,\n      portalContainer: portalContainerProp,\n      children,\n      className\n    } = _param,\n    restProps = _object_without_properties(_param, [\"platform\", \"appearance\", \"portalContainer\", \"children\", \"className\"]);\n  const appearance = useAppearance(appearanceProp);\n  const portalContainer = usePortalContainer(portalContainerProp);\n  const platform = usePlatform(platformProp);\n  const contextValue = useObjectMemo({\n    platform,\n    appearance,\n    portalContainer,\n    isRendered: true\n  });\n  return /*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread({\n    ref: multipleRef(ref, portalContainer),\n    className: classNames(\"tgui-6a12827a138e8827\", platform === 'ios' && \"tgui-56dbb42c1dbd5e2b\", appearance === 'dark' && \"tgui-865b921add8ee075\", className)\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(AppRootContext.Provider, {\n      value: contextValue,\n      children: children\n    })\n  }));\n});","map":{"version":3,"names":["forwardRef","classNames","multipleRef","useObjectMemo","AppRootContext","useAppearance","usePlatform","usePortalContainer","AppRoot","_param","ref","platform","platformProp","appearance","appearanceProp","portalContainer","portalContainerProp","children","className","restProps","_object_without_properties","contextValue","isRendered","_jsx","_object_spread_props","_object_spread","Provider","value"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Service/AppRoot/AppRoot.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, HTMLAttributes } from 'react';\nimport styles from './AppRoot.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { multipleRef } from 'helpers/react/refs';\nimport { useObjectMemo } from 'hooks/useObjectMemo';\n\nimport { AppRootContext, AppRootContextInterface } from 'components/Service/AppRoot/AppRootContext';\nimport { useAppearance } from 'components/Service/AppRoot/hooks/useAppearance';\nimport { usePlatform } from './hooks/usePlatform';\nimport { usePortalContainer } from './hooks/usePortalContainer';\n\nexport interface AppRootProps extends HTMLAttributes<HTMLDivElement> {\n  /** Application platform, determined automatically if nothing passed */\n  platform?: AppRootContextInterface['platform'];\n  /** Application appearance, determined automatically if nothing passed */\n  appearance?: AppRootContextInterface['appearance'];\n  /** Rewriting portal container for rendering, AppRoot container as default */\n  portalContainer?: AppRootContextInterface['portalContainer'];\n}\n\nexport const AppRoot = forwardRef<HTMLDivElement, AppRootProps>(({\n  platform: platformProp,\n  appearance: appearanceProp,\n  portalContainer: portalContainerProp,\n  children,\n  className,\n  ...restProps\n}, ref) => {\n  const appearance = useAppearance(appearanceProp);\n  const portalContainer = usePortalContainer(portalContainerProp);\n  const platform = usePlatform(platformProp);\n\n  const contextValue = useObjectMemo({\n    platform,\n    appearance,\n    portalContainer,\n    isRendered: true,\n  });\n\n  return (\n    <div\n      ref={multipleRef(ref, portalContainer)}\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        appearance === 'dark' && styles['wrapper--dark'],\n        className,\n      )}\n      {...restProps}\n    >\n      <AppRootContext.Provider value={contextValue}>\n        {children}\n      </AppRootContext.Provider>\n    </div>\n  );\n});\n"],"mappings":"AAAA;;;;;;AAEA,SAASA,UAAU,QAAwB;AAG3C,SAASC,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAC5B,SAASC,aAAa,QAAQ;AAE9B,SAASC,cAAc,QAAiC;AACxD,SAASC,aAAa,QAAQ;AAC9B,SAASC,WAAW,QAAQ;AAC5B,SAASC,kBAAkB,QAAQ;AAWnC,OAAO,MAAMC,OAAA,gBAAUR,UAAA,CAAyC,CAAAS,MAAA,EAO7DC,GAAA;MAP8D;MAC/DC,QAAA,EAAUC,YAAY;MACtBC,UAAA,EAAYC,cAAc;MAC1BC,eAAA,EAAiBC,mBAAmB;MACpCC,QAAQ;MACRC;IAAS,CAEV,GAAAT,MAAA;IADIU,SAAA,GAAAC,0BAAA,CAAAX,MAAA,GALH,YACA,cACA,mBACA,YACA,Y;EAGA,MAAMI,UAAA,GAAaR,aAAA,CAAcS,cAAA;EACjC,MAAMC,eAAA,GAAkBR,kBAAA,CAAmBS,mBAAA;EAC3C,MAAML,QAAA,GAAWL,WAAA,CAAYM,YAAA;EAE7B,MAAMS,YAAA,GAAelB,aAAA,CAAc;IACjCQ,QAAA;IACAE,UAAA;IACAE,eAAA;IACAO,UAAA,EAAY;EACd;EAEA,oBACEC,IAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA;IACCf,GAAA,EAAKR,WAAA,CAAYQ,GAAA,EAAKK,eAAA;IACtBG,SAAA,EAAWjB,UAAA,0BAETU,QAAA,KAAa,kCACbE,UAAA,KAAe,mCACfK,SAAA;KAEEC,SAAA;cAEJ,aAAAI,IAAA,CAACnB,cAAA,CAAesB,QAAQ;MAACC,KAAA,EAAON,YAAA;gBAC7BJ;;;AAIT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}