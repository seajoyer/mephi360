{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { autoUpdate } from \"@floating-ui/react-dom\";\nimport { isHTMLElement } from \"@floating-ui/utils/dom\";\nconst defaultOptions = {\n  ancestorScroll: true,\n  ancestorResize: true,\n  elementResize: false,\n  animationFrame: false\n};\nexport const autoUpdateFloatingElement = (reference, floating, update, options = defaultOptions) => {\n  const {\n      elementResize = false\n    } = options,\n    restOptions = _object_without_properties(options, [\"elementResize\"]);\n  const autoUpdateLibDisposer = autoUpdate(reference, floating, update, _object_spread_props(_object_spread({}, restOptions), {\n    elementResize: false\n  }));\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new MutationObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    if (isHTMLElement(reference)) {\n      observer.observe(reference, {\n        childList: true,\n        subtree: true\n      });\n    }\n    observer.observe(floating, {\n      childList: true,\n      subtree: true\n    });\n  }\n  return () => {\n    if (observer !== null) {\n      observer.disconnect();\n      observer = null;\n    }\n    autoUpdateLibDisposer();\n  };\n};","map":{"version":3,"names":["autoUpdate","isHTMLElement","defaultOptions","ancestorScroll","ancestorResize","elementResize","animationFrame","autoUpdateFloatingElement","reference","floating","update","options","restOptions","_object_without_properties","autoUpdateLibDisposer","_object_spread_props","_object_spread","observer","initialUpdate","MutationObserver","observe","childList","subtree","disconnect"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Overlays/Popper/helpers/autoUpdateFloatingElement.ts"],"sourcesContent":["import { FloatingElement } from '@floating-ui/core';\nimport { autoUpdate, AutoUpdateOptions, ReferenceType } from '@floating-ui/react-dom';\nimport { isHTMLElement } from '@floating-ui/utils/dom';\n\nconst defaultOptions = {\n  ancestorScroll: true,\n  ancestorResize: true,\n  elementResize: false,\n  animationFrame: false,\n};\n\nexport const autoUpdateFloatingElement = (\n  reference: ReferenceType,\n  floating: FloatingElement,\n  update: () => void,\n  options: Partial<AutoUpdateOptions> = defaultOptions,\n): ReturnType<typeof autoUpdate> => {\n  const { elementResize = false, ...restOptions } = options;\n\n  const autoUpdateLibDisposer = autoUpdate(reference, floating, update, {\n    ...restOptions,\n    elementResize: false,\n  });\n\n  let observer: MutationObserver | null = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new MutationObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n\n    if (isHTMLElement(reference)) {\n      observer.observe(reference, {\n        childList: true,\n        subtree: true,\n      });\n    }\n\n    observer.observe(floating, {\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  return () => {\n    if (observer !== null) {\n      observer.disconnect();\n      observer = null;\n    }\n    autoUpdateLibDisposer();\n  };\n};\n"],"mappings":";;;AACA,SAASA,UAAU,QAA0C;AAC7D,SAASC,aAAa,QAAQ;AAE9B,MAAMC,cAAA,GAAiB;EACrBC,cAAA,EAAgB;EAChBC,cAAA,EAAgB;EAChBC,aAAA,EAAe;EACfC,cAAA,EAAgB;AAClB;AAEA,OAAO,MAAMC,yBAAA,GAA4BA,CACvCC,SAAA,EACAC,QAAA,EACAC,MAAA,EACAC,OAAA,GAAsCT,cAAc;EAEpD,MAAM;MAAEG,aAAA,GAAgB;IAAK,CAAkB,GAAGM,OAAA;IAAhBC,WAAA,GAAAC,0BAAA,CAAgBF,OAAA,GAA1C,gB;EAER,MAAMG,qBAAA,GAAwBd,UAAA,CAAWQ,SAAA,EAAWC,QAAA,EAAUC,MAAA,EAAQK,oBAAA,CAAAC,cAAA,KACjEJ,WAAA;IACHP,aAAA,EAAe;;EAGjB,IAAIY,QAAA,GAAoC;EACxC,IAAIZ,aAAA,EAAe;IACjB,IAAIa,aAAA,GAAgB;IACpBD,QAAA,GAAW,IAAIE,gBAAA,CAAiB;MAC9B,IAAI,CAACD,aAAA,EAAe;QAClBR,MAAA;MACF;MAEAQ,aAAA,GAAgB;IAClB;IAEA,IAAIjB,aAAA,CAAcO,SAAA,GAAY;MAC5BS,QAAA,CAASG,OAAO,CAACZ,SAAA,EAAW;QAC1Ba,SAAA,EAAW;QACXC,OAAA,EAAS;MACX;IACF;IAEAL,QAAA,CAASG,OAAO,CAACX,QAAA,EAAU;MACzBY,SAAA,EAAW;MACXC,OAAA,EAAS;IACX;EACF;EAEA,OAAO;IACL,IAAIL,QAAA,KAAa,MAAM;MACrBA,QAAA,CAASM,UAAU;MACnBN,QAAA,GAAW;IACb;IACAH,qBAAA;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}