{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { Icon28Attach } from \"../../../icons/28/attach\";\nimport { ButtonCell } from \"../../Blocks/Cell/components/ButtonCell/ButtonCell\";\nimport { VisuallyHidden } from \"../../Service/VisuallyHidden/VisuallyHidden\";\n/**\n * Renders a file input disguised as a button, enhancing the user interface and improving usability.\n * It leverages the `ButtonCell` component for consistent styling across the application.\n */\nexport const FileInput = /*#__PURE__*/forwardRef((_param, ref) => {\n  var {\n      label = 'Attach file',\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"label\", \"className\", \"children\"]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    className: className,\n    children: [children, /*#__PURE__*/_jsxs(ButtonCell, {\n      Component: \"label\",\n      before: /*#__PURE__*/_jsx(Icon28Attach, {}),\n      children: [/*#__PURE__*/_jsx(VisuallyHidden, {\n        children: /*#__PURE__*/_jsx(\"input\", _object_spread({\n          type: \"file\",\n          placeholder: label\n        }, restProps))\n      }), label]\n    })]\n  });\n});","map":{"version":3,"names":["forwardRef","Icon28Attach","ButtonCell","VisuallyHidden","FileInput","_param","ref","label","className","children","restProps","_object_without_properties","_jsxs","Component","before","_jsx","_object_spread","type","placeholder"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Form/FileInput/FileInput.tsx"],"sourcesContent":["import { forwardRef, InputHTMLAttributes } from 'react';\n\nimport { Icon28Attach } from 'icons/28/attach';\n\nimport { ButtonCell } from 'components/Blocks/Cell/components/ButtonCell/ButtonCell';\nimport { VisuallyHidden } from 'components/Service/VisuallyHidden/VisuallyHidden';\n\nexport interface FileInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  /** Text label for the file input, used as the button label. */\n  label?: string;\n}\n\n/**\n * Renders a file input disguised as a button, enhancing the user interface and improving usability.\n * It leverages the `ButtonCell` component for consistent styling across the application.\n */\nexport const FileInput = forwardRef<HTMLDivElement, FileInputProps>(({\n  label = 'Attach file',\n  className,\n  children,\n  ...restProps\n}, ref) => (\n  <div ref={ref} className={className}>\n    {children}\n    <ButtonCell Component=\"label\" before={<Icon28Attach />}>\n      <VisuallyHidden>\n        <input type=\"file\" placeholder={label} {...restProps} />\n      </VisuallyHidden>\n      {label}\n    </ButtonCell>\n  </div>\n));\n"],"mappings":";;;AAAA,SAASA,UAAU,QAA6B;AAEhD,SAASC,YAAY,QAAQ;AAE7B,SAASC,UAAU,QAAQ;AAC3B,SAASC,cAAc,QAAQ;AAO/B;;;;AAIA,OAAO,MAAMC,SAAA,gBAAYJ,UAAA,CAA2C,CAAAK,MAAA,EAKjEC,GAAA;MALkE;MACnEC,KAAA,GAAQ,aAAa;MACrBC,SAAS;MACTC;IAAQ,CAET,GAAAJ,MAAA;IADIK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAHH,SACA,aACA,W;sBAGAO,KAAA,CAAC;IAAIN,GAAA,EAAKA,GAAA;IAAKE,SAAA,EAAWA,SAAA;eACvBC,QAAA,E,aACDG,KAAA,CAACV,UAAA;MAAWW,SAAA,EAAU;MAAQC,MAAA,eAAQC,IAAA,CAACd,YAAA;8BACrCc,IAAA,CAACZ,cAAA;kBACC,aAAAY,IAAA,CAAC,SAAAC,cAAA;UAAMC,IAAA,EAAK;UAAOC,WAAA,EAAaX;WAAWG,SAAA;UAE5CH,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}