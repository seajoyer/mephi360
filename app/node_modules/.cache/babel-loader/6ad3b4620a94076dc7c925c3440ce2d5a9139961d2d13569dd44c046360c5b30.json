{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Caption } from \"../../../../Typography/Caption/Caption\";\nimport { Headline } from \"../../../../Typography/Headline/Headline\";\nimport { LargeTitle } from \"../../../../Typography/LargeTitle/LargeTitle\";\nimport { Title } from \"../../../../Typography/Title/Title\";\nexport const AvatarAcronym = _param => {\n  var {\n      size\n    } = _param,\n    restProps = _object_without_properties(_param, [\"size\"]);\n  if (!size) {\n    return null;\n  }\n  if (size <= 28) {\n    return /*#__PURE__*/_jsx(Caption, _object_spread({\n      level: size <= 24 ? '2' : '1',\n      weight: \"1\",\n      caps: true\n    }, restProps));\n  }\n  if (size === 40) {\n    return /*#__PURE__*/_jsx(Headline, _object_spread({\n      weight: \"2\",\n      caps: true\n    }, restProps));\n  }\n  if (size === 48) {\n    return /*#__PURE__*/_jsx(Title, _object_spread({\n      weight: \"1\",\n      level: \"3\",\n      caps: true\n    }, restProps));\n  }\n  return /*#__PURE__*/_jsx(LargeTitle, _object_spread({\n    weight: \"1\",\n    caps: true\n  }, restProps));\n};","map":{"version":3,"names":["Caption","Headline","LargeTitle","Title","AvatarAcronym","_param","size","restProps","_object_without_properties","_jsx","_object_spread","level","weight","caps"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Avatar/components/AvatarAcronym/AvatarAcronym.tsx"],"sourcesContent":["import { ImageProps } from 'components/Blocks/Image/Image';\nimport { Caption } from 'components/Typography/Caption/Caption';\nimport { Headline } from 'components/Typography/Headline/Headline';\nimport { LargeTitle } from 'components/Typography/LargeTitle/LargeTitle';\nimport { Title } from 'components/Typography/Title/Title';\nimport { TypographyProps } from 'components/Typography/Typography';\n\nexport interface AvatarAcronymProps extends TypographyProps {\n  size: ImageProps['size'];\n}\n\nexport const AvatarAcronym = ({ size, ...restProps }: AvatarAcronymProps) => {\n  if (!size) {\n    return null;\n  }\n\n  if (size <= 28) {\n    return <Caption level={size <= 24 ? '2' : '1'} weight=\"1\" caps {...restProps} />;\n  }\n\n  if (size === 40) {\n    return <Headline weight=\"2\" caps {...restProps} />;\n  }\n\n  if (size === 48) {\n    return <Title weight=\"1\" level=\"3\" caps {...restProps} />;\n  }\n\n  return <LargeTitle weight=\"1\" caps {...restProps} />;\n};\n"],"mappings":";;;AACA,SAASA,OAAO,QAAQ;AACxB,SAASC,QAAQ,QAAQ;AACzB,SAASC,UAAU,QAAQ;AAC3B,SAASC,KAAK,QAAQ;AAOtB,OAAO,MAAMC,aAAA,GAAgBC,MAAA;MAAC;MAAEC;IAAI,CAAoC,GAAAD,MAAA;IAA/BE,SAAA,GAAAC,0BAAA,CAAAH,MAAA,GAAT,O;EAC9B,IAAI,CAACC,IAAA,EAAM;IACT,OAAO;EACT;EAEA,IAAIA,IAAA,IAAQ,IAAI;IACd,oBAAOG,IAAA,CAACT,OAAA,EAAAU,cAAA;MAAQC,KAAA,EAAOL,IAAA,IAAQ,KAAK,MAAM;MAAKM,MAAA,EAAO;MAAIC,IAAI;OAAKN,SAAA;EACrE;EAEA,IAAID,IAAA,KAAS,IAAI;IACf,oBAAOG,IAAA,CAACR,QAAA,EAAAS,cAAA;MAASE,MAAA,EAAO;MAAIC,IAAI;OAAKN,SAAA;EACvC;EAEA,IAAID,IAAA,KAAS,IAAI;IACf,oBAAOG,IAAA,CAACN,KAAA,EAAAO,cAAA;MAAME,MAAA,EAAO;MAAID,KAAA,EAAM;MAAIE,IAAI;OAAKN,SAAA;EAC9C;EAEA,oBAAOE,IAAA,CAACP,UAAA,EAAAQ,cAAA;IAAWE,MAAA,EAAO;IAAIC,IAAI;KAAKN,SAAA;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}