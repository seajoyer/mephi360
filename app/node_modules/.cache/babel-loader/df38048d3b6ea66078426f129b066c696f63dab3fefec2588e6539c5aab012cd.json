{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { VisuallyHidden } from \"../../Service/VisuallyHidden/VisuallyHidden\";\nimport { IconMultiselectable } from \"./icons/multiselectable\";\nimport { IconMultiselectableChecked } from \"./icons/multiselectable_checked\";\nimport { IconMultiselectableIOS } from \"./icons/multiselectable_ios\";\nimport { IconMultiselectableIOSChecked } from \"./icons/multiselectable_ios_checked\";\n/**\n * Renders a custom multiselectable checkbox input, adapting its icons based on the current platform (iOS or others).\n * Supports all standard input checkbox properties.\n */\nexport const Multiselectable = _param => {\n  var {\n      style,\n      className,\n      disabled\n    } = _param,\n    restProps = _object_without_properties(_param, [\"style\", \"className\", \"disabled\"]);\n  const platform = usePlatform();\n  const UnCheckedIcon = platform === 'ios' ? IconMultiselectableIOS : IconMultiselectable;\n  const CheckedIcon = platform === 'ios' ? IconMultiselectableIOSChecked : IconMultiselectableChecked;\n  return /*#__PURE__*/_jsxs(\"label\", {\n    className: classNames(\"tgui-9bfdebc3fdae031b\", disabled && \"tgui-55c1caaee1c1e33e\", className),\n    children: [/*#__PURE__*/_jsx(VisuallyHidden, _object_spread_props(_object_spread({}, restProps), {\n      Component: \"input\",\n      type: \"checkbox\",\n      className: \"tgui-7cd9bbef46d9194c\",\n      disabled: disabled\n    })), /*#__PURE__*/_jsx(UnCheckedIcon, {\n      className: \"tgui-18734a5360b84fba\",\n      \"aria-hidden\": true\n    }), /*#__PURE__*/_jsx(CheckedIcon, {\n      className: \"tgui-1ec4b447aa5cf66a\",\n      \"aria-hidden\": true\n    })]\n  });\n};","map":{"version":3,"names":["classNames","usePlatform","VisuallyHidden","IconMultiselectable","IconMultiselectableChecked","IconMultiselectableIOS","IconMultiselectableIOSChecked","Multiselectable","_param","style","className","disabled","restProps","_object_without_properties","platform","UnCheckedIcon","CheckedIcon","_jsxs","_jsx","_object_spread_props","_object_spread","Component","type"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Form/Multiselectable/Multiselectable.tsx"],"sourcesContent":["'use client';\n\nimport { InputHTMLAttributes } from 'react';\nimport styles from './Multiselectable.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { VisuallyHidden } from 'components/Service/VisuallyHidden/VisuallyHidden';\nimport { IconMultiselectable } from './icons/multiselectable';\nimport { IconMultiselectableChecked } from './icons/multiselectable_checked';\nimport { IconMultiselectableIOS } from './icons/multiselectable_ios';\nimport { IconMultiselectableIOSChecked } from './icons/multiselectable_ios_checked';\n\nexport interface MultiselectableProps\n  extends InputHTMLAttributes<HTMLInputElement> {\n}\n\n/**\n * Renders a custom multiselectable checkbox input, adapting its icons based on the current platform (iOS or others).\n * Supports all standard input checkbox properties.\n */\nexport const Multiselectable = ({\n  style,\n  className,\n  disabled,\n  ...restProps\n}: MultiselectableProps) => {\n  const platform = usePlatform();\n\n  const UnCheckedIcon = platform === 'ios' ? IconMultiselectableIOS : IconMultiselectable;\n  const CheckedIcon = platform === 'ios' ? IconMultiselectableIOSChecked : IconMultiselectableChecked;\n\n  return (\n    <label\n      className={classNames(\n        styles.wrapper,\n        disabled && styles['wrapper--disabled'],\n        className,\n      )}\n    >\n      <VisuallyHidden\n        {...restProps}\n        Component=\"input\"\n        type=\"checkbox\"\n        className={styles.input}\n        disabled={disabled}\n      />\n      <UnCheckedIcon className={styles.icon} aria-hidden />\n      <CheckedIcon className={styles.checkedIcon} aria-hidden />\n    </label>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,cAAc,QAAQ;AAC/B,SAASC,mBAAmB,QAAQ;AACpC,SAASC,0BAA0B,QAAQ;AAC3C,SAASC,sBAAsB,QAAQ;AACvC,SAASC,6BAA6B,QAAQ;AAM9C;;;;AAIA,OAAO,MAAMC,eAAA,GAAkBC,MAAA;MAAC;MAC9BC,KAAK;MACLC,SAAS;MACTC;IAAQ,CAEa,GAAAH,MAAA;IADlBI,SAAA,GAAAC,0BAAA,CAAAL,MAAA,GAHH,SACA,aACA,W;EAGA,MAAMM,QAAA,GAAWb,WAAA;EAEjB,MAAMc,aAAA,GAAgBD,QAAA,KAAa,QAAQT,sBAAA,GAAyBF,mBAAA;EACpE,MAAMa,WAAA,GAAcF,QAAA,KAAa,QAAQR,6BAAA,GAAgCF,0BAAA;EAEzE,oBACEa,KAAA,CAAC;IACCP,SAAA,EAAWV,UAAA,0BAETW,QAAA,6BACAD,SAAA;4BAGFQ,IAAA,CAAChB,cAAA,EAAAiB,oBAAA,CAAAC,cAAA,KACKR,SAAA;MACJS,SAAA,EAAU;MACVC,IAAA,EAAK;MACLZ,SAAS;MACTC,QAAA,EAAUA;sBAEZO,IAAA,CAACH,aAAA;MAAcL,SAAS;MAAe,aAAW;qBAClDQ,IAAA,CAACF,WAAA;MAAYN,SAAS;MAAsB,aAAW;;;AAG7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}