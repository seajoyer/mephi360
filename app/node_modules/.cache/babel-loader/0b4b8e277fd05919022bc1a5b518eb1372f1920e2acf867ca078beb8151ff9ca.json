{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../../../helpers/classNames\";\nimport { usePlatform } from \"../../../../../hooks/usePlatform\";\nimport { Tappable } from \"../../../../Service/Tappable/Tappable\";\nimport { LargeTitle } from \"../../../../Typography/LargeTitle/LargeTitle\";\nimport { Title } from \"../../../../Typography/Title/Title\";\nexport const ButtonTypography = props => {\n  const platform = usePlatform();\n  if (platform === 'ios') {\n    return /*#__PURE__*/_jsx(LargeTitle, _object_spread({}, props));\n  }\n  return /*#__PURE__*/_jsx(Title, _object_spread({}, props));\n};\nexport const PinInputButton = _param => {\n  var {\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\"]);\n  const platform = usePlatform();\n  return /*#__PURE__*/_jsx(Tappable, _object_spread_props(_object_spread({\n    Component: \"button\",\n    className: classNames(\"tgui-6eaa561b38208c72\", platform === 'ios' && \"tgui-3bea52c968cee224\")\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(ButtonTypography, {\n      children: children\n    })\n  }));\n};","map":{"version":3,"names":["classNames","usePlatform","Tappable","LargeTitle","Title","ButtonTypography","props","platform","_jsx","_object_spread","PinInputButton","_param","children","restProps","_object_without_properties","_object_spread_props","Component","className"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Form/PinInput/components/PinInputButton/PinInputButton.tsx"],"sourcesContent":["import { ButtonHTMLAttributes } from 'react';\nimport styles from './PinInputButton.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { LargeTitle } from 'components/Typography/LargeTitle/LargeTitle';\nimport { Title } from 'components/Typography/Title/Title';\nimport { TypographyProps } from 'components/Typography/Typography';\n\nexport interface PinInputButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {}\n\nexport const ButtonTypography = (props: TypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === 'ios') {\n    return <LargeTitle {...props} />;\n  }\n\n  return <Title {...props} />;\n};\n\nexport const PinInputButton = ({\n  children,\n  ...restProps\n}: PinInputButtonProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      Component=\"button\"\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n      )}\n      {...restProps}\n    >\n      <ButtonTypography>{children}</ButtonTypography>\n    </Tappable>\n  );\n};\n"],"mappings":";;;;AAGA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,QAAQ,QAAQ;AACzB,SAASC,UAAU,QAAQ;AAC3B,SAASC,KAAK,QAAQ;AAKtB,OAAO,MAAMC,gBAAA,GAAoBC,KAAA;EAC/B,MAAMC,QAAA,GAAWN,WAAA;EAEjB,IAAIM,QAAA,KAAa,OAAO;IACtB,oBAAOC,IAAA,CAACL,UAAA,EAAAM,cAAA,KAAeH,KAAA;EACzB;EAEA,oBAAOE,IAAA,CAACJ,KAAA,EAAAK,cAAA,KAAUH,KAAA;AACpB;AAEA,OAAO,MAAMI,cAAA,GAAiBC,MAAA;MAAC;MAC7BC;IAAQ,CAEY,GAAAD,MAAA;IADjBE,SAAA,GAAAC,0BAAA,CAAAH,MAAA,GADH,W;EAGA,MAAMJ,QAAA,GAAWN,WAAA;EAEjB,oBACEO,IAAA,CAACN,QAAA,EAAAa,oBAAA,CAAAN,cAAA;IACCO,SAAA,EAAU;IACVC,SAAA,EAAWjB,UAAA,0BAETO,QAAA,KAAa;KAEXM,SAAA;cAEJ,aAAAL,IAAA,CAACH,gBAAA;gBAAkBO;;;AAGzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}