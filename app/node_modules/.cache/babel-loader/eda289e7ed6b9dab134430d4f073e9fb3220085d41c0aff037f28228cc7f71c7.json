{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useRef } from \"react\";\nimport { classNames } from \"../../../../../helpers/classNames\";\nimport { AccordionContext } from \"../../AccordionContext\";\nimport { calcMaxHeight } from \"./helpers/calcMaxHeight\";\n/**\n * Renders the content part of an accordion, leveraging context to control visibility and animation.\n * Utilizes `calcMaxHeight` for smooth height transitions during expand/collapse actions.\n */\nexport const AccordionContent = _param => {\n  var {\n      className,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"children\"]);\n  const bodyRef = useRef(null);\n  const {\n    expanded,\n    labelId,\n    contentId\n  } = useContext(AccordionContext);\n  return /*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread({\n    id: contentId,\n    role: \"region\",\n    \"aria-labelledby\": labelId,\n    \"aria-hidden\": !expanded,\n    className: classNames(\"tgui-f23c0e195677169c\", className)\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: bodyRef,\n      className: \"tgui-947b927060015de8\",\n      style: {\n        maxHeight: calcMaxHeight(expanded, bodyRef.current)\n      },\n      children: children\n    })\n  }));\n};","map":{"version":3,"names":["useContext","useRef","classNames","AccordionContext","calcMaxHeight","AccordionContent","_param","className","children","restProps","_object_without_properties","bodyRef","expanded","labelId","contentId","_jsx","_object_spread_props","_object_spread","id","role","ref","style","maxHeight","current"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Accordion/components/AccordionContent/AccordionContent.tsx"],"sourcesContent":["'use client';\n\nimport { HTMLAttributes, useContext, useRef } from 'react';\nimport styles from './AccordionContent.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { AccordionContext } from 'components/Blocks/Accordion/AccordionContext';\nimport { calcMaxHeight } from './helpers/calcMaxHeight';\n\nexport interface AccordionContentProps extends HTMLAttributes<HTMLDivElement> {}\n\n/**\n * Renders the content part of an accordion, leveraging context to control visibility and animation.\n * Utilizes `calcMaxHeight` for smooth height transitions during expand/collapse actions.\n */\nexport const AccordionContent = ({\n  className,\n  children,\n  ...restProps\n}: AccordionContentProps) => {\n  const bodyRef = useRef(null);\n  const { expanded, labelId, contentId } = useContext(AccordionContext);\n\n  return (\n    <div\n      id={contentId}\n      role=\"region\"\n      aria-labelledby={labelId}\n      aria-hidden={!expanded}\n      className={classNames(styles.wrapper, className)}\n      {...restProps}\n    >\n      <div\n        ref={bodyRef}\n        className={styles.body}\n        style={{\n          maxHeight: calcMaxHeight(expanded, bodyRef.current),\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,SAAyBA,UAAU,EAAEC,MAAM,QAAQ;AAGnD,SAASC,UAAU,QAAQ;AAE3B,SAASC,gBAAgB,QAAQ;AACjC,SAASC,aAAa,QAAQ;AAI9B;;;;AAIA,OAAO,MAAMC,gBAAA,GAAmBC,MAAA;MAAC;MAC/BC,SAAS;MACTC;IAAQ,CAEc,GAAAF,MAAA;IADnBG,SAAA,GAAAC,0BAAA,CAAAJ,MAAA,GAFH,aACA,W;EAGA,MAAMK,OAAA,GAAUV,MAAA,CAAO;EACvB,MAAM;IAAEW,QAAQ;IAAEC,OAAO;IAAEC;EAAS,CAAE,GAAGd,UAAA,CAAWG,gBAAA;EAEpD,oBACEY,IAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA;IACCC,EAAA,EAAIJ,SAAA;IACJK,IAAA,EAAK;IACL,mBAAiBN,OAAA;IACjB,eAAa,CAACD,QAAA;IACdL,SAAA,EAAWL,UAAA,0BAA2BK,SAAA;KAClCE,SAAA;cAEJ,aAAAM,IAAA,CAAC;MACCK,GAAA,EAAKT,OAAA;MACLJ,SAAS;MACTc,KAAA,EAAO;QACLC,SAAA,EAAWlB,aAAA,CAAcQ,QAAA,EAAUD,OAAA,CAAQY,OAAO;MACpD;gBAECf;;;AAIT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}