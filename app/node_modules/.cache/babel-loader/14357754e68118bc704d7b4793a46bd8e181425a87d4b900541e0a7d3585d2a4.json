{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { hasReactNode } from \"../../../helpers/react/node\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { Tappable } from \"../../Service/Tappable/Tappable\";\nimport { Subheadline } from \"../../Typography/Subheadline/Subheadline\";\nimport { useTypographyCellComponents } from \"./hooks/useTypographyCellComponents\";\n/**\n * `Cell` component acts as a flexible and interactive container for various types of content,\n * enabling the creation of complex list items, form fields, and more. It leverages the `Tappable`\n * component for interaction and is designed to be flexible and extensible.\n */\nexport const Cell = /*#__PURE__*/forwardRef((_param, ref) => {\n  var {\n      children,\n      titleBadge,\n      hint,\n      subhead,\n      subtitle,\n      description,\n      className,\n      before,\n      after,\n      Component,\n      hovered,\n      multiline\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"titleBadge\", \"hint\", \"subhead\", \"subtitle\", \"description\", \"className\", \"before\", \"after\", \"Component\", \"hovered\", \"multiline\"]);\n  const platform = usePlatform();\n  const {\n    Title,\n    Description\n  } = useTypographyCellComponents();\n  const hasTitle = hasReactNode(children) || hasReactNode(hint) || hasReactNode(titleBadge);\n  return /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({\n    ref: ref,\n    Component: Component || 'div',\n    className: classNames(\"tgui-b8dfba0b5c3d054c\", platform === 'ios' && \"tgui-7b5bccbb645b495f\", hovered && \"tgui-7edaaf0c57797623\", multiline && \"tgui-6c49dadccf648a5b\", className)\n  }, restProps), {\n    children: [hasReactNode(before) && /*#__PURE__*/_jsx(\"div\", {\n      className: \"tgui-aaa795d78c356ac1\",\n      children: before\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"tgui-8735a62be5a8b8a7\",\n      children: [hasReactNode(subhead) && /*#__PURE__*/_jsx(Subheadline, {\n        className: \"tgui-46dd90b57ffed25f\",\n        level: \"2\",\n        weight: \"3\",\n        children: subhead\n      }), hasTitle && /*#__PURE__*/_jsxs(Title, {\n        className: \"tgui-a894f59f4c5ad72f\",\n        children: [hasReactNode(children) && /*#__PURE__*/_jsx(\"span\", {\n          className: \"tgui-1c6d7865a76a19bc\",\n          children: children\n        }), hasReactNode(hint) && /*#__PURE__*/_jsx(\"span\", {\n          className: \"tgui-bb909928b48f948b\",\n          children: hint\n        }), hasReactNode(titleBadge) && titleBadge]\n      }), hasReactNode(subtitle) && /*#__PURE__*/_jsx(Subheadline, {\n        className: \"tgui-d528ef65a8b76273\",\n        level: \"2\",\n        weight: \"3\",\n        children: subtitle\n      }), hasReactNode(description) && /*#__PURE__*/_jsx(Description, {\n        className: \"tgui-fc059ed3ac5799a6\",\n        children: description\n      })]\n    }), hasReactNode(after) && /*#__PURE__*/_jsx(\"div\", {\n      className: \"tgui-56b2e897ed7ccb22\",\n      children: after\n    })]\n  }));\n});","map":{"version":3,"names":["forwardRef","classNames","hasReactNode","usePlatform","Tappable","Subheadline","useTypographyCellComponents","Cell","_param","ref","children","titleBadge","hint","subhead","subtitle","description","className","before","after","Component","hovered","multiline","restProps","_object_without_properties","platform","Title","Description","hasTitle","_jsxs","_object_spread_props","_object_spread","_jsx","level","weight"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Cell/Cell.tsx"],"sourcesContent":["'use client';\n\nimport { ElementType, forwardRef, ReactElement, ReactNode } from 'react';\nimport styles from './Cell.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { BadgeProps } from 'components/Blocks/Badge/Badge';\nimport { Tappable, TappableProps } from 'components/Service/Tappable/Tappable';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\nimport { useTypographyCellComponents } from './hooks/useTypographyCellComponents';\n\nexport interface CellProps extends Omit<TappableProps, 'Component'> {\n  /** Content displayed above the main content as a subheading */\n  subhead?: ReactNode;\n  /** Main content displayed as a header */\n  children?: ReactNode;\n  /** Content displayed alongside the header as a hint */\n  hint?: ReactNode;\n  /** A badge component to be displayed next to the header */\n  titleBadge?: ReactElement<BadgeProps>;\n  /** Content displayed below the header as a subtitle */\n  subtitle?: ReactNode;\n  /** Additional description displayed below the subtitle */\n  description?: ReactNode;\n  /** Content or elements to be displayed on the left side of the cell */\n  before?: ReactNode;\n  /** Content or elements to be displayed on the right side of the cell */\n  after?: ReactNode;\n  /** Custom component or HTML tag to be used as the root element of the cell, div by default */\n  Component?: ElementType;\n  /** Controls the hover state of the component externally, useful for keyboard navigation */\n  hovered?: boolean;\n  /** Allows for multiline content without truncation */\n  multiline?: boolean;\n}\n\n/**\n * `Cell` component acts as a flexible and interactive container for various types of content,\n * enabling the creation of complex list items, form fields, and more. It leverages the `Tappable`\n * component for interaction and is designed to be flexible and extensible.\n */\nexport const Cell = forwardRef(({\n  children,\n  titleBadge,\n  hint,\n  subhead,\n  subtitle,\n  description,\n  className,\n  before,\n  after,\n  Component,\n  hovered,\n  multiline,\n  ...restProps\n}: CellProps, ref) => {\n  const platform = usePlatform();\n  const { Title, Description } = useTypographyCellComponents();\n\n  const hasTitle = hasReactNode(children) || hasReactNode(hint) || hasReactNode(titleBadge);\n  return (\n    <Tappable\n      ref={ref}\n      Component={Component || 'div'}\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        hovered && styles['wrapper--hovered'],\n        multiline && styles['wrapper--multiline'],\n        className,\n      )}\n      {...restProps}\n    >\n      {hasReactNode(before) && <div className={styles.before}>{before}</div>}\n      <div className={styles.middle}>\n        {hasReactNode(subhead) && (\n          <Subheadline className={styles.subhead} level=\"2\" weight=\"3\">\n            {subhead}\n          </Subheadline>\n        )}\n        {hasTitle && (\n          <Title className={styles.head}>\n            {hasReactNode(children) && <span className={styles.title}>{children}</span>}\n            {hasReactNode(hint) && <span className={styles.hint}>{hint}</span>}\n            {hasReactNode(titleBadge) && titleBadge}\n          </Title>\n        )}\n        {hasReactNode(subtitle) && (\n          <Subheadline className={styles.subtitle} level=\"2\" weight=\"3\">\n            {subtitle}\n          </Subheadline>\n        )}\n        {hasReactNode(description) && (\n          <Description className={styles.description}>\n            {description}\n          </Description>\n        )}\n      </div>\n      {hasReactNode(after) && <div className={styles.after}>{after}</div>}\n    </Tappable>\n  );\n});\n"],"mappings":"AAAA;;;;;;AAEA,SAAsBA,UAAU,QAAiC;AAGjE,SAASC,UAAU,QAAQ;AAC3B,SAASC,YAAY,QAAQ;AAC7B,SAASC,WAAW,QAAQ;AAG5B,SAASC,QAAQ,QAAuB;AACxC,SAASC,WAAW,QAAQ;AAC5B,SAASC,2BAA2B,QAAQ;AA2B5C;;;;;AAKA,OAAO,MAAMC,IAAA,gBAAOP,UAAA,CAAW,CAAAQ,MAAA,EAcjBC,GAAA;MAdkB;MAC9BC,QAAQ;MACRC,UAAU;MACVC,IAAI;MACJC,OAAO;MACPC,QAAQ;MACRC,WAAW;MACXC,SAAS;MACTC,MAAM;MACNC,KAAK;MACLC,SAAS;MACTC,OAAO;MACPC;IAAS,CAEC,GAAAb,MAAA;IADPc,SAAA,GAAAC,0BAAA,CAAAf,MAAA,GAZH,YACA,cACA,QACA,WACA,YACA,eACA,aACA,UACA,SACA,aACA,WACA,Y;EAGA,MAAMgB,QAAA,GAAWrB,WAAA;EACjB,MAAM;IAAEsB,KAAK;IAAEC;EAAW,CAAE,GAAGpB,2BAAA;EAE/B,MAAMqB,QAAA,GAAWzB,YAAA,CAAaQ,QAAA,KAAaR,YAAA,CAAaU,IAAA,KAASV,YAAA,CAAaS,UAAA;EAC9E,oBACEiB,KAAA,CAACxB,QAAA,EAAAyB,oBAAA,CAAAC,cAAA;IACCrB,GAAA,EAAKA,GAAA;IACLU,SAAA,EAAWA,SAAA,IAAa;IACxBH,SAAA,EAAWf,UAAA,0BAETuB,QAAA,KAAa,kCACbJ,OAAA,6BACAC,SAAA,6BACAL,SAAA;KAEEM,SAAA;eAEHpB,YAAA,CAAae,MAAA,kBAAWc,IAAA,CAAC;MAAIf,SAAS;gBAAkBC;qBACzDW,KAAA,CAAC;MAAIZ,SAAS;iBACXd,YAAA,CAAaW,OAAA,kBACZkB,IAAA,CAAC1B,WAAA;QAAYW,SAAS;QAAkBgB,KAAA,EAAM;QAAIC,MAAA,EAAO;kBACtDpB;UAGJc,QAAA,iBACCC,KAAA,CAACH,KAAA;QAAMT,SAAS;mBACbd,YAAA,CAAaQ,QAAA,kBAAaqB,IAAA,CAAC;UAAKf,SAAS;oBAAiBN;YAC1DR,YAAA,CAAaU,IAAA,kBAASmB,IAAA,CAAC;UAAKf,SAAS;oBAAgBJ;YACrDV,YAAA,CAAaS,UAAA,KAAeA,UAAA;UAGhCT,YAAA,CAAaY,QAAA,kBACZiB,IAAA,CAAC1B,WAAA;QAAYW,SAAS;QAAmBgB,KAAA,EAAM;QAAIC,MAAA,EAAO;kBACvDnB;UAGJZ,YAAA,CAAaa,WAAA,kBACZgB,IAAA,CAACL,WAAA;QAAYV,SAAS;kBACnBD;;QAINb,YAAA,CAAagB,KAAA,kBAAUa,IAAA,CAAC;MAAIf,SAAS;gBAAiBE;;;AAG7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}