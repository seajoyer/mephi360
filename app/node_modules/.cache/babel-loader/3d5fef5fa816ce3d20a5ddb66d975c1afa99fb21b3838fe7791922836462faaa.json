{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from \"react\";\nimport { classNames } from \"../../../../../helpers/classNames\";\nimport { callMultiple } from \"../../../../../helpers/function\";\nimport { Icon24ChevronDown } from \"../../../../../icons/24/chevron_down\";\nimport { AccordionContext } from \"../../AccordionContext\";\nimport { Cell } from \"../../../Cell/Cell\";\n/**\n * `AccordionSummary` serves as the clickable header for an accordion section, toggling the visibility of the content.\n * It incorporates an expand/collapse icon to visually indicate state. This component further extends `Cell` to provide\n * a consistent UI and accessibility features.\n */\nexport const AccordionSummary = _param => {\n  var {\n      after,\n      onClick,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"after\", \"onClick\", \"children\"]);\n  const {\n    expanded,\n    labelId,\n    contentId,\n    onChange\n  } = useContext(AccordionContext);\n  const toggle = () => onChange(!expanded);\n  return /*#__PURE__*/_jsx(Cell, _object_spread_props(_object_spread({\n    id: labelId,\n    \"aria-expanded\": expanded,\n    \"aria-controls\": contentId,\n    onClick: callMultiple(toggle, onClick),\n    after: after || /*#__PURE__*/_jsx(Icon24ChevronDown, {\n      className: classNames(\"tgui-60e7968097edfa6f\", expanded && \"tgui-c900ecbd6d8d6d5e\")\n    })\n  }, restProps), {\n    children: children\n  }));\n};","map":{"version":3,"names":["useContext","classNames","callMultiple","Icon24ChevronDown","AccordionContext","Cell","AccordionSummary","_param","after","onClick","children","restProps","_object_without_properties","expanded","labelId","contentId","onChange","toggle","_jsx","_object_spread_props","_object_spread","id","className"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/TGUI-Example/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Accordion/components/AccordionSummary/AccordionSummary.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styles from './AccordionSummary.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { callMultiple } from 'helpers/function';\n\nimport { Icon24ChevronDown } from 'icons/24/chevron_down';\n\nimport { AccordionContext } from 'components/Blocks/Accordion/AccordionContext';\nimport { Cell, CellProps } from 'components/Blocks/Cell/Cell';\n\nexport interface AccordionSummaryProps extends CellProps {}\n\n/**\n * `AccordionSummary` serves as the clickable header for an accordion section, toggling the visibility of the content.\n * It incorporates an expand/collapse icon to visually indicate state. This component further extends `Cell` to provide\n * a consistent UI and accessibility features.\n */\nexport const AccordionSummary = ({\n  after,\n  onClick,\n  children,\n  ...restProps\n}: AccordionSummaryProps) => {\n  const { expanded, labelId, contentId, onChange } = useContext(AccordionContext);\n  const toggle = () => onChange(!expanded);\n\n  return (\n    <Cell\n      id={labelId}\n      aria-expanded={expanded}\n      aria-controls={contentId}\n      onClick={callMultiple(toggle, onClick)}\n      after={after || (\n        <Icon24ChevronDown\n          className={classNames(\n            styles.chevron,\n            expanded && styles['chevron--expanded'],\n          )}\n        />\n      )}\n      {...restProps}\n    >\n      {children}\n    </Cell>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,UAAU,QAAQ;AAG3B,SAASC,UAAU,QAAQ;AAC3B,SAASC,YAAY,QAAQ;AAE7B,SAASC,iBAAiB,QAAQ;AAElC,SAASC,gBAAgB,QAAQ;AACjC,SAASC,IAAI,QAAmB;AAIhC;;;;;AAKA,OAAO,MAAMC,gBAAA,GAAmBC,MAAA;MAAC;MAC/BC,KAAK;MACLC,OAAO;MACPC;IAAQ,CAEc,GAAAH,MAAA;IADnBI,SAAA,GAAAC,0BAAA,CAAAL,MAAA,GAHH,SACA,WACA,W;EAGA,MAAM;IAAEM,QAAQ;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAQ,CAAE,GAAGhB,UAAA,CAAWI,gBAAA;EAC9D,MAAMa,MAAA,GAASA,CAAA,KAAMD,QAAA,CAAS,CAACH,QAAA;EAE/B,oBACEK,IAAA,CAACb,IAAA,EAAAc,oBAAA,CAAAC,cAAA;IACCC,EAAA,EAAIP,OAAA;IACJ,iBAAeD,QAAA;IACf,iBAAeE,SAAA;IACfN,OAAA,EAASP,YAAA,CAAae,MAAA,EAAQR,OAAA;IAC9BD,KAAA,EAAOA,KAAA,iBACLU,IAAA,CAACf,iBAAA;MACCmB,SAAA,EAAWrB,UAAA,0BAETY,QAAA;;KAIFF,SAAA;cAEHD;;AAGP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}