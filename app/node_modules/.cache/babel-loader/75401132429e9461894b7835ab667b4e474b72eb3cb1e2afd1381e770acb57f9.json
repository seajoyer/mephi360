{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { FormInput } from \"../FormInput/FormInput\";\nimport { Subheadline } from \"../../Typography/Subheadline/Subheadline\";\nimport { Text } from \"../../Typography/Text/Text\";\n/**\n * Wraps a standard HTML textarea element within a `FormInput` container, applying custom styles and functionality.\n * This component inherits the flexible design of the `FormInput`, allowing it to display a header and reflect different status styles.\n * The appearance and behavior of the textarea can be customized through various props, providing a seamless integration with forms.\n */\nexport const Textarea = _param => {\n  var {\n      type = 'text',\n      header,\n      status,\n      className\n    } = _param,\n    restProps = _object_without_properties(_param, [\"type\", \"header\", \"status\", \"className\"]);\n  const platform = usePlatform();\n  const TypographyComponent = platform === 'ios' ? Text : Subheadline;\n  return /*#__PURE__*/_jsx(FormInput, {\n    header: header,\n    status: status,\n    className: classNames(\"tgui-54ba5b4c7f1fd05a\", platform === 'ios' && \"tgui-2453b62de8016bfa\", className),\n    children: /*#__PURE__*/_jsx(TypographyComponent, _object_spread({\n      Component: \"textarea\",\n      className: \"tgui-d40ec83150e66029\",\n      type: type\n    }, restProps))\n  });\n};","map":{"version":3,"names":["classNames","usePlatform","FormInput","Subheadline","Text","Textarea","_param","type","header","status","className","restProps","_object_without_properties","platform","TypographyComponent","_jsx","_object_spread","Component"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Form/Textarea/Textarea.tsx"],"sourcesContent":["'use client';\n\nimport { InputHTMLAttributes } from 'react';\nimport styles from './Textarea.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { FormInput, FormPublicProps } from 'components/Form/FormInput/FormInput';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\nimport { Text } from 'components/Typography/Text/Text';\n\nexport interface TextareaProps extends Omit<FormPublicProps, 'after' | 'before'>, InputHTMLAttributes<HTMLInputElement> {}\n\n/**\n * Wraps a standard HTML textarea element within a `FormInput` container, applying custom styles and functionality.\n * This component inherits the flexible design of the `FormInput`, allowing it to display a header and reflect different status styles.\n * The appearance and behavior of the textarea can be customized through various props, providing a seamless integration with forms.\n */\nexport const Textarea = ({\n  type = 'text',\n  header,\n  status,\n  className,\n  ...restProps\n}: TextareaProps) => {\n  const platform = usePlatform();\n\n  const TypographyComponent = platform === 'ios' ? Text : Subheadline;\n  return (\n    <FormInput\n      header={header}\n      status={status}\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        className,\n      )}\n    >\n      <TypographyComponent\n        Component=\"textarea\"\n        className={styles.textarea}\n        type={type}\n        {...restProps}\n      />\n    </FormInput>\n  );\n};\n"],"mappings":"AAAA;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,SAAS,QAAyB;AAC3C,SAASC,WAAW,QAAQ;AAC5B,SAASC,IAAI,QAAQ;AAIrB;;;;;AAKA,OAAO,MAAMC,QAAA,GAAWC,MAAA;MAAC;MACvBC,IAAA,GAAO,MAAM;MACbC,MAAM;MACNC,MAAM;MACNC;IAAS,CAEK,GAAAJ,MAAA;IADXK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,QACA,UACA,UACA,Y;EAGA,MAAMO,QAAA,GAAWZ,WAAA;EAEjB,MAAMa,mBAAA,GAAsBD,QAAA,KAAa,QAAQT,IAAA,GAAOD,WAAA;EACxD,oBACEY,IAAA,CAACb,SAAA;IACCM,MAAA,EAAQA,MAAA;IACRC,MAAA,EAAQA,MAAA;IACRC,SAAA,EAAWV,UAAA,0BAETa,QAAA,KAAa,kCACbH,SAAA;cAGF,aAAAK,IAAA,CAACD,mBAAA,EAAAE,cAAA;MACCC,SAAA,EAAU;MACVP,SAAS;MACTH,IAAA,EAAMA;OACFI,SAAA;;AAIZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}