{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { Icon20ChevronDown } from \"../../../icons/20/chevron_down\";\nimport { FormInput } from \"../FormInput/FormInput\";\nimport { Subheadline } from \"../../Typography/Subheadline/Subheadline\";\nimport { Text } from \"../../Typography/Text/Text\";\n/**\n * Renders a custom styled select input within a `FormInput` container. This component is designed to integrate seamlessly\n * with the form input styles, providing a consistent look and enhanced features such as a custom dropdown arrow and support\n * for platform-specific typography. The `FormInput` wrapper facilitates the inclusion of headers and status messages.\n */\nexport const Select = _param => {\n  var {\n      header,\n      before,\n      status,\n      className\n    } = _param,\n    restProps = _object_without_properties(_param, [\"header\", \"before\", \"status\", \"className\"]);\n  const platform = usePlatform();\n  const TypographyComponent = platform === 'ios' ? Text : Subheadline;\n  return /*#__PURE__*/_jsxs(FormInput, {\n    header: header,\n    before: before,\n    status: status,\n    className: classNames(\"tgui-919c5658483cae11\", platform === 'ios' && \"tgui-5edcb8465ee11055\", className),\n    children: [/*#__PURE__*/_jsx(TypographyComponent, _object_spread({\n      Component: \"select\",\n      className: \"tgui-a0742fd4c73756f7\",\n      multiple: false\n    }, restProps)), /*#__PURE__*/_jsx(Icon20ChevronDown, {\n      \"aria-hidden\": true,\n      className: \"tgui-025a45d791e466f6\"\n    })]\n  });\n};","map":{"version":3,"names":["classNames","usePlatform","Icon20ChevronDown","FormInput","Subheadline","Text","Select","_param","header","before","status","className","restProps","_object_without_properties","platform","TypographyComponent","_jsxs","_jsx","_object_spread","Component","multiple"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Form/Select/Select.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, SelectHTMLAttributes } from 'react';\nimport styles from './Select.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Icon20ChevronDown } from 'icons/20/chevron_down';\n\nimport { FormInput, FormPublicProps } from 'components/Form/FormInput/FormInput';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\nimport { Text } from 'components/Typography/Text/Text';\n\nexport interface SelectProps extends Omit<FormPublicProps, 'after'>, SelectHTMLAttributes<HTMLSelectElement> {\n  /** Children elements, typically `option` elements to be rendered within the select. */\n  children: ReactNode;\n}\n\n/**\n * Renders a custom styled select input within a `FormInput` container. This component is designed to integrate seamlessly\n * with the form input styles, providing a consistent look and enhanced features such as a custom dropdown arrow and support\n * for platform-specific typography. The `FormInput` wrapper facilitates the inclusion of headers and status messages.\n */\nexport const Select = ({\n  header,\n  before,\n  status,\n  className,\n  ...restProps\n}: SelectProps) => {\n  const platform = usePlatform();\n\n  const TypographyComponent = platform === 'ios' ? Text : Subheadline;\n  return (\n    <FormInput\n      header={header}\n      before={before}\n      status={status}\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        className,\n      )}\n    >\n      <TypographyComponent\n        Component=\"select\"\n        className={styles.select}\n        multiple={false}\n        {...restProps}\n      />\n      <Icon20ChevronDown aria-hidden className={styles.chevron} />\n    </FormInput>\n  );\n};\n"],"mappings":"AAAA;;;;;AAKA,SAASA,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,iBAAiB,QAAQ;AAElC,SAASC,SAAS,QAAyB;AAC3C,SAASC,WAAW,QAAQ;AAC5B,SAASC,IAAI,QAAQ;AAOrB;;;;;AAKA,OAAO,MAAMC,MAAA,GAASC,MAAA;MAAC;MACrBC,MAAM;MACNC,MAAM;MACNC,MAAM;MACNC;IAAS,CAEG,GAAAJ,MAAA;IADTK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,UACA,UACA,UACA,Y;EAGA,MAAMO,QAAA,GAAWb,WAAA;EAEjB,MAAMc,mBAAA,GAAsBD,QAAA,KAAa,QAAQT,IAAA,GAAOD,WAAA;EACxD,oBACEY,KAAA,CAACb,SAAA;IACCK,MAAA,EAAQA,MAAA;IACRC,MAAA,EAAQA,MAAA;IACRC,MAAA,EAAQA,MAAA;IACRC,SAAA,EAAWX,UAAA,0BAETc,QAAA,KAAa,kCACbH,SAAA;4BAGFM,IAAA,CAACF,mBAAA,EAAAG,cAAA;MACCC,SAAA,EAAU;MACVR,SAAS;MACTS,QAAA,EAAU;OACNR,SAAA,I,aAENK,IAAA,CAACf,iBAAA;MAAkB,aAAW;MAACS,SAAS;;;AAG9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}