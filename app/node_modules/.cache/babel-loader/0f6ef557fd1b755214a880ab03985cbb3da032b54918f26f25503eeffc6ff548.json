{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { isValidElement, useState } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { getBorderRadius } from \"./helpers/getBorderRadius\";\nimport { ImageBadge } from \"./components/ImageBadge/ImageBadge\";\n/**\n * Renders an image with optional fallback content. It supports custom sizing and will automatically\n * handle loading states and errors by optionally displaying a fallback icon. This component can also\n * include additional content, such as badges or overlays, as children.\n */\nexport const Image = _param => {\n  var {\n      size = 40,\n      className,\n      alt,\n      crossOrigin,\n      decoding,\n      loading,\n      referrerPolicy,\n      sizes,\n      src,\n      srcSet,\n      useMap,\n      style,\n      fallbackIcon,\n      children,\n      onLoad,\n      onError\n    } = _param,\n    restProps = _object_without_properties(_param, [\"size\", \"className\", \"alt\", \"crossOrigin\", \"decoding\", \"loading\", \"referrerPolicy\", \"sizes\", \"src\", \"srcSet\", \"useMap\", \"style\", \"fallbackIcon\", \"children\", \"onLoad\", \"onError\"]);\n  const [loaded, setLoaded] = useState(false);\n  const [failed, setFailed] = useState(false);\n  const hasSrc = src || srcSet;\n  const needShowFallbackIcon = (failed || !hasSrc) && /*#__PURE__*/isValidElement(fallbackIcon);\n  const handleImageLoad = event => {\n    if (loaded) {\n      return;\n    }\n    setLoaded(true);\n    setFailed(false);\n    onLoad === null || onLoad === void 0 ? void 0 : onLoad(event);\n  };\n  const handleImageError = event => {\n    setLoaded(false);\n    setFailed(true);\n    onError === null || onError === void 0 ? void 0 : onError(event);\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _object_spread_props(_object_spread({\n    style: _object_spread({\n      width: size,\n      minWidth: size,\n      height: size,\n      borderRadius: (style === null || style === void 0 ? void 0 : style.borderRadius) || getBorderRadius(size)\n    }, style),\n    className: classNames(\"tgui-30d8642662534eb5\", loaded && \"tgui-72bd4140eca37f53\", className)\n  }, restProps), {\n    children: [hasSrc && /*#__PURE__*/_jsx(\"img\", {\n      alt: alt,\n      className: \"tgui-1191c597a64dbd25\",\n      crossOrigin: crossOrigin,\n      decoding: decoding,\n      loading: loading,\n      referrerPolicy: referrerPolicy,\n      sizes: sizes,\n      src: src,\n      srcSet: srcSet,\n      useMap: useMap,\n      onLoad: handleImageLoad,\n      onError: handleImageError\n    }), needShowFallbackIcon && /*#__PURE__*/_jsx(\"div\", {\n      className: \"tgui-5ee2f1c6e1da49b5\",\n      children: fallbackIcon\n    }), children]\n  }));\n};\nImage.Badge = ImageBadge;","map":{"version":3,"names":["isValidElement","useState","classNames","getBorderRadius","ImageBadge","Image","_param","size","className","alt","crossOrigin","decoding","loading","referrerPolicy","sizes","src","srcSet","useMap","style","fallbackIcon","children","onLoad","onError","restProps","_object_without_properties","loaded","setLoaded","failed","setFailed","hasSrc","needShowFallbackIcon","handleImageLoad","event","handleImageError","_jsxs","_object_spread_props","_object_spread","width","minWidth","height","borderRadius","_jsx","Badge"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Blocks/Image/Image.tsx"],"sourcesContent":["'use client';\n\nimport { ImgHTMLAttributes, isValidElement, ReactNode, SyntheticEvent, useState } from 'react';\nimport styles from './Image.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { getBorderRadius } from 'components/Blocks/Image/helpers/getBorderRadius';\nimport { ImageBadge } from './components/ImageBadge/ImageBadge';\n\nexport interface ImageProps extends ImgHTMLAttributes<HTMLElement> {\n  /** Specifies the size of the image, with a default of 40. Sizes are defined in pixels. */\n  size?: 20 | 24 | 28 | 40 | 48 | 96;\n  /** An element (often an icon) displayed when the image fails to load or the `src` attribute is not provided. */\n  fallbackIcon?: ReactNode;\n  /** Optional children to render within the image component's container. */\n  children?: ReactNode;\n}\n\n/**\n * Renders an image with optional fallback content. It supports custom sizing and will automatically\n * handle loading states and errors by optionally displaying a fallback icon. This component can also\n * include additional content, such as badges or overlays, as children.\n */\nexport const Image = ({\n  size = 40,\n  className,\n  alt,\n  crossOrigin,\n  decoding,\n  loading,\n  referrerPolicy,\n  sizes,\n  src,\n  srcSet,\n  useMap,\n  style,\n  fallbackIcon,\n  children,\n  onLoad,\n  onError,\n  ...restProps\n}: ImageProps) => {\n  const [loaded, setLoaded] = useState(false);\n  const [failed, setFailed] = useState(false);\n\n  const hasSrc = src || srcSet;\n  const needShowFallbackIcon = (failed || !hasSrc) && isValidElement(fallbackIcon);\n\n  const handleImageLoad = (event: SyntheticEvent<HTMLImageElement>) => {\n    if (loaded) {\n      return;\n    }\n\n    setLoaded(true);\n    setFailed(false);\n    onLoad?.(event);\n  };\n\n  const handleImageError = (event: SyntheticEvent<HTMLImageElement>) => {\n    setLoaded(false);\n    setFailed(true);\n    onError?.(event);\n  };\n\n  return (\n    <div\n      style={{\n        width: size,\n        minWidth: size,\n        height: size,\n        borderRadius: style?.borderRadius || getBorderRadius(size),\n        ...style,\n      }}\n      className={classNames(\n        styles.wrapper,\n        loaded && styles['wrapper--loaded'],\n        className,\n      )}\n      {...restProps}\n    >\n      {hasSrc && (\n        <img\n          alt={alt}\n          className={styles.image}\n          crossOrigin={crossOrigin}\n          decoding={decoding}\n          loading={loading}\n          referrerPolicy={referrerPolicy}\n          sizes={sizes}\n          src={src}\n          srcSet={srcSet}\n          useMap={useMap}\n          onLoad={handleImageLoad}\n          onError={handleImageError}\n        />\n      )}\n      {needShowFallbackIcon && <div className={styles.fallback}>{fallbackIcon}</div>}\n      {children}\n    </div>\n  );\n};\n\nImage.Badge = ImageBadge;\n"],"mappings":"AAAA;;;;;;AAEA,SAA4BA,cAAc,EAA6BC,QAAQ,QAAQ;AAGvF,SAASC,UAAU,QAAQ;AAE3B,SAASC,eAAe,QAAQ;AAChC,SAASC,UAAU,QAAQ;AAW3B;;;;;AAKA,OAAO,MAAMC,KAAA,GAAQC,MAAA;MAAC;MACpBC,IAAA,GAAO,EAAE;MACTC,SAAS;MACTC,GAAG;MACHC,WAAW;MACXC,QAAQ;MACRC,OAAO;MACPC,cAAc;MACdC,KAAK;MACLC,GAAG;MACHC,MAAM;MACNC,MAAM;MACNC,KAAK;MACLC,YAAY;MACZC,QAAQ;MACRC,MAAM;MACNC;IAAO,CAEI,GAAAhB,MAAA;IADRiB,SAAA,GAAAC,0BAAA,CAAAlB,MAAA,GAhBH,QACA,aACA,OACA,eACA,YACA,WACA,kBACA,SACA,OACA,UACA,UACA,SACA,gBACA,YACA,UACA,U;EAGA,MAAM,CAACmB,MAAA,EAAQC,SAAA,CAAU,GAAGzB,QAAA,CAAS;EACrC,MAAM,CAAC0B,MAAA,EAAQC,SAAA,CAAU,GAAG3B,QAAA,CAAS;EAErC,MAAM4B,MAAA,GAASd,GAAA,IAAOC,MAAA;EACtB,MAAMc,oBAAA,GAAuB,CAACH,MAAA,IAAU,CAACE,MAAK,kBAAM7B,cAAA,CAAemB,YAAA;EAEnE,MAAMY,eAAA,GAAmBC,KAAA;IACvB,IAAIP,MAAA,EAAQ;MACV;IACF;IAEAC,SAAA,CAAU;IACVE,SAAA,CAAU;IACVP,MAAA,aAAAA,MAAA,uBAAAA,MAAA,CAASW,KAAA;EACX;EAEA,MAAMC,gBAAA,GAAoBD,KAAA;IACxBN,SAAA,CAAU;IACVE,SAAA,CAAU;IACVN,OAAA,aAAAA,OAAA,uBAAAA,OAAA,CAAUU,KAAA;EACZ;EAEA,oBACEE,KAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA;IACClB,KAAA,EAAOkB,cAAA;MACLC,KAAA,EAAO9B,IAAA;MACP+B,QAAA,EAAU/B,IAAA;MACVgC,MAAA,EAAQhC,IAAA;MACRiC,YAAA,EAAc,CAAAtB,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOsB,YAAY,KAAIrC,eAAA,CAAgBI,IAAA;OAClDW,KAAA;IAELV,SAAA,EAAWN,UAAA,0BAETuB,MAAA,6BACAjB,SAAA;KAEEe,SAAA;eAEHM,MAAA,iBACCY,IAAA,CAAC;MACChC,GAAA,EAAKA,GAAA;MACLD,SAAS;MACTE,WAAA,EAAaA,WAAA;MACbC,QAAA,EAAUA,QAAA;MACVC,OAAA,EAASA,OAAA;MACTC,cAAA,EAAgBA,cAAA;MAChBC,KAAA,EAAOA,KAAA;MACPC,GAAA,EAAKA,GAAA;MACLC,MAAA,EAAQA,MAAA;MACRC,MAAA,EAAQA,MAAA;MACRI,MAAA,EAAQU,eAAA;MACRT,OAAA,EAASW;QAGZH,oBAAA,iBAAwBW,IAAA,CAAC;MAAIjC,SAAS;gBAAoBW;QAC1DC,QAAA;;AAGP;AAEAf,KAAA,CAAMqC,KAAK,GAAGtC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}