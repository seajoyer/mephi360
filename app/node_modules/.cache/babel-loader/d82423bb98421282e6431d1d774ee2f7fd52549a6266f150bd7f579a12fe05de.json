{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { Typography } from \"../Typography\";\nconst titleLevelTags = {\n  '1': 'h2',\n  '2': 'h3',\n  '3': 'h4'\n};\nconst titleLevelStyles = {\n  '1': \"tgui-2fc52ee93e8068a6\",\n  '2': \"tgui-72c2a480384c4fb1\",\n  '3': \"tgui-45c5f45d3e9105f4\"\n};\n/**\n * The Title component is designed to render text as a page or section heading,\n * providing clear hierarchy and structure within content. It supports three levels of emphasis,\n * allowing for flexibility in design while maintaining semantic integrity. By default, it uses `h3`\n * for its semantic HTML element but can be customized via the `level` prop or explicitly with the `Component` prop.\n */\nexport const Title = _param => {\n  var {\n      level = '2',\n      className,\n      Component\n    } = _param,\n    restProps = _object_without_properties(_param, [\"level\", \"className\", \"Component\"]);\n  return /*#__PURE__*/_jsx(Typography, _object_spread_props(_object_spread({}, restProps), {\n    className: classNames(\"tgui-da537051a4a87aec\", titleLevelStyles[level], className),\n    Component: Component || titleLevelTags[level]\n  }));\n};","map":{"version":3,"names":["classNames","Typography","titleLevelTags","titleLevelStyles","Title","_param","level","className","Component","restProps","_object_without_properties","_jsx","_object_spread_props","_object_spread"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Typography/Title/Title.tsx"],"sourcesContent":["import { ElementType } from 'react';\nimport styles from './Title.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { Typography, TypographyProps } from '../Typography';\n\ntype TitleLevel = '1' | '2' | '3';\n\nexport interface TitleProps extends TypographyProps {\n  /** Determines the size and semantic tag of the title, with options for `h2`, `h3`, or `h4`. */\n  level?: TitleLevel;\n}\n\nconst titleLevelTags: Record<TitleLevel, ElementType> = {\n  '1': 'h2',\n  '2': 'h3',\n  '3': 'h4',\n};\n\nconst titleLevelStyles: Record<TitleLevel, string> = {\n  '1': styles['wrapper--1'],\n  '2': styles['wrapper--2'],\n  '3': styles['wrapper--3'],\n};\n\n/**\n * The Title component is designed to render text as a page or section heading,\n * providing clear hierarchy and structure within content. It supports three levels of emphasis,\n * allowing for flexibility in design while maintaining semantic integrity. By default, it uses `h3`\n * for its semantic HTML element but can be customized via the `level` prop or explicitly with the `Component` prop.\n */\nexport const Title = ({\n  level = '2',\n  className,\n  Component,\n  ...restProps\n}: TitleProps) => (\n  <Typography\n    {...restProps}\n    className={classNames(styles.wrapper, titleLevelStyles[level], className)}\n    Component={Component || titleLevelTags[level]}\n  />\n);\n\n"],"mappings":";;;;AAGA,SAASA,UAAU,QAAQ;AAE3B,SAASC,UAAU,QAAyB;AAS5C,MAAMC,cAAA,GAAkD;EACtD,KAAK;EACL,KAAK;EACL,KAAK;AACP;AAEA,MAAMC,gBAAA,GAA+C;EACnD,GAAG;EACH,GAAG;EACH,GAAG;AACL;AAEA;;;;;;AAMA,OAAO,MAAMC,KAAA,GAAQC,MAAA;MAAC;MACpBC,KAAA,GAAQ,GAAG;MACXC,SAAS;MACTC;IAAS,CAEE,GAAAH,MAAA;IADRI,SAAA,GAAAC,0BAAA,CAAAL,MAAA,GAHH,SACA,aACA,Y;sBAGAM,IAAA,CAACV,UAAA,EAAAW,oBAAA,CAAAC,cAAA,KACKJ,SAAA;IACJF,SAAA,EAAWP,UAAA,0BAA2BG,gBAAgB,CAACG,KAAA,CAAM,EAAEC,SAAA;IAC/DC,SAAA,EAAWA,SAAA,IAAaN,cAAc,CAACI,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}