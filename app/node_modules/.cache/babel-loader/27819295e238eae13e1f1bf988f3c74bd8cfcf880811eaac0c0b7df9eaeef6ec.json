{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport { classNames } from \"../../../helpers/classNames\";\nimport { useAppRootContext } from \"../../../hooks/useAppRootContext\";\nimport { Drawer } from \"@xelene/vaul-with-scroll-fix\";\nimport { ModalClose } from \"./components/ModalClose/ModalClose\";\nimport { ModalHeader } from \"./components/ModalHeader/ModalHeader\";\nimport { ModalOverlay } from \"./components/ModalOverlay/ModalOverlay\";\n/**\n * Modal component, providing a flexible dialog framework with customizable content and interaction models.\n * It leverages the Drawer component from 'vaul' for its base functionality, enhanced with additional properties\n * and behaviors specific to modal dialogues, such as overlay management and nested modals.\n */\nexport const Modal = /*#__PURE__*/forwardRef((_param, ref) => {\n  var {\n      overlayComponent = /*#__PURE__*/_jsx(ModalOverlay, {}),\n      open,\n      onOpenChange,\n      header,\n      className,\n      children,\n      nested,\n      trigger,\n      closeThreshold,\n      scrollLockTimeout,\n      snapPoints,\n      fadeFromIndex,\n      modal,\n      preventScrollRestoration,\n      dismissible\n    } = _param,\n    restProps = _object_without_properties(_param, [\"overlayComponent\", \"open\", \"onOpenChange\", \"header\", \"className\", \"children\", \"nested\", \"trigger\", \"closeThreshold\", \"scrollLockTimeout\", \"snapPoints\", \"fadeFromIndex\", \"modal\", \"preventScrollRestoration\", \"dismissible\"]);\n  var _container_portalContainer;\n  const container = useAppRootContext();\n  const [portal, setPortal] = useState((_container_portalContainer = container.portalContainer) === null || _container_portalContainer === void 0 ? void 0 : _container_portalContainer.current);\n  // This is internal optimization for AppRoot\n  // React sets ref to normal value only after the first render\n  // If we will have this logic inside the AppRoot component, then all tree will be re-rendered\n  useEffect(() => {\n    var _container_portalContainer;\n    setPortal((_container_portalContainer = container.portalContainer) === null || _container_portalContainer === void 0 ? void 0 : _container_portalContainer.current);\n  }, [container.portalContainer]);\n  const Component = nested ? Drawer.NestedRoot : Drawer.Root;\n  return /*#__PURE__*/_jsxs(Component, {\n    open: open,\n    onOpenChange: onOpenChange,\n    closeThreshold: closeThreshold,\n    scrollLockTimeout: scrollLockTimeout,\n    snapPoints: snapPoints,\n    fadeFromIndex: fadeFromIndex,\n    modal: modal,\n    preventScrollRestoration: preventScrollRestoration,\n    dismissible: dismissible,\n    children: [trigger && /*#__PURE__*/_jsx(Drawer.Trigger, {\n      asChild: true,\n      children: trigger\n    }), /*#__PURE__*/_jsxs(Drawer.Portal, {\n      container: portal,\n      children: [overlayComponent, /*#__PURE__*/_jsxs(Drawer.Content, _object_spread_props(_object_spread({\n        ref: ref,\n        className: classNames(\"tgui-cc76354712c6e8d9\", className)\n      }, restProps), {\n        children: [header, /*#__PURE__*/_jsx(\"div\", {\n          className: \"tgui-5dc6ad1ca3ac3ed4\",\n          children: children\n        })]\n      }))]\n    })]\n  });\n});\nModal.Header = ModalHeader;\nModal.Overlay = ModalOverlay;\nModal.Close = ModalClose;","map":{"version":3,"names":["forwardRef","useEffect","useState","classNames","useAppRootContext","Drawer","ModalClose","ModalHeader","ModalOverlay","Modal","_param","ref","overlayComponent","_jsx","open","onOpenChange","header","className","children","nested","trigger","closeThreshold","scrollLockTimeout","snapPoints","fadeFromIndex","modal","preventScrollRestoration","dismissible","restProps","_object_without_properties","_container_portalContainer","container","portal","setPortal","portalContainer","current","Component","NestedRoot","Root","_jsxs","Trigger","asChild","Portal","Content","_object_spread_props","_object_spread","Header","Overlay","Close"],"sources":["/home/dmitry/Projects/MEPhI/MEPhI360/app/node_modules/@telegram-apps/telegram-ui/src/components/Overlays/Modal/Modal.tsx"],"sourcesContent":["'use client';\n\nimport {\n  forwardRef,\n  ForwardRefExoticComponent,\n  HTMLAttributes,\n  ReactNode,\n  RefAttributes,\n  useEffect,\n  useState,\n} from 'react';\nimport styles from './Modal.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { useAppRootContext } from 'hooks/useAppRootContext';\n\nimport { Drawer } from '@xelene/vaul-with-scroll-fix';\n\nimport { ModalClose } from './components/ModalClose/ModalClose';\nimport { ModalHeader } from './components/ModalHeader/ModalHeader';\nimport { ModalOverlay } from './components/ModalOverlay/ModalOverlay';\n\nexport interface ModalProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onAnimationEnd'> {\n  /** Controls the displayed state of the modal, enabling external management. */\n  open?: boolean;\n  /** Callback fired upon state change, facilitating open/close state synchronization. */\n  onOpenChange?: (open: boolean) => void;\n  /** Custom header component to display at the top of the modal. */\n  header?: ReactNode;\n  /** Custom component for the modal's overlay backdrop. */\n  overlayComponent?: ReactNode;\n  /** Component or element used to trigger the modal's visibility. */\n  trigger?: ReactNode;\n  /** Enables nesting within another drawer component, allowing for hierarchical structures. */\n  nested?: boolean;\n  /** Threshold for swipe actions to trigger modal closure, expressed as a decimal between 0 and 1. */\n  closeThreshold?: number;\n  /** Debounce duration after scrolling within the modal before it can be closed through swipe actions. */\n  scrollLockTimeout?: number;\n  /** Governs interaction with background elements when the modal is open. */\n  modal?: boolean;\n  /** Prevents automatic scroll position restoration when the modal closes, preserving user context. */\n  preventScrollRestoration?: boolean;\n  /** Defines snap points for modal positioning, supporting percentages of screen height or pixel values. */\n  snapPoints?: (number | string)[];\n  /** Snap point index at which the overlay begins to fade, enhancing visual cues for modal depth. */\n  fadeFromIndex?: never;\n  /** Determines if the modal can be closed by user interactions */\n  dismissible?: boolean;\n}\n\ntype ModalWithComponents = ForwardRefExoticComponent<ModalProps & RefAttributes<HTMLDivElement>> & {\n  Header: typeof ModalHeader;\n  Overlay: typeof Drawer.Overlay;\n  Close: typeof ModalClose;\n};\n\n/**\n * Modal component, providing a flexible dialog framework with customizable content and interaction models.\n * It leverages the Drawer component from 'vaul' for its base functionality, enhanced with additional properties\n * and behaviors specific to modal dialogues, such as overlay management and nested modals.\n */\nexport const Modal = forwardRef<HTMLDivElement, ModalProps>(({\n  overlayComponent = <ModalOverlay />,\n  open,\n  onOpenChange,\n  header,\n  className,\n  children,\n  nested,\n  trigger,\n  closeThreshold,\n  scrollLockTimeout,\n  snapPoints,\n  fadeFromIndex,\n  modal,\n  preventScrollRestoration,\n  dismissible,\n  ...restProps\n}, ref) => {\n  const container = useAppRootContext();\n  const [portal, setPortal] = useState(container.portalContainer?.current);\n\n  // This is internal optimization for AppRoot\n  // React sets ref to normal value only after the first render\n  // If we will have this logic inside the AppRoot component, then all tree will be re-rendered\n  useEffect(() => {\n    setPortal(container.portalContainer?.current);\n  }, [container.portalContainer]);\n\n  const Component = nested ? Drawer.NestedRoot : Drawer.Root;\n  return (\n    <Component\n      open={open}\n      onOpenChange={onOpenChange}\n      closeThreshold={closeThreshold}\n      scrollLockTimeout={scrollLockTimeout}\n      snapPoints={snapPoints}\n      fadeFromIndex={fadeFromIndex}\n      modal={modal}\n      preventScrollRestoration={preventScrollRestoration}\n      dismissible={dismissible}\n    >\n      {trigger && <Drawer.Trigger asChild>{trigger}</Drawer.Trigger>}\n      <Drawer.Portal container={portal}>\n        {overlayComponent}\n        <Drawer.Content\n          ref={ref}\n          className={classNames(styles.wrapper, className)}\n          {...restProps}\n        >\n          {header}\n          <div className={styles.body}>\n            {children}\n          </div>\n        </Drawer.Content>\n      </Drawer.Portal>\n    </Component>\n  );\n}) as ModalWithComponents;\n\nModal.Header = ModalHeader;\nModal.Overlay = ModalOverlay;\nModal.Close = ModalClose;\n"],"mappings":"AAAA;;;;;;AAEA,SACEA,UAAU,EAKVC,SAAS,EACTC,QAAQ,QACH;AAGP,SAASC,UAAU,QAAQ;AAC3B,SAASC,iBAAiB,QAAQ;AAElC,SAASC,MAAM,QAAQ;AAEvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAC5B,SAASC,YAAY,QAAQ;AAqC7B;;;;;AAKA,OAAO,MAAMC,KAAA,gBAAQT,UAAA,CAAuC,CAAAU,MAAA,EAiBzDC,GAAA;MAjB0D;MAC3DC,gBAAA,gBAAmBC,IAAA,CAACL,YAAA,KAAe;MACnCM,IAAI;MACJC,YAAY;MACZC,MAAM;MACNC,SAAS;MACTC,QAAQ;MACRC,MAAM;MACNC,OAAO;MACPC,cAAc;MACdC,iBAAiB;MACjBC,UAAU;MACVC,aAAa;MACbC,KAAK;MACLC,wBAAwB;MACxBC;IAAW,CAEZ,GAAAjB,MAAA;IADIkB,SAAA,GAAAC,0BAAA,CAAAnB,MAAA,GAfH,oBACA,QACA,gBACA,UACA,aACA,YACA,UACA,WACA,kBACA,qBACA,cACA,iBACA,SACA,4BACA,c;MAIqCoB,0BAAA;EADrC,MAAMC,SAAA,GAAY3B,iBAAA;EAClB,MAAM,CAAC4B,MAAA,EAAQC,SAAA,CAAU,GAAG/B,QAAA,EAAS4B,0BAAA,GAAAC,SAAA,CAAUG,eAAe,cAAzBJ,0BAAA,uBAAAA,0BAAA,CAA2BK,OAAO;EAEvE;EACA;EACA;EACAlC,SAAA,CAAU;QACE6B,0BAAA;IAAVG,SAAA,EAAUH,0BAAA,GAAAC,SAAA,CAAUG,eAAe,cAAzBJ,0BAAA,uBAAAA,0BAAA,CAA2BK,OAAO;EAC9C,GAAG,CAACJ,SAAA,CAAUG,eAAe,CAAC;EAE9B,MAAME,SAAA,GAAYjB,MAAA,GAASd,MAAA,CAAOgC,UAAU,GAAGhC,MAAA,CAAOiC,IAAI;EAC1D,oBACEC,KAAA,CAACH,SAAA;IACCtB,IAAA,EAAMA,IAAA;IACNC,YAAA,EAAcA,YAAA;IACdM,cAAA,EAAgBA,cAAA;IAChBC,iBAAA,EAAmBA,iBAAA;IACnBC,UAAA,EAAYA,UAAA;IACZC,aAAA,EAAeA,aAAA;IACfC,KAAA,EAAOA,KAAA;IACPC,wBAAA,EAA0BA,wBAAA;IAC1BC,WAAA,EAAaA,WAAA;eAEZP,OAAA,iBAAWP,IAAA,CAACR,MAAA,CAAOmC,OAAO;MAACC,OAAO;gBAAErB;qBACrCmB,KAAA,CAAClC,MAAA,CAAOqC,MAAM;MAACX,SAAA,EAAWC,MAAA;iBACvBpB,gBAAA,E,aACD2B,KAAA,CAAClC,MAAA,CAAOsC,OAAO,EAAAC,oBAAA,CAAAC,cAAA;QACblC,GAAA,EAAKA,GAAA;QACLM,SAAA,EAAWd,UAAA,0BAA2Bc,SAAA;SAClCW,SAAA;mBAEHZ,MAAA,E,aACDH,IAAA,CAAC;UAAII,SAAS;oBACXC;;;;;AAMb;AAEAT,KAAA,CAAMqC,MAAM,GAAGvC,WAAA;AACfE,KAAA,CAAMsC,OAAO,GAAGvC,YAAA;AAChBC,KAAA,CAAMuC,KAAK,GAAG1C,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}