{"version":3,"sources":["../../../../src/components/Blocks/Section/Section.tsx"],"sourcesContent":["'use client';\n\nimport { Children, HTMLAttributes, ReactNode } from 'react';\nimport styles from './Section.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { isPrimitiveReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Divider } from 'components/Misc/Divider/Divider';\nimport { SectionFooter } from './components/SectionFooter/SectionFooter';\nimport { SectionHeader } from './components/SectionHeader/SectionHeader';\n\nexport interface SectionProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * The content for the section header. If a string is passed, `Section.Header` is automatically used.\n   * For more control or a large title, use `<Section.Header large>{headerText}</Section.Header>`.\n   */\n  header?: ReactNode;\n  /**\n   * The content for the section footer. If a string is passed, `Section.Footer` is automatically used.\n   * For a centered footer, use `<Section.Footer centered>{footerText}</Section.Footer>`.\n   */\n  footer?: ReactNode;\n}\n\n/**\n * Organizes content into distinct sections with optional headers and footers. It automatically wraps\n * primitive header and footer content in the appropriate sub-components, and inserts dividers between\n * children when rendering multiple elements.\n */\nexport const Section = ({ header, footer, className, children, ...restProps }: SectionProps) => {\n  const platform = usePlatform();\n\n  const headerWithWrapper = isPrimitiveReactNode(header) ? <SectionHeader>{header}</SectionHeader> : header;\n  const footerWithWrapper = isPrimitiveReactNode(footer) ? <SectionFooter>{footer}</SectionFooter> : footer;\n\n  return (\n    <section\n      className={classNames(\n        styles.wrapper,\n        platform === 'base' && styles['wrapper--base'],\n        platform === 'ios' && styles['wrapper--ios'],\n        className,\n      )}\n      {...restProps}\n    >\n      <div className={styles.bodyWithHeader}>\n        {headerWithWrapper}\n        <div className={styles.body}>\n          {Children.map(children, (child, index) => (\n            <>\n              {child}\n              {index < Children.count(children) - 1 && (\n                <Divider className={styles.divider} />\n              )}\n            </>\n          ))}\n        </div>\n      </div>\n      {footerWithWrapper}\n    </section>\n  );\n};\n\nSection.Header = SectionHeader;\nSection.Footer = SectionFooter;\n"],"names":["Children","classNames","isPrimitiveReactNode","usePlatform","Divider","SectionFooter","SectionHeader","Section","header","footer","className","children","restProps","platform","headerWithWrapper","footerWithWrapper","section","div","map","child","index","count","Header","Footer"],"mappings":"AAAA;;;;;AAEA,SAASA,QAAQ,QAAmC,QAAQ;AAG5D,SAASC,UAAU,QAAQ,8BAAqB;AAChD,SAASC,oBAAoB,QAAQ,8BAAqB;AAC1D,SAASC,WAAW,QAAQ,6BAAoB;AAEhD,SAASC,OAAO,QAAQ,6BAAkC;AAC1D,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,aAAa,QAAQ,2CAA2C;AAezE;;;;CAIC,GACD,OAAO,MAAMC,UAAU;QAAC,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAA8B,WAAzBC;QAAxCJ;QAAQC;QAAQC;QAAWC;;IACnD,MAAME,WAAWV;IAEjB,MAAMW,oBAAoBZ,qBAAqBM,wBAAU,KAACF;kBAAeE;SAA0BA;IACnG,MAAMO,oBAAoBb,qBAAqBO,wBAAU,KAACJ;kBAAeI;SAA0BA;IAEnG,qBACE,MAACO;QACCN,WAAWT,oCAETY,aAAa,mCACbA,aAAa,kCACbH;OAEEE;;0BAEJ,MAACK;gBAAIP,SAAS;;oBACXI;kCACD,KAACG;wBAAIP,SAAS;kCACXV,SAASkB,GAAG,CAACP,UAAU,CAACQ,OAAOC,sBAC9B;;oCACGD;oCACAC,QAAQpB,SAASqB,KAAK,CAACV,YAAY,mBAClC,KAACP;wCAAQM,SAAS;;;;;;;YAM3BK;;;AAGP,EAAE;AAEFR,QAAQe,MAAM,GAAGhB;AACjBC,QAAQgB,MAAM,GAAGlB"}