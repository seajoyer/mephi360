{"version":3,"sources":["../../../../src/components/Blocks/Banner/Banner.tsx"],"sourcesContent":["'use client';\n\nimport { HTMLAttributes, MouseEventHandler, ReactNode } from 'react';\nimport styles from './Banner.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Icon24Cancel } from 'icons/24/cancel';\nimport { Icon28Close } from 'icons/28/close';\nimport { Icon28CloseAmbient } from 'icons/28/close_ambient';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\nimport { Text } from 'components/Typography/Text/Text';\nimport { BannerDescriptionTypography } from './components/BannerDescriptionTypography/BannerDescriptionTypography';\n\nexport interface BannerProps extends HTMLAttributes<HTMLDivElement> {\n  /** Specifies the banner's layout style, which can affect its positioning and styling. */\n  type?: 'section' | 'inline';\n  /** Element(s) to be placed on the left side of the banner, typically an icon or an image. */\n  before?: ReactNode;\n  /** Content displayed above the main content as a subheading */\n  callout?: ReactNode;\n  /** The main text or title displayed in the banner. */\n  header?: ReactNode;\n  /** Additional information or subtext displayed below the header. */\n  subheader?: ReactNode;\n  /** Further details or description provided under the subheader. */\n  description?: ReactNode;\n  /** Custom background component or design, such as an image or gradient, that covers the banner's area. */\n  background?: ReactNode;\n  /** Callback function that is executed when the close icon of the banner is clicked. If not provided, the close icon is not displayed. */\n  onCloseIcon?: MouseEventHandler<HTMLButtonElement>;\n  /** Content or components, such as buttons, displayed within the banner. For multiple elements, wrap them in a React.Fragment. */\n  children?: ReactNode;\n}\n\n/**\n * The `Banner` component renders a prominent graphical element, typically displayed at the top of a page or section, \n * designed to grab the user's attention and convey important information. \n * It is a versatile tool used for various purposes such as branding, promotion, announcements, or navigation.\n */\nexport const Banner = ({\n  type,\n  before,\n  callout,\n  header,\n  subheader,\n  description,\n  background,\n  className,\n  children,\n  onCloseIcon,\n  ...restProps\n}: BannerProps) => {\n  const platform = usePlatform();\n  const hasBackground = hasReactNode(background);\n\n  return (\n    <section\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        platform === 'base' && styles['wrapper--base'],\n        hasBackground && styles['wrapper--withBackground'],\n        type === 'inline' && styles['wrapper--inline'],\n        className,\n      )}\n      {...restProps}\n    >\n      {hasBackground && (\n        <div className={styles.background}>\n          {background}\n        </div>\n      )}\n      {before}\n      <div className={styles.middle}>\n        {hasReactNode(callout) && <Subheadline className={styles.subheader} level=\"2\">{callout}</Subheadline>} \n        {hasReactNode(header) && <Text className={styles.title} weight=\"2\">{header}</Text>}\n        {hasReactNode(subheader) && <Subheadline className={styles.subheader} level=\"2\">{subheader}</Subheadline>}\n        {hasReactNode(description) && <BannerDescriptionTypography className={styles.description}>{description}</BannerDescriptionTypography>}\n        {hasReactNode(children) && (\n          <div className={styles.buttons}>\n            {children}\n          </div>\n        )}\n      </div>\n      {onCloseIcon && (\n        <Tappable onClick={onCloseIcon} className={styles.close} Component=\"div\">\n          {!hasBackground && (platform === 'ios' ? <Icon24Cancel /> : <Icon28Close />)}\n          {hasBackground && <Icon28CloseAmbient />}\n        </Tappable>\n      )}\n    </section>\n  );\n};"],"names":["classNames","hasReactNode","usePlatform","Icon24Cancel","Icon28Close","Icon28CloseAmbient","Tappable","Subheadline","Text","BannerDescriptionTypography","Banner","type","before","callout","header","subheader","description","background","className","children","onCloseIcon","restProps","platform","hasBackground","section","div","level","weight","onClick","Component"],"mappings":"AAAA;;;;;AAKA,SAASA,UAAU,QAAQ,8BAAqB;AAChD,SAASC,YAAY,QAAQ,8BAAqB;AAClD,SAASC,WAAW,QAAQ,6BAAoB;AAEhD,SAASC,YAAY,QAAQ,2BAAkB;AAC/C,SAASC,WAAW,QAAQ,0BAAiB;AAC7C,SAASC,kBAAkB,QAAQ,kCAAyB;AAE5D,SAASC,QAAQ,QAAQ,kCAAuC;AAChE,SAASC,WAAW,QAAQ,2CAAgD;AAC5E,SAASC,IAAI,QAAQ,6BAAkC;AACvD,SAASC,2BAA2B,QAAQ,uEAAuE;AAuBnH;;;;CAIC,GACD,OAAO,MAAMC,SAAS;QAAC,EACrBC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,QAAQ,EACRC,WAAW,EAEC,WADTC;QAVHV;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,WAAWpB;IACjB,MAAMqB,gBAAgBtB,aAAagB;IAEnC,qBACE,MAACO;QACCN,WAAWlB,oCAETsB,aAAa,kCACbA,aAAa,mCACbC,0CACAZ,SAAS,qCACTO;OAEEG;;YAEHE,+BACC,KAACE;gBAAIP,SAAS;0BACXD;;YAGJL;0BACD,MAACa;gBAAIP,SAAS;;oBACXjB,aAAaY,0BAAY,KAACN;wBAAYW,SAAS;wBAAoBQ,OAAM;kCAAKb;;oBAC9EZ,aAAaa,yBAAW,KAACN;wBAAKU,SAAS;wBAAgBS,QAAO;kCAAKb;;oBACnEb,aAAac,4BAAc,KAACR;wBAAYW,SAAS;wBAAoBQ,OAAM;kCAAKX;;oBAChFd,aAAae,8BAAgB,KAACP;wBAA4BS,SAAS;kCAAuBF;;oBAC1Ff,aAAakB,2BACZ,KAACM;wBAAIP,SAAS;kCACXC;;;;YAINC,6BACC,MAACd;gBAASsB,SAASR;gBAAaF,SAAS;gBAAgBW,WAAU;;oBAChE,CAACN,iBAAkBD,CAAAA,aAAa,sBAAQ,KAACnB,kCAAkB,KAACC,gBAAa;oBACzEmB,+BAAiB,KAAClB;;;;;AAK7B,EAAE"}