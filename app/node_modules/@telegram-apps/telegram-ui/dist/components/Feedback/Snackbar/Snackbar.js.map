{"version":3,"sources":["../../../../src/components/Feedback/Snackbar/Snackbar.tsx"],"sourcesContent":["'use client';\n\nimport { HTMLAttributes, ReactElement, ReactNode, useEffect, useState } from 'react';\nimport styles from './Snackbar.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\nimport { useTimeout } from 'hooks/useTimeout';\n\nimport { LinkProps } from 'components/Navigation/Link/Link';\nimport { RootRenderer } from 'components/Service/RootRenderer/RootRenderer';\nimport { Caption } from 'components/Typography/Caption/Caption';\nimport { SnackbarButton } from './components/SnackbarButton/SnackbarButton';\n\nexport interface SnackbarProps extends HTMLAttributes<HTMLDivElement> {\n  /** Element or component to be displayed on the left side of the snackbar. */\n  before?: ReactNode;\n  /** Element or component to be displayed on the right side of the snackbar. */\n  after?: ReactNode;\n  /** The main content of the snackbar, typically text or a message. */\n  children?: ReactNode;\n  /** Additional content displayed below the main message. */\n  description?: ReactNode;\n  /** A link component to be included in the snackbar for user interaction. */\n  link?: ReactElement<LinkProps>;\n  /** The duration in milliseconds after which the snackbar will automatically close. */\n  duration?: number;\n  /** Callback function invoked when the snackbar is closed. */\n  onClose: () => void;\n}\n\nconst TRANSITION_FINISH_DURATION = 320;\n\n/**\n * Displays a brief message at the bottom of the screen, which can contain actions and other content.\n * It automatically dismisses after a set duration, providing feedback or interaction prompts to users.\n */\nexport const Snackbar = ({\n  before,\n  after,\n  description,\n  link,\n  children,\n  className,\n  duration = 4000,\n  onClose,\n  ...restProps\n}: SnackbarProps) => {\n  const platform = usePlatform();\n  const [closing, setClosing] = useState(false);\n\n  const close = () => {\n    setClosing(true);\n    setTimeout(onClose, TRANSITION_FINISH_DURATION);\n  };\n\n  const closeTimeout = useTimeout(close, duration);\n  useEffect(() => closeTimeout.set(), [closeTimeout]);\n\n  return (\n    <RootRenderer>\n      <div\n        className={classNames(\n          styles.wrapper,\n          platform === 'ios' && styles['wrapper--ios'],\n          closing && styles['wrapper--closing'],\n          className,\n        )}\n        {...restProps}\n      >\n        <div className={styles.body}>\n          {hasReactNode(before) && (\n            <div className={styles.before}>\n              {before}\n            </div>\n          )}\n          <div className={styles.middle}>\n            {hasReactNode(children) && <Caption weight=\"2\">{children}</Caption>}\n            {hasReactNode(description) && <Caption>{description}</Caption>}\n            {hasReactNode(link) && <Caption>{link}</Caption>}\n          </div>\n          {hasReactNode(after) && (\n            <div className={styles.after}>\n              {after}\n            </div>\n          )}\n        </div>\n      </div>\n    </RootRenderer>\n  );\n};\n\nSnackbar.Button = SnackbarButton;\n"],"names":["useEffect","useState","classNames","hasReactNode","usePlatform","useTimeout","RootRenderer","Caption","SnackbarButton","TRANSITION_FINISH_DURATION","Snackbar","before","after","description","link","children","className","duration","onClose","restProps","platform","closing","setClosing","close","setTimeout","closeTimeout","set","div","weight","Button"],"mappings":"AAAA;;;;;AAEA,SAAkDA,SAAS,EAAEC,QAAQ,QAAQ,QAAQ;AAGrF,SAASC,UAAU,QAAQ,8BAAqB;AAChD,SAASC,YAAY,QAAQ,8BAAqB;AAClD,SAASC,WAAW,QAAQ,6BAAoB;AAChD,SAASC,UAAU,QAAQ,4BAAmB;AAG9C,SAASC,YAAY,QAAQ,0CAA+C;AAC5E,SAASC,OAAO,QAAQ,mCAAwC;AAChE,SAASC,cAAc,QAAQ,6CAA6C;AAmB5E,MAAMC,6BAA6B;AAEnC;;;CAGC,GACD,OAAO,MAAMC,WAAW;QAAC,EACvBC,MAAM,EACNC,KAAK,EACLC,WAAW,EACXC,IAAI,EACJC,QAAQ,EACRC,SAAS,EACTC,WAAW,IAAI,EACfC,OAAO,EAEO,WADXC;QARHR;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,WAAWhB;IACjB,MAAM,CAACiB,SAASC,WAAW,GAAGrB,SAAS;IAEvC,MAAMsB,QAAQ;QACZD,WAAW;QACXE,WAAWN,SAAST;IACtB;IAEA,MAAMgB,eAAepB,WAAWkB,OAAON;IACvCjB,UAAU,IAAMyB,aAAaC,GAAG,IAAI;QAACD;KAAa;IAElD,qBACE,KAACnB;kBACC,cAAA,KAACqB;YACCX,WAAWd,oCAETkB,aAAa,kCACbC,oCACAL;WAEEG;sBAEJ,cAAA,MAACQ;gBAAIX,SAAS;;oBACXb,aAAaQ,yBACZ,KAACgB;wBAAIX,SAAS;kCACXL;;kCAGL,MAACgB;wBAAIX,SAAS;;4BACXb,aAAaY,2BAAa,KAACR;gCAAQqB,QAAO;0CAAKb;;4BAC/CZ,aAAaU,8BAAgB,KAACN;0CAASM;;4BACvCV,aAAaW,uBAAS,KAACP;0CAASO;;;;oBAElCX,aAAaS,wBACZ,KAACe;wBAAIX,SAAS;kCACXJ;;;;;;AAOf,EAAE;AAEFF,SAASmB,MAAM,GAAGrB"}