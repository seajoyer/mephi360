{"version":3,"sources":["../../../../src/components/Feedback/CircularProgress/CircularProgress.tsx"],"sourcesContent":["import { HTMLAttributes } from 'react';\nimport styles from './CircularProgress.module.css';\n\nimport { getCircleAttributes } from 'components/Feedback/CircularProgress/helpers/getCircleAttributes';\n\nexport interface CircularProgressProps extends HTMLAttributes<HTMLOrSVGElement> {\n  /** Specifies the size of the circular progress indicator. Can be 'small', 'medium', or 'large'. */\n  size?: 'small' | 'medium' | 'large';\n  /** Current progress of the circular indicator, expressed as a percentage from 0 to 100. */\n  progress?: number;\n}\n\n/**\n * Renders a circular progress indicator, useful for displaying loading states or progress metrics.\n * The component dynamically adjusts its size and stroke based on the provided `size` prop and visually represents\n * the `progress` prop as a percentage of the circle's circumference.\n */\nexport const CircularProgress = ({\n  size = 'medium',\n  progress = 0,\n}: CircularProgressProps) => {\n  const circleAttributes = getCircleAttributes(size);\n  if (!circleAttributes) {\n    return null;\n  }\n\n  const circumference = 2 * Math.PI * circleAttributes.radius;\n  const circleSize = circleAttributes.size / 2;\n\n  return (\n    <svg\n      className={styles.wrapper}\n      width={circleAttributes.size}\n      height={circleAttributes.size}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        cx={circleSize}\n        cy={circleSize}\n        r={circleAttributes.radius}\n        strokeOpacity=\".1\"\n        strokeWidth={circleAttributes.strokeWidth}\n        fill=\"none\"\n      />\n      <circle\n        fill=\"none\"\n        cx={circleSize}\n        cy={circleSize}\n        r={circleAttributes.radius}\n        strokeWidth={circleAttributes.strokeWidth}\n        strokeLinecap=\"round\"\n        strokeDasharray={circumference}\n        strokeDashoffset={circumference * ((100 - progress) / 100)}\n      />\n    </svg>\n  );\n};\n"],"names":["getCircleAttributes","CircularProgress","size","progress","circleAttributes","circumference","Math","PI","radius","circleSize","svg","className","width","height","fill","xmlns","circle","cx","cy","r","strokeOpacity","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset"],"mappings":";AAGA,SAASA,mBAAmB,QAAQ,gCAAmE;AASvG;;;;CAIC,GACD,OAAO,MAAMC,mBAAmB,CAAC,EAC/BC,OAAO,QAAQ,EACfC,WAAW,CAAC,EACU;IACtB,MAAMC,mBAAmBJ,oBAAoBE;IAC7C,IAAI,CAACE,kBAAkB;QACrB,OAAO;IACT;IAEA,MAAMC,gBAAgB,IAAIC,KAAKC,EAAE,GAAGH,iBAAiBI,MAAM;IAC3D,MAAMC,aAAaL,iBAAiBF,IAAI,GAAG;IAE3C,qBACE,MAACQ;QACCC,SAAS;QACTC,OAAOR,iBAAiBF,IAAI;QAC5BW,QAAQT,iBAAiBF,IAAI;QAC7BY,MAAK;QACLC,OAAM;;0BAEN,KAACC;gBACCC,IAAIR;gBACJS,IAAIT;gBACJU,GAAGf,iBAAiBI,MAAM;gBAC1BY,eAAc;gBACdC,aAAajB,iBAAiBiB,WAAW;gBACzCP,MAAK;;0BAEP,KAACE;gBACCF,MAAK;gBACLG,IAAIR;gBACJS,IAAIT;gBACJU,GAAGf,iBAAiBI,MAAM;gBAC1Ba,aAAajB,iBAAiBiB,WAAW;gBACzCC,eAAc;gBACdC,iBAAiBlB;gBACjBmB,kBAAkBnB,gBAAiB,CAAA,AAAC,CAAA,MAAMF,QAAO,IAAK,GAAE;;;;AAIhE,EAAE"}