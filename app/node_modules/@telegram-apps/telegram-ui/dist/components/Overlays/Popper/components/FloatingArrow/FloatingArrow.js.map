{"version":3,"sources":["../../../../../../src/components/Overlays/Popper/components/FloatingArrow/FloatingArrow.tsx"],"sourcesContent":["import { ComponentType, forwardRef, HTMLAttributes, SVGAttributes } from 'react';\nimport styles from './FloatingArrow.module.css';\n\nimport { classNames } from 'helpers/classNames';\n\nimport { Placement } from '@floating-ui/react-dom';\n\nimport { Coords, getArrowPositionData } from './helpers/getArrowPositionData';\nimport { DefaultIcon } from './icons/arrow';\n\nconst placementStyles = {\n  right: styles['wrapper--placement-right'],\n  bottom: styles['wrapper--placement-bottom'],\n  left: styles['wrapper--placement-left'],\n};\n\nexport interface FloatingArrowProps extends HTMLAttributes<HTMLDivElement> {\n  /** Optional distance from the target element, influencing the arrow's placement. */\n  offset?: number;\n  /** When true, the offset distance remains constant, regardless of the arrow's placement. */\n  isStaticOffset?: boolean;\n  /** Coordinates for the arrow, useful for precise positioning when the arrow is not directly adjacent to its target. */\n  coords?: Coords;\n  /** The preferred placement of the arrow relative to its target element. */\n  placement?: Placement;\n  /** A React component for rendering the arrow icon, allowing for custom arrow designs. */\n  Icon?: ComponentType<SVGAttributes<SVGSVGElement>>;\n}\n\n/**\n * FloatingArrow dynamically positions an arrow indicator relative to a floating element,\n * such as a tooltip to signify its association with a target element.\n * Supports custom arrow icons and positioning adjustments.\n */\nexport const FloatingArrow = forwardRef<HTMLDivElement, FloatingArrowProps>(({\n  style,\n  offset,\n  isStaticOffset,\n  coords,\n  placement = 'bottom',\n  Icon = DefaultIcon,\n  className,\n  ...restProps\n}, ref) => {\n  const [arrowPlacement, arrowStyles] = getArrowPositionData(\n    placement,\n    coords,\n    offset,\n    isStaticOffset,\n  );\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        ...arrowStyles,\n        ...style,\n      }}\n      className={classNames(\n        styles.wrapper,\n        arrowPlacement && placementStyles[arrowPlacement],\n        className,\n      )}\n      {...restProps}\n    >\n      <Icon className={styles.icon} />\n    </div>\n  );\n});\n"],"names":["forwardRef","classNames","getArrowPositionData","DefaultIcon","placementStyles","right","bottom","left","FloatingArrow","ref","style","offset","isStaticOffset","coords","placement","Icon","className","restProps","arrowPlacement","arrowStyles","div"],"mappings":";;;;AAAA,SAAwBA,UAAU,QAAuC,QAAQ;AAGjF,SAASC,UAAU,QAAQ,oCAAqB;AAIhD,SAAiBC,oBAAoB,QAAQ,iCAAiC;AAC9E,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,kBAAkB;IACtBC,KAAK;IACLC,MAAM;IACNC,IAAI;AACN;AAeA;;;;CAIC,GACD,OAAO,MAAMC,8BAAgBR,WAA+C,SASzES;QAT0E,EAC3EC,KAAK,EACLC,MAAM,EACNC,cAAc,EACdC,MAAM,EACNC,YAAY,QAAQ,EACpBC,OAAOZ,WAAW,EAClBa,SAAS,EAEV,WADIC;QAPHP;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAM,CAACE,gBAAgBC,YAAY,GAAGjB,qBACpCY,WACAD,QACAF,QACAC;IAGF,qBACE,KAACQ;QACCX,KAAKA;QACLC,OAAO,mBACFS,aACAT;QAELM,WAAWf,oCAETiB,kBAAkBd,eAAe,CAACc,eAAe,EACjDF;OAEEC;kBAEJ,cAAA,KAACF;YAAKC,SAAS;;;AAGrB,GAAG"}