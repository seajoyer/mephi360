{"version":3,"sources":["../../../../../../src/components/Form/Multiselect/components/MultiselectBase/MultiselectBase.tsx"],"sourcesContent":["import {\n  forwardRef,\n  Fragment,\n  InputHTMLAttributes,\n  KeyboardEvent,\n  MouseEvent,\n  RefObject,\n} from 'react';\nimport styles from './MultiselectBase.module.css';\n\nimport { getHorizontalSideByKey, Keys } from 'helpers/accessibility';\nimport { classNames } from 'helpers/classNames';\nimport { getHTMLElementByChildren, getHTMLElementSiblingByDirection } from 'helpers/dom';\nimport { useExternRef } from 'hooks/useExternalRefs';\n\nimport { isHTMLElement } from '@floating-ui/utils/dom';\nimport { Icon16Cancel } from 'icons/16/cancel';\n\nimport { ChipProps } from 'components/Form/Chip/Chip';\nimport { MultiselectOption } from 'components/Form/Multiselect/types';\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\nimport { getValueOptionByHTMLElement } from './helpers/getValueOptionByHTMLElement';\nimport { renderChipDefault } from './constants';\n\nexport interface MultiselectBaseProps extends InputHTMLAttributes<HTMLInputElement> {\n  /** Custom function to render Chip component. */\n  renderChip?: (props: ChipProps) => JSX.Element;\n  /** Ref to the input element within the multiselect base. */\n  inputRef: RefObject<HTMLInputElement>;\n  /** Array of selected options (chips). */\n  chipsValue: MultiselectOption[];\n  /** Callback function to add an option based on text input. */\n  onAddChipOption: (optionText: string) => void;\n  /** Callback function to remove a selected chip. */\n  onRemoveChipOption: (option: MultiselectOption) => void;\n}\n\n/**\n * Renders the base layout of the multiselect including the chips (selected options) and the input field.\n */\nexport const MultiselectBase = forwardRef<HTMLDivElement, MultiselectBaseProps>(({\n  inputRef,\n  className,\n\n  // Option props\n  chipsValue,\n  onAddChipOption,\n  onRemoveChipOption,\n  renderChip = renderChipDefault,\n\n  // Input props\n  value,\n  placeholder,\n  disabled,\n  readOnly,\n  ...restProps\n}, ref) => {\n  const listRef = useExternRef<HTMLDivElement>(ref);\n\n  const valueLength = chipsValue.length;\n  const withPlaceholder = valueLength === 0;\n  const isDisabled = disabled || readOnly;\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\n    const targetEl = event.target;\n    const inputEl = inputRef.current;\n\n    if (event.defaultPrevented || !inputEl || !isHTMLElement(targetEl)) {\n      return;\n    }\n\n    const lastOptionIndex = valueLength - 1;\n\n    const nextInputValue = inputEl.value;\n    const isInputEl = targetEl === inputEl;\n    const isInputValueEmpty = nextInputValue === '';\n\n    switch (event.key) {\n      case Keys.ENTER: {\n        if (isInputEl && !isInputValueEmpty) {\n          event.preventDefault();\n          onAddChipOption(nextInputValue);\n        }\n        break;\n      }\n\n      case Keys.BACKSPACE: {\n        if (valueLength) {\n          const option =\n            isInputEl && isInputValueEmpty\n              ? chipsValue[lastOptionIndex]\n              : getValueOptionByHTMLElement(chipsValue, targetEl);\n\n          if (!option) {\n            return;\n          }\n\n          event.preventDefault();\n          inputRef.current.focus();\n          onRemoveChipOption(option);\n        }\n        break;\n      }\n\n      case Keys.ARROW_UP:\n      case Keys.ARROW_LEFT:\n      case Keys.ARROW_DOWN:\n      case Keys.ARROW_RIGHT: {\n        if (!valueLength || !listRef.current) {\n          break;\n        }\n\n        const isSelectionOnFirstLetter = inputEl.selectionStart === 0;\n        const isRightSelection = event.key === Keys.ARROW_RIGHT && isSelectionOnFirstLetter;\n\n        if (!isInputValueEmpty && !isSelectionOnFirstLetter || isRightSelection) {\n          break;\n        }\n\n        event.preventDefault();\n        let foundEl: HTMLElement | null = null;\n        const horizontalSide = getHorizontalSideByKey(event.key);\n\n        if (isInputEl && (event.key === Keys.ARROW_UP || event.key === Keys.ARROW_LEFT)) {\n          foundEl = getHTMLElementByChildren(listRef.current.children, lastOptionIndex);\n        } else if (horizontalSide) {\n          foundEl = getHTMLElementSiblingByDirection(targetEl, horizontalSide);\n        }\n\n        foundEl && foundEl.focus();\n        break;\n      }\n\n      default:\n        break;\n    }\n  };\n\n  const handleChipRemove = (event: MouseEvent, optionToRemove: MultiselectOption) => {\n    event.preventDefault();\n    event.stopPropagation();\n    onRemoveChipOption(optionToRemove);\n  };\n\n  const handleClick = () => {\n    const isFocused = document.activeElement === inputRef.current;\n    if (!isFocused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    <div\n      ref={listRef}\n      className={classNames(\n        styles.wrapper,\n        withPlaceholder && styles['wrapper--withPlaceholder'],\n        className,\n      )}\n      onClick={isDisabled ? undefined : handleClick}\n      role=\"listbox\"\n      aria-orientation=\"horizontal\"\n      aria-disabled={disabled}\n      aria-readonly={readOnly}\n      onKeyDown={isDisabled ? undefined : handleKeyDown}\n    >\n      {chipsValue.map((option, index) => (\n        <Fragment key={`${typeof option.value}-${option.label}`}>\n          {renderChip(\n            {\n              children: option.label,\n              className: styles.chip,\n              value: option.value,\n              tabIndex: -1,\n              after: (\n                <Tappable\n                  Component=\"div\"\n                  interactiveAnimation=\"opacity\"\n                  onClick={(event) => handleChipRemove(event, option)}\n                  className={styles.closeIcon}\n                >\n                  <Icon16Cancel />\n                </Tappable>\n              ),\n              role: 'option',\n              'aria-selected': true,\n              'aria-posinset': index + 1,\n              'aria-setsize': valueLength,\n            },\n          )}\n        </Fragment>\n      ))}\n      <Subheadline\n        ref={inputRef}\n        aria-autocomplete=\"list\"\n        autoCapitalize=\"none\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck={false}\n        {...restProps}\n        Component=\"input\"\n        type=\"text\"\n        className={styles.input}\n        disabled={disabled}\n        readOnly={readOnly}\n        placeholder={withPlaceholder ? placeholder : undefined}\n      />\n    </div>\n  );\n});\n"],"names":["forwardRef","Fragment","getHorizontalSideByKey","Keys","classNames","getHTMLElementByChildren","getHTMLElementSiblingByDirection","useExternRef","isHTMLElement","Icon16Cancel","Tappable","Subheadline","getValueOptionByHTMLElement","renderChipDefault","MultiselectBase","ref","inputRef","className","chipsValue","onAddChipOption","onRemoveChipOption","renderChip","value","placeholder","disabled","readOnly","restProps","listRef","valueLength","length","withPlaceholder","isDisabled","handleKeyDown","event","targetEl","target","inputEl","current","defaultPrevented","lastOptionIndex","nextInputValue","isInputEl","isInputValueEmpty","key","ENTER","preventDefault","BACKSPACE","option","focus","ARROW_UP","ARROW_LEFT","ARROW_DOWN","ARROW_RIGHT","isSelectionOnFirstLetter","selectionStart","isRightSelection","foundEl","horizontalSide","children","handleChipRemove","optionToRemove","stopPropagation","handleClick","isFocused","document","activeElement","div","onClick","undefined","role","aria-orientation","aria-disabled","aria-readonly","onKeyDown","map","index","label","tabIndex","after","Component","interactiveAnimation","aria-autocomplete","autoCapitalize","autoComplete","autoCorrect","spellCheck","type"],"mappings":"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"}