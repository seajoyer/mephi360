{"version":3,"sources":["../../../../../../src/components/Layout/Tabbar/components/TabbarItem/TabbarItem.tsx"],"sourcesContent":["'use client';\n\nimport { ButtonHTMLAttributes, ReactNode } from 'react';\nimport styles from './TabbarItem.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Caption } from 'components/Typography/Caption/Caption';\n\nexport interface TabbarItemProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Indicates whether the tab is selected or active. */\n  selected?: boolean;\n  /** The text displayed on the tab. */\n  text?: string;\n  /** The icon displayed on the tab. It should be passed as a ReactNode with dimensions of 28x28. */\n  children?: ReactNode;\n}\n\n/**\n * Represents an individual tab within a `Tabbar`.\n * Each `Tabbar.Item` typically contains an icon and optional text.\n * When selected, the tab exhibit different visual styles to indicate its active state.\n *\n * The component adapts its styling based on the platform, providing a consistent look and feel across different devices.\n */\nexport const TabbarItem = ({\n  selected,\n  text,\n  children,\n  className,\n  ...restProps\n}: TabbarItemProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      Component=\"button\"\n      interactiveAnimation=\"opacity\"\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        selected && styles['wrapper--selected'],\n        className,\n      )}\n      {...restProps}\n    >\n      {hasReactNode(children) && (\n        <div className={styles.icon}>\n          {children}\n        </div>\n      )}\n      {hasReactNode(text) && (\n        <Caption\n          className={styles.text}\n          weight=\"2\"\n          level={platform === 'ios' ? '2' : '1'}\n        >\n          {text}\n        </Caption>\n      )}\n    </Tappable>\n  );\n};\n"],"names":["classNames","hasReactNode","usePlatform","Tappable","Caption","TabbarItem","selected","text","children","className","restProps","platform","Component","interactiveAnimation","div","weight","level"],"mappings":"AAAA;;;;;AAKA,SAASA,UAAU,QAAQ,oCAAqB;AAChD,SAASC,YAAY,QAAQ,oCAAqB;AAClD,SAASC,WAAW,QAAQ,mCAAoB;AAEhD,SAASC,QAAQ,QAAQ,wCAAuC;AAChE,SAASC,OAAO,QAAQ,yCAAwC;AAWhE;;;;;;CAMC,GACD,OAAO,MAAMC,aAAa;QAAC,EACzBC,QAAQ,EACRC,IAAI,EACJC,QAAQ,EACRC,SAAS,EAEO,WADbC;QAJHJ;QACAC;QACAC;QACAC;;IAGA,MAAME,WAAWT;IAEjB,qBACE,MAACC;QACCS,WAAU;QACVC,sBAAqB;QACrBJ,WAAWT,oCAETW,aAAa,kCACbL,qCACAG;OAEEC;;YAEHT,aAAaO,2BACZ,KAACM;gBAAIL,SAAS;0BACXD;;YAGJP,aAAaM,uBACZ,KAACH;gBACCK,SAAS;gBACTM,QAAO;gBACPC,OAAOL,aAAa,QAAQ,MAAM;0BAEjCJ;;;;AAKX,EAAE"}