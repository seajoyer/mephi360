{"version":3,"sources":["../../../../../src/components/Service/AppRoot/AppRoot.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, HTMLAttributes } from 'react';\nimport styles from './AppRoot.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { multipleRef } from 'helpers/react/refs';\nimport { useObjectMemo } from 'hooks/useObjectMemo';\n\nimport { AppRootContext, AppRootContextInterface } from 'components/Service/AppRoot/AppRootContext';\nimport { useAppearance } from 'components/Service/AppRoot/hooks/useAppearance';\nimport { usePlatform } from './hooks/usePlatform';\nimport { usePortalContainer } from './hooks/usePortalContainer';\n\nexport interface AppRootProps extends HTMLAttributes<HTMLDivElement> {\n  /** Application platform, determined automatically if nothing passed */\n  platform?: AppRootContextInterface['platform'];\n  /** Application appearance, determined automatically if nothing passed */\n  appearance?: AppRootContextInterface['appearance'];\n  /** Rewriting portal container for rendering, AppRoot container as default */\n  portalContainer?: AppRootContextInterface['portalContainer'];\n}\n\nexport const AppRoot = forwardRef<HTMLDivElement, AppRootProps>(({\n  platform: platformProp,\n  appearance: appearanceProp,\n  portalContainer: portalContainerProp,\n  children,\n  className,\n  ...restProps\n}, ref) => {\n  const appearance = useAppearance(appearanceProp);\n  const portalContainer = usePortalContainer(portalContainerProp);\n  const platform = usePlatform(platformProp);\n\n  const contextValue = useObjectMemo({\n    platform,\n    appearance,\n    portalContainer,\n    isRendered: true,\n  });\n\n  return (\n    <div\n      ref={multipleRef(ref, portalContainer)}\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        appearance === 'dark' && styles['wrapper--dark'],\n        className,\n      )}\n      {...restProps}\n    >\n      <AppRootContext.Provider value={contextValue}>\n        {children}\n      </AppRootContext.Provider>\n    </div>\n  );\n});\n"],"names":["AppRoot","forwardRef","ref","platform","platformProp","appearance","appearanceProp","portalContainer","portalContainerProp","children","className","restProps","useAppearance","usePortalContainer","usePlatform","contextValue","useObjectMemo","isRendered","div","multipleRef","classNames","AppRootContext","Provider","value"],"mappings":"AAAA;;;;;+BAuBaA;;;eAAAA;;;;;;;uBArB8B;4BAGhB;sBACC;+BACE;gCAE0B;+BAC1B;6BACF;oCACO;AAW5B,MAAMA,wBAAUC,IAAAA,iBAAU,EAA+B,SAO7DC;QAP8D,EAC/DC,UAAUC,YAAY,EACtBC,YAAYC,cAAc,EAC1BC,iBAAiBC,mBAAmB,EACpCC,QAAQ,EACRC,SAAS,EAEV,WADIC;QALHR;QACAE;QACAE;QACAE;QACAC;;IAGA,MAAML,aAAaO,IAAAA,4BAAa,EAACN;IACjC,MAAMC,kBAAkBM,IAAAA,sCAAkB,EAACL;IAC3C,MAAML,WAAWW,IAAAA,wBAAW,EAACV;IAE7B,MAAMW,eAAeC,IAAAA,4BAAa,EAAC;QACjCb;QACAE;QACAE;QACAU,YAAY;IACd;IAEA,qBACE,qBAACC;QACChB,KAAKiB,IAAAA,iBAAW,EAACjB,KAAKK;QACtBG,WAAWU,IAAAA,sBAAU,2BAEnBjB,aAAa,kCACbE,eAAe,mCACfK;OAEEC;kBAEJ,cAAA,qBAACU,8BAAc,CAACC,QAAQ;YAACC,OAAOR;sBAC7BN;;;AAIT"}