{"version":3,"sources":["../../../../../src/components/Service/Touch/Touch.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\n\n'use client';\n\nimport { AllHTMLAttributes, DragEvent, ElementType, MouseEvent as ReactMouseEvent, useMemo, useRef } from 'react';\n\nimport { useEnhancedEffect } from 'hooks/useEnhancedEffect';\nimport { useEventListener } from 'hooks/useEventListener';\n\nimport { coordX, coordY, getSupportedEvents, initGesture, touchEnabled } from './helpers/touch';\nimport { CustomTouchEvent, Gesture } from './helpers/types';\n\nexport interface TouchProps extends AllHTMLAttributes<HTMLElement> {\n  usePointerHover?: boolean;\n  useCapture?: boolean;\n  slideThreshold?: number;\n  noSlideClick?: boolean;\n  onEnter?: HoverHandler;\n  onLeave?: HoverHandler;\n  onStart?: TouchEventHandler;\n  onStartX?: TouchEventHandler;\n  onStartY?: TouchEventHandler;\n  onMove?: TouchEventHandler;\n  onMoveX?: TouchEventHandler;\n  onMoveY?: TouchEventHandler;\n  onEnd?: TouchEventHandler;\n  onEndX?: TouchEventHandler;\n  onEndY?: TouchEventHandler;\n  stopPropagation?: boolean;\n  Component?: ElementType;\n}\n\nexport interface TouchEvent extends Gesture {\n  originalEvent: CustomTouchEvent;\n}\n\ntype HoverHandler = (outputEvent: MouseEvent) => void;\nexport type TouchEventHandler = (e: TouchEvent) => void;\nexport type ClickHandler = (e: ReactMouseEvent<HTMLElement>) => void;\nexport type DragHandler = (e: DragEvent<HTMLElement>) => void;\n\n/**\n * This component is copied from the VKUI library for convenient handling of pointer events\n * https://github.com/VKCOM/VKUI/blob/master/packages/vkui/src/components/Touch/Touch.tsx#L65\n */\nexport const Touch = ({\n  Component = 'div',\n  onStart,\n  onStartX,\n  onStartY,\n  onMove: _onMove,\n  onMoveX,\n  onMoveY,\n  onLeave,\n  onEnter,\n  onEnd: _onEnd,\n  onEndX,\n  onEndY,\n  onClickCapture,\n  usePointerHover,\n  slideThreshold = 5,\n  useCapture = false,\n  noSlideClick = false,\n  stopPropagation = false,\n  ...restProps\n}: TouchProps) => {\n  const events = useMemo(getSupportedEvents, []);\n  const didSlide = useRef(false);\n  const gesture = useRef<Partial<Gesture> | null>(null);\n\n  const handle = (e: CustomTouchEvent, handlers: Array<TouchEventHandler | undefined | false>) => {\n    stopPropagation && e.stopPropagation();\n    handlers.forEach((cb) => {\n      const duration = Date.now() - (gesture.current?.startT?.getTime() ?? 0);\n      cb && cb({ ...(gesture.current as Gesture), duration, originalEvent: e });\n    });\n  };\n\n  const listenerParams = { capture: useCapture, passive: false };\n  const listeners = [\n    useEventListener(events[1], onMove, listenerParams),\n    useEventListener(events[2], onEnd, listenerParams),\n    useEventListener(events[3], onEnd, listenerParams),\n  ];\n\n  const subscribe = (el: HTMLElement | Document | null | undefined) => {\n    if (!el) {\n      return;\n    }\n\n    listeners.forEach((l) => l.add(el));\n  };\n\n  const unsubscribe = () => {\n    listeners.forEach((l) => l.remove());\n  };\n\n  const enterHandler = useEventListener(usePointerHover ? 'pointerenter' : 'mouseenter', onEnter);\n  const leaveHandler = useEventListener(usePointerHover ? 'pointerleave' : 'mouseleave', onLeave);\n  const startHandler = useEventListener(\n    events[0],\n    (e: CustomTouchEvent) => {\n      gesture.current = initGesture(coordX(e), coordY(e));\n\n      handle(e, [onStart, onStartX, onStartY]);\n      subscribe(\n        touchEnabled()\n          ? // Touch events fire on the initial target and won't bubble if it's removed\n        // see: #235, #1968, https://stackoverflow.com/a/45760014\n          (e.target as HTMLElement)\n          : // Mouse events fire on the element under the pointer, so we lose move / end\n        // if the pointer goes outside the container.\n        // Can be fixed by PointerEvents' setPointerCapture later\n          window.document,\n      );\n    },\n    { capture: useCapture, passive: false },\n  );\n  const containerRef = useRef();\n\n  useEnhancedEffect(() => {\n    const el = containerRef.current;\n    if (el) {\n      enterHandler.add(el);\n      leaveHandler.add(el);\n      startHandler.add(el);\n    }\n  }, [Component]);\n\n  function onMove(e: CustomTouchEvent) {\n    const { isPressed, isX, isY, startX = 0, startY = 0 } = gesture.current ?? {};\n\n    if (isPressed) {\n      const clientX = coordX(e);\n      const clientY = coordY(e);\n\n      // Offsets\n      const shiftX = clientX - startX;\n      const shiftY = clientY - startY;\n\n      // Absolute offset values\n      const shiftXAbs = Math.abs(shiftX);\n      const shiftYAbs = Math.abs(shiftY);\n\n      // If determining multitouch, interrupt the gesture\n      if (!!e.touches && e.touches.length > 1) {\n        onEnd(e);\n        return;\n      }\n\n      // If we haven't determined yet\n      if (!isX && !isY) {\n        const willBeX = shiftXAbs >= slideThreshold && shiftXAbs > shiftYAbs;\n        const willBeY = shiftYAbs >= slideThreshold && shiftYAbs > shiftXAbs;\n        const willBeSlidedX = willBeX && (!!onMoveX || !!_onMove);\n        const willBeSlidedY = willBeY && (!!onMoveY || !!_onMove);\n\n        if (gesture.current) {\n          Object.assign(gesture.current, {\n            isY: willBeY,\n            isX: willBeX,\n            isSlideX: willBeSlidedX,\n            isSlideY: willBeSlidedY,\n            isSlide: willBeSlidedX || willBeSlidedY,\n          });\n        }\n      }\n\n      if (gesture.current?.isSlide) {\n        Object.assign(gesture.current, {\n          clientX,\n          clientY,\n          shiftX,\n          shiftY,\n          shiftXAbs,\n          shiftYAbs,\n        });\n\n        handle(e, [\n          _onMove,\n          gesture.current.isSlideX && onMoveX,\n          gesture.current.isSlideY && onMoveY,\n        ]);\n      }\n    }\n  }\n\n  function onEnd(e: CustomTouchEvent) {\n    const { isPressed, isSlide, isSlideX, isSlideY } = gesture.current ?? {};\n\n    if (isPressed) {\n      handle(e, [_onEnd, isSlideY && onEndY, isSlideX && onEndX]);\n    }\n\n    const isTouchEnabled = touchEnabled();\n\n    if (isTouchEnabled && isSlide) {\n      // If it's a touch device and touchmove was detected,\n      // the click event won't be triggered\n      didSlide.current = false;\n    } else {\n      didSlide.current = Boolean(isSlide);\n    }\n    gesture.current = {};\n\n    // If it was a touch event, simulate hover cancellation\n    if (isTouchEnabled) {\n      onLeave && onLeave(e);\n    }\n\n    unsubscribe();\n  }\n\n  /**\n   * Dragstart event handler\n   * Cancels the native browser behavior for nested links and images\n   */\n  const onDragStart = (e: DragEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement;\n    if (target.tagName === 'A' || target.tagName === 'IMG') {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Click event handler for the component\n   * Cancels the transition through the nested link if a swipe was detected\n   */\n  const postGestureClick: typeof onClickCapture = (e) => {\n    if (!didSlide.current) {\n      onClickCapture && onClickCapture(e);\n      return;\n    }\n\n    if (noSlideClick) {\n      e.stopPropagation();\n      e.preventDefault();\n    } else {\n      onClickCapture && onClickCapture(e);\n    }\n\n    didSlide.current = false;\n  };\n\n  return (\n    <Component\n      {...restProps}\n      onDragStart={onDragStart}\n      onClickCapture={postGestureClick}\n      ref={containerRef}\n    />\n  );\n};\n"],"names":["Touch","Component","onStart","onStartX","onStartY","onMove","_onMove","onMoveX","onMoveY","onLeave","onEnter","onEnd","_onEnd","onEndX","onEndY","onClickCapture","usePointerHover","slideThreshold","useCapture","noSlideClick","stopPropagation","restProps","events","useMemo","getSupportedEvents","didSlide","useRef","gesture","handle","e","handlers","forEach","cb","duration","Date","now","current","startT","getTime","originalEvent","listenerParams","capture","passive","listeners","useEventListener","subscribe","el","l","add","unsubscribe","remove","enterHandler","leaveHandler","startHandler","initGesture","coordX","coordY","touchEnabled","target","window","document","containerRef","useEnhancedEffect","isPressed","isX","isY","startX","startY","clientX","clientY","shiftX","shiftY","shiftXAbs","Math","abs","shiftYAbs","touches","length","willBeX","willBeY","willBeSlidedX","willBeSlidedY","Object","assign","isSlideX","isSlideY","isSlide","isTouchEnabled","Boolean","onDragStart","tagName","preventDefault","postGestureClick","ref"],"mappings":"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"}