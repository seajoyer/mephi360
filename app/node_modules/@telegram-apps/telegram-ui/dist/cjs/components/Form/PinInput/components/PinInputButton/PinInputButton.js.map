{"version":3,"sources":["../../../../../../../src/components/Form/PinInput/components/PinInputButton/PinInputButton.tsx"],"sourcesContent":["import { ButtonHTMLAttributes } from 'react';\nimport styles from './PinInputButton.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { LargeTitle } from 'components/Typography/LargeTitle/LargeTitle';\nimport { Title } from 'components/Typography/Title/Title';\nimport { TypographyProps } from 'components/Typography/Typography';\n\nexport interface PinInputButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {}\n\nexport const ButtonTypography = (props: TypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === 'ios') {\n    return <LargeTitle {...props} />;\n  }\n\n  return <Title {...props} />;\n};\n\nexport const PinInputButton = ({\n  children,\n  ...restProps\n}: PinInputButtonProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      Component=\"button\"\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n      )}\n      {...restProps}\n    >\n      <ButtonTypography>{children}</ButtonTypography>\n    </Tappable>\n  );\n};\n"],"names":["ButtonTypography","PinInputButton","props","platform","usePlatform","LargeTitle","Title","children","restProps","Tappable","Component","className","classNames"],"mappings":";;;;;;;;;;;IAaaA,gBAAgB;eAAhBA;;IAUAC,cAAc;eAAdA;;;;;;;4BApBc;6BACC;0BAEH;4BACE;uBACL;AAKf,MAAMD,mBAAmB,CAACE;IAC/B,MAAMC,WAAWC,IAAAA,wBAAW;IAE5B,IAAID,aAAa,OAAO;QACtB,qBAAO,qBAACE,sBAAU,uBAAKH;IACzB;IAEA,qBAAO,qBAACI,YAAK,uBAAKJ;AACpB;AAEO,MAAMD,iBAAiB;QAAC,EAC7BM,QAAQ,EAEY,WADjBC;QADHD;;IAGA,MAAMJ,WAAWC,IAAAA,wBAAW;IAE5B,qBACE,qBAACK,kBAAQ;QACPC,WAAU;QACVC,WAAWC,IAAAA,sBAAU,2BAEnBT,aAAa;OAEXK;kBAEJ,cAAA,qBAACR;sBAAkBO;;;AAGzB"}