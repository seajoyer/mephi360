{"version":3,"sources":["../../../../../../../src/components/Blocks/Cell/components/Info/Info.tsx"],"sourcesContent":["import { HTMLAttributes, ReactElement } from 'react';\nimport styles from './Info.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { hasReactNode } from 'helpers/react/node';\n\nimport { AvatarStackProps } from 'components/Blocks/AvatarStack/AvatarStack';\nimport { Subheadline } from 'components/Typography/Subheadline/Subheadline';\nimport { Text } from 'components/Typography/Text/Text';\n\nexport interface InfoProps extends HTMLAttributes<HTMLDivElement> {\n  /** Determines the type of content to display, affecting the layout and styling. */\n  type: 'text' | 'avatarStack';\n  /** Text content for the component, utilized when the `type` is set to 'text'. */\n  subtitle?: string;\n  /** An `AvatarStack` component to display when the `type` is 'avatarStack', showcasing multiple avatars. */\n  avatarStack?: ReactElement<AvatarStackProps>;\n}\n\nconst typeStyles = {\n  text: styles['wrapper--text'],\n  avatarStack: styles['wrapper--avatarStack'],\n};\n\n/**\n * A versatile component designed to display either text information with an optional subtitle or a stack of avatars.\n * It adapts its structure based on the `type` prop, allowing for a wide range of use cases within user interfaces.\n */\nexport const Info = ({\n  type = 'text',\n  subtitle,\n  avatarStack,\n  children,\n  className,\n  ...restProps\n}: InfoProps) => {\n  const isAvatarStack = type === 'avatarStack';\n  const isText = type === 'text';\n\n  return (\n    <div\n      className={classNames(\n        styles.wrapper,\n        typeStyles[type],\n        className,\n      )}\n      {...restProps}\n    >\n      {isAvatarStack && hasReactNode(avatarStack) && avatarStack}\n      {hasReactNode(children) && <Text>{children}</Text>}\n      {isText && hasReactNode(subtitle) && (\n        <Subheadline className={styles.subtitle} level=\"2\" plain={false}>\n          {subtitle}\n        </Subheadline>\n      )}\n    </div>\n  );\n};\n"],"names":["Info","typeStyles","text","avatarStack","type","subtitle","children","className","restProps","isAvatarStack","isText","div","classNames","hasReactNode","Text","Subheadline","level","plain"],"mappings":";;;;+BA4BaA;;;eAAAA;;;;;;;4BAzBc;sBACE;6BAGD;sBACP;AAWrB,MAAMC,aAAa;IACjBC,IAAI;IACJC,WAAW;AACb;AAMO,MAAMH,OAAO;QAAC,EACnBI,OAAO,MAAM,EACbC,QAAQ,EACRF,WAAW,EACXG,QAAQ,EACRC,SAAS,EAEC,WADPC;QALHJ;QACAC;QACAF;QACAG;QACAC;;IAGA,MAAME,gBAAgBL,SAAS;IAC/B,MAAMM,SAASN,SAAS;IAExB,qBACE,sBAACO;QACCJ,WAAWK,IAAAA,sBAAU,2BAEnBX,UAAU,CAACG,KAAK,EAChBG;OAEEC;;YAEHC,iBAAiBI,IAAAA,kBAAY,EAACV,gBAAgBA;YAC9CU,IAAAA,kBAAY,EAACP,2BAAa,qBAACQ,UAAI;0BAAER;;YACjCI,UAAUG,IAAAA,kBAAY,EAACR,2BACtB,qBAACU,wBAAW;gBAACR,SAAS;gBAAmBS,OAAM;gBAAIC,OAAO;0BACvDZ;;;;AAKX"}