{"version":3,"sources":["../../../../../src/components/Overlays/Modal/Modal.tsx"],"sourcesContent":["'use client';\n\nimport {\n  forwardRef,\n  ForwardRefExoticComponent,\n  HTMLAttributes,\n  ReactNode,\n  RefAttributes,\n  useEffect,\n  useState,\n} from 'react';\nimport styles from './Modal.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { useAppRootContext } from 'hooks/useAppRootContext';\n\nimport { Drawer } from '@xelene/vaul-with-scroll-fix';\n\nimport { ModalClose } from './components/ModalClose/ModalClose';\nimport { ModalHeader } from './components/ModalHeader/ModalHeader';\nimport { ModalOverlay } from './components/ModalOverlay/ModalOverlay';\n\nexport interface ModalProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onAnimationEnd'> {\n  /** Controls the displayed state of the modal, enabling external management. */\n  open?: boolean;\n  /** Callback fired upon state change, facilitating open/close state synchronization. */\n  onOpenChange?: (open: boolean) => void;\n  /** Custom header component to display at the top of the modal. */\n  header?: ReactNode;\n  /** Custom component for the modal's overlay backdrop. */\n  overlayComponent?: ReactNode;\n  /** Component or element used to trigger the modal's visibility. */\n  trigger?: ReactNode;\n  /** Enables nesting within another drawer component, allowing for hierarchical structures. */\n  nested?: boolean;\n  /** Threshold for swipe actions to trigger modal closure, expressed as a decimal between 0 and 1. */\n  closeThreshold?: number;\n  /** Debounce duration after scrolling within the modal before it can be closed through swipe actions. */\n  scrollLockTimeout?: number;\n  /** Governs interaction with background elements when the modal is open. */\n  modal?: boolean;\n  /** Prevents automatic scroll position restoration when the modal closes, preserving user context. */\n  preventScrollRestoration?: boolean;\n  /** Defines snap points for modal positioning, supporting percentages of screen height or pixel values. */\n  snapPoints?: (number | string)[];\n  /** Snap point index at which the overlay begins to fade, enhancing visual cues for modal depth. */\n  fadeFromIndex?: never;\n  /** Determines if the modal can be closed by user interactions */\n  dismissible?: boolean;\n}\n\ntype ModalWithComponents = ForwardRefExoticComponent<ModalProps & RefAttributes<HTMLDivElement>> & {\n  Header: typeof ModalHeader;\n  Overlay: typeof Drawer.Overlay;\n  Close: typeof ModalClose;\n};\n\n/**\n * Modal component, providing a flexible dialog framework with customizable content and interaction models.\n * It leverages the Drawer component from 'vaul' for its base functionality, enhanced with additional properties\n * and behaviors specific to modal dialogues, such as overlay management and nested modals.\n */\nexport const Modal = forwardRef<HTMLDivElement, ModalProps>(({\n  overlayComponent = <ModalOverlay />,\n  open,\n  onOpenChange,\n  header,\n  className,\n  children,\n  nested,\n  trigger,\n  closeThreshold,\n  scrollLockTimeout,\n  snapPoints,\n  fadeFromIndex,\n  modal,\n  preventScrollRestoration,\n  dismissible,\n  ...restProps\n}, ref) => {\n  const container = useAppRootContext();\n  const [portal, setPortal] = useState(container.portalContainer?.current);\n\n  // This is internal optimization for AppRoot\n  // React sets ref to normal value only after the first render\n  // If we will have this logic inside the AppRoot component, then all tree will be re-rendered\n  useEffect(() => {\n    setPortal(container.portalContainer?.current);\n  }, [container.portalContainer]);\n\n  const Component = nested ? Drawer.NestedRoot : Drawer.Root;\n  return (\n    <Component\n      open={open}\n      onOpenChange={onOpenChange}\n      closeThreshold={closeThreshold}\n      scrollLockTimeout={scrollLockTimeout}\n      snapPoints={snapPoints}\n      fadeFromIndex={fadeFromIndex}\n      modal={modal}\n      preventScrollRestoration={preventScrollRestoration}\n      dismissible={dismissible}\n    >\n      {trigger && <Drawer.Trigger asChild>{trigger}</Drawer.Trigger>}\n      <Drawer.Portal container={portal}>\n        {overlayComponent}\n        <Drawer.Content\n          ref={ref}\n          className={classNames(styles.wrapper, className)}\n          {...restProps}\n        >\n          {header}\n          <div className={styles.body}>\n            {children}\n          </div>\n        </Drawer.Content>\n      </Drawer.Portal>\n    </Component>\n  );\n}) as ModalWithComponents;\n\nModal.Header = ModalHeader;\nModal.Overlay = ModalOverlay;\nModal.Close = ModalClose;\n"],"names":["Modal","forwardRef","ref","overlayComponent","ModalOverlay","open","onOpenChange","header","className","children","nested","trigger","closeThreshold","scrollLockTimeout","snapPoints","fadeFromIndex","modal","preventScrollRestoration","dismissible","restProps","container","useAppRootContext","portal","setPortal","useState","portalContainer","current","useEffect","Component","Drawer","NestedRoot","Root","Trigger","asChild","Portal","Content","classNames","div","Header","ModalHeader","Overlay","Close","ModalClose"],"mappings":"AAAA;;;;;+BA8DaA;;;eAAAA;;;;;;;uBApDN;4BAGoB;mCACO;mCAEX;4BAEI;6BACC;8BACC;AA0CtB,MAAMA,sBAAQC,IAAAA,iBAAU,EAA6B,SAiBzDC;QAjB0D,EAC3DC,iCAAmB,qBAACC,0BAAY,KAAG,EACnCC,IAAI,EACJC,YAAY,EACZC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,cAAc,EACdC,iBAAiB,EACjBC,UAAU,EACVC,aAAa,EACbC,KAAK,EACLC,wBAAwB,EACxBC,WAAW,EAEZ,WADIC;QAfHhB;QACAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;QAIqCE;IADrC,MAAMA,YAAYC,IAAAA,oCAAiB;IACnC,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,GAACJ,6BAAAA,UAAUK,eAAe,cAAzBL,iDAAAA,2BAA2BM,OAAO;IAEvE,4CAA4C;IAC5C,6DAA6D;IAC7D,6FAA6F;IAC7FC,IAAAA,gBAAS,EAAC;YACEP;QAAVG,WAAUH,6BAAAA,UAAUK,eAAe,cAAzBL,iDAAAA,2BAA2BM,OAAO;IAC9C,GAAG;QAACN,UAAUK,eAAe;KAAC;IAE9B,MAAMG,YAAYlB,SAASmB,yBAAM,CAACC,UAAU,GAAGD,yBAAM,CAACE,IAAI;IAC1D,qBACE,sBAACH;QACCvB,MAAMA;QACNC,cAAcA;QACdM,gBAAgBA;QAChBC,mBAAmBA;QACnBC,YAAYA;QACZC,eAAeA;QACfC,OAAOA;QACPC,0BAA0BA;QAC1BC,aAAaA;;YAEZP,yBAAW,qBAACkB,yBAAM,CAACG,OAAO;gBAACC,OAAO;0BAAEtB;;0BACrC,sBAACkB,yBAAM,CAACK,MAAM;gBAACd,WAAWE;;oBACvBnB;kCACD,sBAAC0B,yBAAM,CAACM,OAAO;wBACbjC,KAAKA;wBACLM,WAAW4B,IAAAA,sBAAU,2BAAiB5B;uBAClCW;;4BAEHZ;0CACD,qBAAC8B;gCAAI7B,SAAS;0CACXC;;;;;;;;AAMb;AAEAT,MAAMsC,MAAM,GAAGC,wBAAW;AAC1BvC,MAAMwC,OAAO,GAAGpC,0BAAY;AAC5BJ,MAAMyC,KAAK,GAAGC,sBAAU"}