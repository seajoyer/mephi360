{"version":3,"sources":["../../../../../../../src/components/Navigation/TabsList/components/TabsItem/TabsItem.tsx"],"sourcesContent":["'use client';\n\nimport { ButtonHTMLAttributes } from 'react';\nimport styles from './TabsItem.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Text } from 'components/Typography/Text/Text';\n\nexport interface TabsItemProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Indicates if the tab item is currently selected. */\n  selected?: boolean;\n}\n\n/**\n * Tabs.Item component represents an individual tab within a TabsList.\n * It can be interactively selected to display associated content.\n */\nexport const TabsItem = ({\n  selected,\n  className,\n  children,\n  ...restProps\n}: TabsItemProps) => {\n  const platform = usePlatform();\n  const iosWeight = selected ? '1' : '2';\n\n  return (\n    <Tappable\n      role=\"tab\"\n      Component=\"button\"\n      className={classNames(\n        styles.wrapper,\n        selected && styles['wrapper--selected'],\n        className,\n      )}\n      {...restProps}\n    >\n      <Text\n        weight={platform === 'ios' ? iosWeight : '2'}\n      >\n        {children}\n      </Text>\n    </Tappable>\n  );\n};\n"],"names":["TabsItem","selected","className","children","restProps","platform","usePlatform","iosWeight","Tappable","role","Component","classNames","Text","weight"],"mappings":"AAAA;;;;;+BAoBaA;;;eAAAA;;;;;;;4BAfc;6BACC;0BAEH;sBACJ;AAWd,MAAMA,WAAW;QAAC,EACvBC,QAAQ,EACRC,SAAS,EACTC,QAAQ,EAEM,WADXC;QAHHH;QACAC;QACAC;;IAGA,MAAME,WAAWC,IAAAA,wBAAW;IAC5B,MAAMC,YAAYN,WAAW,MAAM;IAEnC,qBACE,qBAACO,kBAAQ;QACPC,MAAK;QACLC,WAAU;QACVR,WAAWS,IAAAA,sBAAU,2BAEnBV,qCACAC;OAEEE;kBAEJ,cAAA,qBAACQ,UAAI;YACHC,QAAQR,aAAa,QAAQE,YAAY;sBAExCJ;;;AAIT"}