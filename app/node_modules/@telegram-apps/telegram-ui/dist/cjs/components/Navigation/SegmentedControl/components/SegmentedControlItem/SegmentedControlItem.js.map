{"version":3,"sources":["../../../../../../../src/components/Navigation/SegmentedControl/components/SegmentedControlItem/SegmentedControlItem.tsx"],"sourcesContent":["'use client';\n\nimport { ButtonHTMLAttributes } from 'react';\nimport styles from './SegmentedControlItem.module.css';\n\nimport { classNames } from 'helpers/classNames';\nimport { usePlatform } from 'hooks/usePlatform';\n\nimport { Tappable } from 'components/Service/Tappable/Tappable';\nimport { Caption } from 'components/Typography/Caption/Caption';\n\nexport interface SegmentedControlItemProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Whether the item is selected. Used by the parent SegmentedControl to style accordingly. */\n  selected?: boolean;\n}\n\n/**\n * A component representing an individual item within a SegmentedControl.\n * It leverages the Tappable component for handling interactions and supports platform-specific styles.\n */\nexport const SegmentedControlItem = ({\n  selected,\n  className,\n  children,\n  ...restProps\n}: SegmentedControlItemProps) => {\n  const platform = usePlatform();\n  return (\n    <Tappable\n      role=\"tab\"\n      Component=\"button\"\n      className={classNames(\n        styles.wrapper,\n        platform === 'ios' && styles['wrapper--ios'],\n        className,\n      )}\n      {...restProps}\n    >\n      <Caption weight={selected ? '2' : '3'}>{children}</Caption>\n    </Tappable>\n  );\n};\n"],"names":["SegmentedControlItem","selected","className","children","restProps","platform","usePlatform","Tappable","role","Component","classNames","Caption","weight"],"mappings":"AAAA;;;;;+BAoBaA;;;eAAAA;;;;;;;4BAfc;6BACC;0BAEH;yBACD;AAWjB,MAAMA,uBAAuB;QAAC,EACnCC,QAAQ,EACRC,SAAS,EACTC,QAAQ,EAEkB,WADvBC;QAHHH;QACAC;QACAC;;IAGA,MAAME,WAAWC,IAAAA,wBAAW;IAC5B,qBACE,qBAACC,kBAAQ;QACPC,MAAK;QACLC,WAAU;QACVP,WAAWQ,IAAAA,sBAAU,2BAEnBL,aAAa,kCACbH;OAEEE;kBAEJ,cAAA,qBAACO,gBAAO;YAACC,QAAQX,WAAW,MAAM;sBAAME;;;AAG9C"}